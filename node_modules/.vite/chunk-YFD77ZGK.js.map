{
  "version": 3,
  "sources": ["../@builder.io/tsc-out/src/core/util/qdev.js", "../@builder.io/tsc-out/src/core/util/flyweight.js", "../@builder.io/tsc-out/src/core/util/log.js", "../@builder.io/tsc-out/src/core/assert/assert.js", "../@builder.io/tsc-out/src/core/util/markers.js", "../@builder.io/tsc-out/src/core/util/dom.js", "../@builder.io/tsc-out/src/core/use/use-core.js", "../@builder.io/tsc-out/src/core/import/qrl-class.js", "../@builder.io/tsc-out/src/core/util/array.js", "../@builder.io/tsc-out/src/core/util/promises.js", "../@builder.io/tsc-out/src/core/platform/platform.js", "../@builder.io/tsc-out/src/core/use/use-host-element.public.js", "../@builder.io/tsc-out/src/core/util/types.js", "../@builder.io/tsc-out/src/core/error/stringify.js", "../@builder.io/tsc-out/src/core/error/error.js", "../@builder.io/tsc-out/src/core/util/element.js", "../@builder.io/tsc-out/src/core/object/store.js", "../@builder.io/tsc-out/src/core/props/props-obj-map.js", "../@builder.io/tsc-out/src/core/json/q-json.js", "../@builder.io/tsc-out/src/core/util/case.js", "../@builder.io/tsc-out/src/core/util/stringify.js", "../@builder.io/tsc-out/src/core/props/props-on.js", "../@builder.io/tsc-out/src/core/props/props.js", "../@builder.io/tsc-out/src/core/render/jsx/host.public.js", "../@builder.io/tsc-out/src/core/import/qrl.public.js", "../@builder.io/tsc-out/src/core/render/render.js", "../@builder.io/tsc-out/src/core/util/hash_code.js", "../@builder.io/tsc-out/src/core/component/qrl-styles.js", "../@builder.io/tsc-out/src/core/render/jsx/jsx-runtime.js", "../@builder.io/tsc-out/src/core/component/component-ctx.js", "../@builder.io/tsc-out/src/core/render/cursor.js", "../@builder.io/tsc-out/src/core/render/notify-render.js", "../@builder.io/tsc-out/src/core/object/q-object.js", "../@builder.io/tsc-out/src/core/use/use-subscriber.js", "../@builder.io/tsc-out/src/core/import/qrl.js", "../@builder.io/tsc-out/src/core/component/component.public.js", "../@builder.io/tsc-out/src/core/object/store.public.js", "../@builder.io/tsc-out/src/core/use/use-props.public.js", "../@builder.io/tsc-out/src/core/watch/watch.js", "../@builder.io/tsc-out/src/core/watch/watch.public.js", "../@builder.io/tsc-out/src/core/render/jsx/async.public.js", "../@builder.io/tsc-out/src/core/render/jsx/factory.js", "../@builder.io/tsc-out/src/core/render/jsx/slot.public.js", "../@builder.io/tsc-out/src/core/version.js", "../@builder.io/tsc-out/src/core/render/render.public.js", "../@builder.io/tsc-out/src/core/use/use-document.public.js", "../@builder.io/tsc-out/src/core/use/use-event.public.js", "../@builder.io/tsc-out/src/core/use/use-url.public.js", "../@builder.io/tsc-out/src/core/use/use-lexical-scope.public.js", "../@builder.io/tsc-out/src/core/use/use-store.public.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\n/*@__PURE__*/ ((gbl) => {\n    // ensures unit tests have globalThis on Node10\n    // this will be removed from production builds\n    if (typeof globalThis === 'undefined') {\n        gbl.globalThis = gbl;\n    }\n})(typeof global !== 'undefined'\n    ? global\n    : typeof window !== 'undefined'\n        ? window\n        : typeof self !== 'undefined'\n            ? self\n            : {});\n// minification can replace the `globalThis.qDev` with `false`\n// which will remove all dev code within from the build\nexport const qDev = globalThis.qDev !== false;\nexport const qTest = globalThis.describe !== undefined;\nexport const qGlobal = globalThis;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicWRldi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9xZGV2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILGFBQWEsQ0FBQyxDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUU7SUFDMUIsK0NBQStDO0lBQy9DLDhDQUE4QztJQUM5QyxJQUFJLE9BQU8sVUFBVSxLQUFLLFdBQVcsRUFBRTtRQUNyQyxHQUFHLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQztLQUN0QjtBQUNILENBQUMsQ0FBQyxDQUNBLE9BQU8sTUFBTSxLQUFLLFdBQVc7SUFDM0IsQ0FBQyxDQUFDLE1BQU07SUFDUixDQUFDLENBQUMsT0FBTyxNQUFNLEtBQUssV0FBVztRQUMvQixDQUFDLENBQUMsTUFBTTtRQUNSLENBQUMsQ0FBQyxPQUFPLElBQUksS0FBSyxXQUFXO1lBQzdCLENBQUMsQ0FBQyxJQUFJO1lBQ04sQ0FBQyxDQUFDLEVBQUUsQ0FDUCxDQUFDO0FBRUYsOERBQThEO0FBQzlELHVEQUF1RDtBQUN2RCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUksVUFBa0IsQ0FBQyxJQUFJLEtBQUssS0FBSyxDQUFDO0FBQ3ZELE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBSSxVQUFrQixDQUFDLFFBQVEsS0FBSyxTQUFTLENBQUM7QUFDaEUsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLFVBQWlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQnVpbGRlci5pbywgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9CdWlsZGVySU8vcXdpay9ibG9iL21haW4vTElDRU5TRVxuICovXG5cbi8qQF9fUFVSRV9fKi8gKChnYmw6IGFueSkgPT4ge1xuICAvLyBlbnN1cmVzIHVuaXQgdGVzdHMgaGF2ZSBnbG9iYWxUaGlzIG9uIE5vZGUxMFxuICAvLyB0aGlzIHdpbGwgYmUgcmVtb3ZlZCBmcm9tIHByb2R1Y3Rpb24gYnVpbGRzXG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBnYmwuZ2xvYmFsVGhpcyA9IGdibDtcbiAgfVxufSkoXG4gIHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnXG4gICAgPyBnbG9iYWxcbiAgICA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnXG4gICAgPyB3aW5kb3dcbiAgICA6IHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJ1xuICAgID8gc2VsZlxuICAgIDoge31cbik7XG5cbi8vIG1pbmlmaWNhdGlvbiBjYW4gcmVwbGFjZSB0aGUgYGdsb2JhbFRoaXMucURldmAgd2l0aCBgZmFsc2VgXG4vLyB3aGljaCB3aWxsIHJlbW92ZSBhbGwgZGV2IGNvZGUgd2l0aGluIGZyb20gdGhlIGJ1aWxkXG5leHBvcnQgY29uc3QgcURldiA9IChnbG9iYWxUaGlzIGFzIGFueSkucURldiAhPT0gZmFsc2U7XG5leHBvcnQgY29uc3QgcVRlc3QgPSAoZ2xvYmFsVGhpcyBhcyBhbnkpLmRlc2NyaWJlICE9PSB1bmRlZmluZWQ7XG5leHBvcnQgY29uc3QgcUdsb2JhbCA9IGdsb2JhbFRoaXMgYXMgYW55O1xuIl19", "/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { qDev } from './qdev';\nexport const EMPTY_ARRAY = [];\nexport const EMPTY_OBJ = {};\nif (qDev) {\n    Object.freeze(EMPTY_ARRAY);\n    Object.freeze(EMPTY_OBJ);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmx5d2VpZ2h0LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2ZseXdlaWdodC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRTlCLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxFQUFFLENBQUM7QUFDOUIsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQztBQUU1QixJQUFJLElBQUksRUFBRTtJQUNSLE1BQU0sQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDM0IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztDQUMxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgcURldiB9IGZyb20gJy4vcWRldic7XG5cbmV4cG9ydCBjb25zdCBFTVBUWV9BUlJBWSA9IFtdO1xuZXhwb3J0IGNvbnN0IEVNUFRZX09CSiA9IHt9O1xuXG5pZiAocURldikge1xuICBPYmplY3QuZnJlZXplKEVNUFRZX0FSUkFZKTtcbiAgT2JqZWN0LmZyZWV6ZShFTVBUWV9PQkopO1xufVxuIl19", "import { qDev } from './qdev';\nconst STYLE = qDev\n    ? `background: #564CE0; color: white; padding: 2px 3px; border-radius: 2px; font-size: 0.8em;`\n    : '';\nexport const logError = (message, ...optionalParams) => {\n    // eslint-disable-next-line no-console\n    console.error('%cQWIK ERROR', STYLE, message, ...optionalParams);\n};\nexport const logWarn = (message, ...optionalParams) => {\n    // eslint-disable-next-line no-console\n    console.warn('%cQWIK WARN', STYLE, message, ...optionalParams);\n};\nexport const logDebug = (message, ...optionalParams) => {\n    // eslint-disable-next-line no-console\n    console.debug('%cQWIK', STYLE, message, ...optionalParams);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2xvZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRTlCLE1BQU0sS0FBSyxHQUFHLElBQUk7SUFDaEIsQ0FBQyxDQUFDLDRGQUE0RjtJQUM5RixDQUFDLENBQUMsRUFBRSxDQUFDO0FBRVAsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLENBQUMsT0FBYSxFQUFFLEdBQUcsY0FBcUIsRUFBRSxFQUFFO0lBQ2xFLHNDQUFzQztJQUN0QyxPQUFPLENBQUMsS0FBSyxDQUFDLGNBQWMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7QUFDbkUsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLENBQUMsT0FBYSxFQUFFLEdBQUcsY0FBcUIsRUFBRSxFQUFFO0lBQ2pFLHNDQUFzQztJQUN0QyxPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7QUFDakUsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLENBQUMsT0FBYSxFQUFFLEdBQUcsY0FBcUIsRUFBRSxFQUFFO0lBQ2xFLHNDQUFzQztJQUN0QyxPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7QUFDN0QsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcURldiB9IGZyb20gJy4vcWRldic7XG5cbmNvbnN0IFNUWUxFID0gcURldlxuICA/IGBiYWNrZ3JvdW5kOiAjNTY0Q0UwOyBjb2xvcjogd2hpdGU7IHBhZGRpbmc6IDJweCAzcHg7IGJvcmRlci1yYWRpdXM6IDJweDsgZm9udC1zaXplOiAwLjhlbTtgXG4gIDogJyc7XG5cbmV4cG9ydCBjb25zdCBsb2dFcnJvciA9IChtZXNzYWdlPzogYW55LCAuLi5vcHRpb25hbFBhcmFtczogYW55W10pID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgY29uc29sZS5lcnJvcignJWNRV0lLIEVSUk9SJywgU1RZTEUsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbn07XG5cbmV4cG9ydCBjb25zdCBsb2dXYXJuID0gKG1lc3NhZ2U/OiBhbnksIC4uLm9wdGlvbmFsUGFyYW1zOiBhbnlbXSkgPT4ge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICBjb25zb2xlLndhcm4oJyVjUVdJSyBXQVJOJywgU1RZTEUsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbn07XG5cbmV4cG9ydCBjb25zdCBsb2dEZWJ1ZyA9IChtZXNzYWdlPzogYW55LCAuLi5vcHRpb25hbFBhcmFtczogYW55W10pID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgY29uc29sZS5kZWJ1ZygnJWNRV0lLJywgU1RZTEUsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbn07XG4iXX0=", "/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { logError } from '../util/log';\nimport { qDev } from '../util/qdev';\nexport function assertDefined(value, text) {\n    if (qDev) {\n        if (value != null)\n            return;\n        throw newError(text || 'Expected defined value.');\n    }\n}\nexport function assertNotPromise(value, text) {\n    if (qDev) {\n        if (!(value instanceof Promise))\n            return;\n        throw newError(text || 'Expected defined value.');\n    }\n}\nexport function assertDefinedAndNotPromise(value, text) {\n    if (qDev) {\n        assertDefined(value, text);\n        assertNotPromise(value, text);\n    }\n}\nexport function assertInstanceOf(value, type, text) {\n    if (qDev) {\n        if (value instanceof type)\n            return;\n        throw newError(text || `Expected value '${value}' to be instance of '${type}' but was '${typeOf(value)}'.`);\n    }\n}\nexport function assertString(value, text) {\n    if (qDev) {\n        if (typeof value === 'string')\n            return;\n        throw newError(text || `Expected value '${value}' to be 'string' but was '${typeOf(value)}'.`);\n    }\n}\nexport function assertNotEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 !== value2)\n            return;\n        throw newError(text || `Expected '${value1}' !== '${value2}'.`);\n    }\n}\nexport function assertEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 === value2)\n            return;\n        throw newError(text || `Expected '${value1}' === '${value2}'.`);\n    }\n}\nexport function assertLessOrEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 <= value2)\n            return;\n        throw newError(text || `Expected '${value1}' <= '${value2}'.`);\n    }\n}\nexport function assertLess(value1, value2, text) {\n    if (qDev) {\n        if (value1 < value2)\n            return;\n        throw newError(text || `Expected '${value1}' < '${value2}'.`);\n    }\n}\nexport function assertGreaterOrEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 >= value2)\n            return;\n        throw newError(text || `Expected '${value1}' >= '${value2}'.`);\n    }\n}\nexport function assertGreater(value1, value2, text) {\n    if (qDev) {\n        if (value1 > value2)\n            return;\n        throw newError(text || `Expected '${value1}' > '${value2}'.`);\n    }\n}\nfunction typeOf(value) {\n    var _a;\n    if (value === null)\n        return 'null';\n    const type = typeof value;\n    if (type === 'object') {\n        return ((_a = value === null || value === void 0 ? void 0 : value.constructor) === null || _a === void 0 ? void 0 : _a.name) || '<unknown>';\n    }\n    else {\n        return type;\n    }\n}\nfunction newError(text) {\n    debugger; // eslint-disable-line no-debugger\n    const error = new Error(text);\n    logError(error); // eslint-disable-line no-console\n    return error;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9hc3NlcnQvYXNzZXJ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDdkMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUVwQyxNQUFNLFVBQVUsYUFBYSxDQUFDLEtBQVUsRUFBRSxJQUFhO0lBQ3JELElBQUksSUFBSSxFQUFFO1FBQ1IsSUFBSSxLQUFLLElBQUksSUFBSTtZQUFFLE9BQU87UUFDMUIsTUFBTSxRQUFRLENBQUMsSUFBSSxJQUFJLHlCQUF5QixDQUFDLENBQUM7S0FDbkQ7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLEtBQVUsRUFBRSxJQUFhO0lBQ3hELElBQUksSUFBSSxFQUFFO1FBQ1IsSUFBSSxDQUFDLENBQUMsS0FBSyxZQUFZLE9BQU8sQ0FBQztZQUFFLE9BQU87UUFDeEMsTUFBTSxRQUFRLENBQUMsSUFBSSxJQUFJLHlCQUF5QixDQUFDLENBQUM7S0FDbkQ7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLDBCQUEwQixDQUFDLEtBQVUsRUFBRSxJQUFhO0lBQ2xFLElBQUksSUFBSSxFQUFFO1FBQ1IsYUFBYSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMzQixnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDL0I7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLEtBQVUsRUFBRSxJQUFTLEVBQUUsSUFBYTtJQUNuRSxJQUFJLElBQUksRUFBRTtRQUNSLElBQUksS0FBSyxZQUFZLElBQUk7WUFBRSxPQUFPO1FBQ2xDLE1BQU0sUUFBUSxDQUNaLElBQUksSUFBSSxtQkFBbUIsS0FBSyx3QkFBd0IsSUFBSSxjQUFjLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFB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Q2YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IGxvZ0Vycm9yIH0gZnJvbSAnLi4vdXRpbC9sb2cnO1xuaW1wb3J0IHsgcURldiB9IGZyb20gJy4uL3V0aWwvcWRldic7XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnREZWZpbmVkKHZhbHVlOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUgIT0gbnVsbCkgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgJ0V4cGVjdGVkIGRlZmluZWQgdmFsdWUuJyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydE5vdFByb21pc2UodmFsdWU6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICghKHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8ICdFeHBlY3RlZCBkZWZpbmVkIHZhbHVlLicpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnREZWZpbmVkQW5kTm90UHJvbWlzZSh2YWx1ZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgYXNzZXJ0RGVmaW5lZCh2YWx1ZSwgdGV4dCk7XG4gICAgYXNzZXJ0Tm90UHJvbWlzZSh2YWx1ZSwgdGV4dCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEluc3RhbmNlT2YodmFsdWU6IGFueSwgdHlwZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgdHlwZSkgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKFxuICAgICAgdGV4dCB8fCBgRXhwZWN0ZWQgdmFsdWUgJyR7dmFsdWV9JyB0byBiZSBpbnN0YW5jZSBvZiAnJHt0eXBlfScgYnV0IHdhcyAnJHt0eXBlT2YodmFsdWUpfScuYFxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFN0cmluZyh2YWx1ZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCB2YWx1ZSAnJHt2YWx1ZX0nIHRvIGJlICdzdHJpbmcnIGJ1dCB3YXMgJyR7dHlwZU9mKHZhbHVlKX0nLmApO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnROb3RFcXVhbCh2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxICE9PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyAhPT0gJyR7dmFsdWUyfScuYCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEVxdWFsKHZhbHVlMTogYW55LCB2YWx1ZTI6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh2YWx1ZTEgPT09IHZhbHVlMikgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgYEV4cGVjdGVkICcke3ZhbHVlMX0nID09PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0TGVzc09yRXF1YWwodmFsdWUxOiBhbnksIHZhbHVlMjogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlMSA8PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyA8PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0TGVzcyh2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxIDwgdmFsdWUyKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgJyR7dmFsdWUxfScgPCAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0R3JlYXRlck9yRXF1YWwodmFsdWUxOiBhbnksIHZhbHVlMjogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlMSA+PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyA+PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0R3JlYXRlcih2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxID4gdmFsdWUyKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgJyR7dmFsdWUxfScgPiAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB0eXBlT2YodmFsdWU6IGFueSkge1xuICBpZiAodmFsdWUgPT09IG51bGwpIHJldHVybiAnbnVsbCc7XG4gIGNvbnN0IHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGlmICh0eXBlID09PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiB2YWx1ZT8uY29uc3RydWN0b3I/Lm5hbWUgfHwgJzx1bmtub3duPic7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHR5cGU7XG4gIH1cbn1cblxuZnVuY3Rpb24gbmV3RXJyb3IodGV4dDogc3RyaW5nKSB7XG4gIGRlYnVnZ2VyOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWRlYnVnZ2VyXG4gIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKHRleHQpO1xuICBsb2dFcnJvcihlcnJvcik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxuICByZXR1cm4gZXJyb3I7XG59XG4iXX0=", "/**\n * @license\n * Copyright Builder.io; Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\n/**\n * State factory of the component.\n */\nexport const OnMount = 'on:q-mount';\n/**\n * State factory of the component.\n */\nexport const QHostAttr = 'q:host';\nexport const OnRenderProp = 'q:renderFn';\n/**\n * State factory of the component.\n */\nexport const OnRenderSelector = '[q\\\\:host]';\n/**\n * State factory of the component.\n */\nexport const OnUnmount = 'on:q-unmount';\n/**\n * State factory of the component.\n */\nexport const OnResume = 'on:q-resume';\n/**\n * Component Styles.\n */\nexport const ComponentScopedStyles = 'q:sstyle';\n/**\n * Unscoped Component Styles.\n */\nexport const ComponentUnscopedStyles = 'q:ustyle';\n/**\n * Component style host prefix\n */\nexport const ComponentStylesPrefixHost = '\uD83D\uDC8E';\n/**\n * Component style content prefix\n */\nexport const ComponentStylesPrefixContent = '\u2B50\uFE0F';\n/**\n * Prefix used to identify on listeners.\n */\nexport const EventPrefix = 'on:';\n/**\n * Attribute used to mark that an event listener is attached.\n */\nexport const EventAny = 'on:.';\n/**\n * Tag name used for projection.\n */\nexport const QSlot = 'Q:SLOT';\nexport const QSlotSelector = 'Q\\\\:SLOT';\n/**\n * `<some-element q:slot=\"...\">`\n */\nexport const QSlotAttr = 'q:slot';\nexport const QObjAttr = 'q:obj';\nexport const QContainerAttr = 'q:container';\nexport const QObjSelector = '[q\\\\:obj]';\nexport const QContainerSelector = '[q\\\\:container]';\n/**\n * `<q:slot name=\"...\">`\n */\nexport const QSlotName = 'name';\nexport const QSlotInertName = '\\u0000';\nexport const ELEMENT_ID = 'q:id';\nexport const ELEMENT_ID_SELECTOR = '[q\\\\:id]';\nexport const ELEMENT_ID_PREFIX = '#';\nexport const ELEMENT_ID_Q_PROPS_PREFIX = '&';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2Vycy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9tYXJrZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVIOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLFlBQVksQ0FBQztBQUVwQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUM7QUFDbEMsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLFlBQVksQ0FBQztBQUV6Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLFlBQVksQ0FBQztBQUU3Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxjQUFjLENBQUM7QUFFeEM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsYUFBYSxDQUFDO0FBRXRDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsVUFBVSxDQUFDO0FBRWhEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsVUFBVSxDQUFDO0FBRWxEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDO0FBRTlDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUcsSUFBSSxDQUFDO0FBRWpEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQztBQUVqQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUM7QUFFL0I7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDO0FBQzlCLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxVQUFVLENBQUM7QUFFeEM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDO0FBRWxDLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUM7QUFFaEMsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLGFBQWEsQ0FBQztBQUU1QyxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsV0FBVyxDQUFDO0FBRXhDLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLGlCQUFpQixDQUFDO0FBRXBEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLE1BQU0sQ0FBQztBQUNoQyxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsUUFBUSxDQUFDO0FBRXZDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUM7QUFDakMsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsVUFBVSxDQUFDO0FBQzlDLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEdBQUcsQ0FBQztBQUNyQyxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBRyxHQUFHLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQnVpbGRlci5pbzsgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9CdWlsZGVySU8vcXdpay9ibG9iL21haW4vTElDRU5TRVxuICovXG5cbi8qKlxuICogU3RhdGUgZmFjdG9yeSBvZiB0aGUgY29tcG9uZW50LlxuICovXG5leHBvcnQgY29uc3QgT25Nb3VudCA9ICdvbjpxLW1vdW50JztcblxuLyoqXG4gKiBTdGF0ZSBmYWN0b3J5IG9mIHRoZSBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBRSG9zdEF0dHIgPSAncTpob3N0JztcbmV4cG9ydCBjb25zdCBPblJlbmRlclByb3AgPSAncTpyZW5kZXJGbic7XG5cbi8qKlxuICogU3RhdGUgZmFjdG9yeSBvZiB0aGUgY29tcG9uZW50LlxuICovXG5leHBvcnQgY29uc3QgT25SZW5kZXJTZWxlY3RvciA9ICdbcVxcXFw6aG9zdF0nO1xuXG4vKipcbiAqIFN0YXRlIGZhY3Rvcnkgb2YgdGhlIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IE9uVW5tb3VudCA9ICdvbjpxLXVubW91bnQnO1xuXG4vKipcbiAqIFN0YXRlIGZhY3Rvcnkgb2YgdGhlIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IE9uUmVzdW1lID0gJ29uOnEtcmVzdW1lJztcblxuLyoqXG4gKiBDb21wb25lbnQgU3R5bGVzLlxuICovXG5leHBvcnQgY29uc3QgQ29tcG9uZW50U2NvcGVkU3R5bGVzID0gJ3E6c3N0eWxlJztcblxuLyoqXG4gKiBVbnNjb3BlZCBDb21wb25lbnQgU3R5bGVzLlxuICovXG5leHBvcnQgY29uc3QgQ29tcG9uZW50VW5zY29wZWRTdHlsZXMgPSAncTp1c3R5bGUnO1xuXG4vKipcbiAqIENvbXBvbmVudCBzdHlsZSBob3N0IHByZWZpeFxuICovXG5leHBvcnQgY29uc3QgQ29tcG9uZW50U3R5bGVzUHJlZml4SG9zdCA9ICfwn5KOJztcblxuLyoqXG4gKiBDb21wb25lbnQgc3R5bGUgY29udGVudCBwcmVmaXhcbiAqL1xuZXhwb3J0IGNvbnN0IENvbXBvbmVudFN0eWxlc1ByZWZpeENvbnRlbnQgPSAn4q2Q77iPJztcblxuLyoqXG4gKiBQcmVmaXggdXNlZCB0byBpZGVudGlmeSBvbiBsaXN0ZW5lcnMuXG4gKi9cbmV4cG9ydCBjb25zdCBFdmVudFByZWZpeCA9ICdvbjonO1xuXG4vKipcbiAqIEF0dHJpYnV0ZSB1c2VkIHRvIG1hcmsgdGhhdCBhbiBldmVudCBsaXN0ZW5lciBpcyBhdHRhY2hlZC5cbiAqL1xuZXhwb3J0IGNvbnN0IEV2ZW50QW55ID0gJ29uOi4nO1xuXG4vKipcbiAqIFRhZyBuYW1lIHVzZWQgZm9yIHByb2plY3Rpb24uXG4gKi9cbmV4cG9ydCBjb25zdCBRU2xvdCA9ICdROlNMT1QnO1xuZXhwb3J0IGNvbnN0IFFTbG90U2VsZWN0b3IgPSAnUVxcXFw6U0xPVCc7XG5cbi8qKlxuICogYDxzb21lLWVsZW1lbnQgcTpzbG90PVwiLi4uXCI+YFxuICovXG5leHBvcnQgY29uc3QgUVNsb3RBdHRyID0gJ3E6c2xvdCc7XG5cbmV4cG9ydCBjb25zdCBRT2JqQXR0ciA9ICdxOm9iaic7XG5cbmV4cG9ydCBjb25zdCBRQ29udGFpbmVyQXR0ciA9ICdxOmNvbnRhaW5lcic7XG5cbmV4cG9ydCBjb25zdCBRT2JqU2VsZWN0b3IgPSAnW3FcXFxcOm9ial0nO1xuXG5leHBvcnQgY29uc3QgUUNvbnRhaW5lclNlbGVjdG9yID0gJ1txXFxcXDpjb250YWluZXJdJztcblxuLyoqXG4gKiBgPHE6c2xvdCBuYW1lPVwiLi4uXCI+YFxuICovXG5leHBvcnQgY29uc3QgUVNsb3ROYW1lID0gJ25hbWUnO1xuZXhwb3J0IGNvbnN0IFFTbG90SW5lcnROYW1lID0gJ1xcdTAwMDAnO1xuXG5leHBvcnQgY29uc3QgRUxFTUVOVF9JRCA9ICdxOmlkJztcbmV4cG9ydCBjb25zdCBFTEVNRU5UX0lEX1NFTEVDVE9SID0gJ1txXFxcXDppZF0nO1xuZXhwb3J0IGNvbnN0IEVMRU1FTlRfSURfUFJFRklYID0gJyMnO1xuZXhwb3J0IGNvbnN0IEVMRU1FTlRfSURfUV9QUk9QU19QUkVGSVggPSAnJic7XG4iXX0=", "/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { assertDefined } from '../assert/assert';\nexport function getDocument(node) {\n    if (typeof document !== 'undefined') {\n        return document;\n    }\n    if (node.nodeType === 9) {\n        return node;\n    }\n    let doc = node.ownerDocument;\n    while (doc && doc.nodeType !== 9) {\n        doc = doc.parentNode;\n    }\n    assertDefined(doc);\n    return doc;\n}\nexport function getParentElement(node) {\n    return node.parentElement || previousParent.get(node) || null;\n}\nexport const previousParent = new WeakMap();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2RvbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFakQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUFVO0lBQ3BDLElBQUksT0FBTyxRQUFRLEtBQUssV0FBVyxFQUFFO1FBQ25DLE9BQU8sUUFBUSxDQUFDO0tBQ2pCO0lBQ0QsSUFBSSxJQUFJLENBQUMsUUFBUSxLQUFLLENBQUMsRUFBRTtRQUN2QixPQUFPLElBQWdCLENBQUM7S0FDekI7SUFDRCxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzdCLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxRQUFRLEtBQUssQ0FBQyxFQUFFO1FBQ2hDLEdBQUcsR0FBRyxHQUFHLENBQUMsVUFBaUIsQ0FBQztLQUM3QjtJQUNELGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNuQixPQUFPLEdBQUksQ0FBQztBQUNkLENBQUM7QUFFRCxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsSUFBVTtJQUN6QyxPQUFPLElBQUksQ0FBQyxhQUFhLElBQUksY0FBYyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUM7QUFDaEUsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxJQUFJLE9BQU8sRUFBaUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgYXNzZXJ0RGVmaW5lZCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RG9jdW1lbnQobm9kZTogTm9kZSk6IERvY3VtZW50IHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQ7XG4gIH1cbiAgaWYgKG5vZGUubm9kZVR5cGUgPT09IDkpIHtcbiAgICByZXR1cm4gbm9kZSBhcyBEb2N1bWVudDtcbiAgfVxuICBsZXQgZG9jID0gbm9kZS5vd25lckRvY3VtZW50O1xuICB3aGlsZSAoZG9jICYmIGRvYy5ub2RlVHlwZSAhPT0gOSkge1xuICAgIGRvYyA9IGRvYy5wYXJlbnROb2RlIGFzIGFueTtcbiAgfVxuICBhc3NlcnREZWZpbmVkKGRvYyk7XG4gIHJldHVybiBkb2MhO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGFyZW50RWxlbWVudChub2RlOiBOb2RlKTogRWxlbWVudCB8IG51bGwge1xuICByZXR1cm4gbm9kZS5wYXJlbnRFbGVtZW50IHx8IHByZXZpb3VzUGFyZW50LmdldChub2RlKSB8fCBudWxsO1xufVxuXG5leHBvcnQgY29uc3QgcHJldmlvdXNQYXJlbnQgPSBuZXcgV2Vha01hcDxOb2RlLCBFbGVtZW50PigpO1xuIl19", "import { assertDefined } from '../assert/assert';\nimport { QContainerSelector, QHostAttr } from '../util/markers';\nimport { getDocument } from '../util/dom';\nexport function isStyleTask(obj) {\n    return obj && typeof obj === 'object' && obj.type === 'style';\n}\nlet _context;\nexport function tryGetInvokeContext() {\n    if (!_context) {\n        const context = typeof document !== 'undefined' && document && document.__q_context__;\n        if (!context) {\n            return undefined;\n        }\n        if (Array.isArray(context)) {\n            const element = context[0];\n            const hostElement = getHostElement(element);\n            assertDefined(element);\n            return (document.__q_context__ = newInvokeContext(getDocument(element), hostElement, element, context[1], context[2]));\n        }\n        return context;\n    }\n    return _context;\n}\nexport function getInvokeContext() {\n    const ctx = tryGetInvokeContext();\n    if (!ctx) {\n        throw new Error(\"Q-ERROR: invoking 'use*()' method outside of invocation context.\");\n    }\n    return ctx;\n}\nexport function useInvoke(context, fn, ...args) {\n    const previousContext = _context;\n    let returnValue;\n    try {\n        _context = context;\n        returnValue = fn.apply(null, args);\n    }\n    finally {\n        const currentCtx = _context;\n        _context = previousContext;\n        if (currentCtx.waitOn && currentCtx.waitOn.length > 0) {\n            // eslint-disable-next-line no-unsafe-finally\n            return Promise.all(currentCtx.waitOn).then(() => returnValue);\n        }\n    }\n    return returnValue;\n}\nexport function newInvokeContext(doc, hostElement, element, event, url) {\n    return {\n        doc,\n        hostElement,\n        element,\n        event: event,\n        url: url || null,\n        qrl: undefined,\n        subscriptions: event === 'qRender',\n    };\n}\n/**\n * @private\n */\nexport function useWaitOn(promise) {\n    const ctx = getInvokeContext();\n    (ctx.waitOn || (ctx.waitOn = [])).push(promise);\n}\nexport function getHostElement(el) {\n    let foundSlot = false;\n    let node = el;\n    while (node) {\n        const isHost = node.hasAttribute(QHostAttr);\n        const isSlot = node.tagName === 'Q:SLOT';\n        if (isHost) {\n            if (!foundSlot) {\n                break;\n            }\n            else {\n                foundSlot = false;\n            }\n        }\n        if (isSlot) {\n            foundSlot = true;\n        }\n        node = node.parentElement;\n    }\n    return node;\n}\nexport function getContainer(el) {\n    return el.closest(QContainerSelector);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWNvcmUuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2UtY29yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHakQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFNBQVMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFVMUMsTUFBTSxVQUFVLFdBQVcsQ0FBQyxHQUFRO0lBQ2xDLE9BQU8sR0FBRyxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsSUFBSSxHQUFHLENBQUMsSUFBSSxLQUFLLE9BQU8sQ0FBQztBQUNoRSxDQUFDO0FBY0QsSUFBSSxRQUFtQyxDQUFDO0FBRXhDLE1BQU0sVUFBVSxtQkFBbUI7SUFDakMsSUFBSSxDQUFDLFFBQVEsRUFBRTtRQUNiLE1BQU0sT0FBTyxHQUFHLE9BQU8sUUFBUSxLQUFLLFdBQVcsSUFBSSxRQUFRLElBQUksUUFBUSxDQUFDLGFBQWEsQ0FBQztRQUN0RixJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ1osT0FBTyxTQUFTLENBQUM7U0FDbEI7UUFDRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDMUIsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzNCLE1BQU0sV0FBVyxHQUFHLGNBQWMsQ0FBQyxPQUFPLENBQUUsQ0FBQztZQUM3QyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDdkIsT0FBTyxDQUFDLFFBQVEsQ0FBQyxhQUFhLEdBQUcsZ0JBQWdCLENBQy9DLFdBQVcsQ0FBQyxPQUFPLENBQUMsRUFDcEIsV0FBVyxFQUNYLE9BQU8sRUFDUCxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQ1YsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUNYLENBQUMsQ0FBQztTQUNKO1FBQ0QsT0FBTyxPQUF3QixDQUFDO0tBQ2pDO0lBQ0QsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0I7SUFDOUIsTUFBTSxHQUFHLEdBQUcsbUJBQW1CLEVBQUUsQ0FBQztJQUNsQyxJQUFJLENBQUMsR0FBRyxFQUFFO1FBQ1IsTUFBTSxJQUFJLEtBQUssQ0FBQyxrRUFBa0UsQ0FBQyxDQUFDO0tBQ3JGO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDO0FBRUQsTUFBTSxVQUFVLFNBQVMsQ0FDdkIsT0FBc0IsRUFDdEIsRUFBMEIsRUFDMUIsR0FBRyxJQUFVO0lBRWIsTUFBTSxlQUFlLEdBQUcsUUFBUSxDQUFDO0lBQ2pDLElBQUksV0FBZ0IsQ0FBQztJQUNyQixJQUFJO1FBQ0YsUUFBUSxHQUFHLE9BQU8sQ0FBQztRQUNuQixXQUFXLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDcEM7WUFBUztRQUNSLE1BQU0sVUFBVSxHQUFHLFFBQVMsQ0FBQztRQUM3QixRQUFRLEdBQUcsZUFBZSxDQUFDO1FBQzNCLElBQUksVUFBVSxDQUFDLE1BQU0sSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDckQsNkNBQTZDO1lBQzdDLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQy9EO0tBQ0Y7SUFDRCxPQUFPLFdBQVcsQ0FBQztBQUNyQixDQUFDO0FBQ0QsTUFBTSxVQUFVLGdCQUFnQixDQUM5QixHQUFjLEVBQ2QsV0FBcUIsRUFDckIsT0FBaUIsRUFDakIsS0FBVyxFQUNYLEdBQVM7SUFFVCxPQUFPO1FBQ0wsR0FBRztRQUNILFdBQVc7UUFDWCxPQUFPO1FBQ1AsS0FBSyxFQUFFLEtBQUs7UUFDWixHQUFHLEVBQUUsR0FBRyxJQUFJLElBQUk7UUFDaEIsR0FBRyxFQUFFLFNBQVM7UUFDZCxhQUFhLEVBQUUsS0FBSyxLQUFLLFNBQVM7S0FDbkMsQ0FBQztBQUNKLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxTQUFTLENBQUMsT0FBcUI7SUFDN0MsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztJQUMvQixDQUFDLEdBQUcsQ0FBQyxNQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ2xELENBQUM7QUFFRCxNQUFNLFVBQVUsY0FBYyxDQUFDLEVBQVc7SUFDeEMsSUFBSSxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQ3RCLElBQUksSUFBSSxHQUFtQixFQUFFLENBQUM7SUFDOUIsT0FBTyxJQUFJLEVBQUU7UUFDWCxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzVDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLEtBQUssUUFBUSxDQUFDO1FBQ3pDLElBQUksTUFBTSxFQUFFO1lBQ1YsSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDZCxNQUFNO2FBQ1A7aUJBQU07Z0JBQ0wsU0FBUyxHQUFHLEtBQUssQ0FBQzthQUNuQjtTQUNGO1FBQ0QsSUFBSSxNQUFNLEVBQUU7WUFDVixTQUFTLEdBQUcsSUFBSSxDQUFDO1NBQ2xCO1FBQ0QsSUFBSSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7S0FDM0I7SUFDRCxPQUFPLElBQUksQ0FBQztBQUNkLENBQUM7QUFFRCxNQUFNLFVBQVUsWUFBWSxDQUFDLEVBQVc7SUFDdEMsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7QUFDeEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgVmFsdWVPclByb21pc2UgfSBmcm9tICcuLi91dGlsL3R5cGVzJztcbmltcG9ydCB0eXBlIHsgUHJvcHMgfSBmcm9tICcuLi9wcm9wcy9wcm9wcy5wdWJsaWMnO1xuaW1wb3J0IHsgYXNzZXJ0RGVmaW5lZCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuaW1wb3J0IHR5cGUgeyBRd2lrRG9jdW1lbnQgfSBmcm9tICcuLi9kb2N1bWVudCc7XG5pbXBvcnQgdHlwZSB7IFFSTEludGVybmFsIH0gZnJvbSAnLi4vaW1wb3J0L3FybC1jbGFzcyc7XG5pbXBvcnQgeyBRQ29udGFpbmVyU2VsZWN0b3IsIFFIb3N0QXR0ciB9IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5pbXBvcnQgeyBnZXREb2N1bWVudCB9IGZyb20gJy4uL3V0aWwvZG9tJztcblxuZGVjbGFyZSBjb25zdCBkb2N1bWVudDogUXdpa0RvY3VtZW50O1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlQXBwZW5kIHtcbiAgdHlwZTogJ3N0eWxlJztcbiAgc2NvcGU6IHN0cmluZztcbiAgY29udGVudDogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNTdHlsZVRhc2sob2JqOiBhbnkpOiBvYmogaXMgU3R5bGVBcHBlbmQge1xuICByZXR1cm4gb2JqICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmIG9iai50eXBlID09PSAnc3R5bGUnO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEludm9rZUNvbnRleHQge1xuICBkb2M/OiBEb2N1bWVudDtcbiAgaG9zdEVsZW1lbnQ/OiBFbGVtZW50O1xuICBlbGVtZW50PzogRWxlbWVudDtcbiAgZXZlbnQ6IGFueTtcbiAgdXJsOiBVUkwgfCBudWxsO1xuICBxcmw/OiBRUkxJbnRlcm5hbDtcbiAgc3Vic2NyaXB0aW9uczogYm9vbGVhbjtcbiAgd2FpdE9uPzogUHJvbWlzZTxhbnk+W107XG4gIHByb3BzPzogUHJvcHM7XG59XG5cbmxldCBfY29udGV4dDogSW52b2tlQ29udGV4dCB8IHVuZGVmaW5lZDtcblxuZXhwb3J0IGZ1bmN0aW9uIHRyeUdldEludm9rZUNvbnRleHQoKTogSW52b2tlQ29udGV4dCB8IHVuZGVmaW5lZCB7XG4gIGlmICghX2NvbnRleHQpIHtcbiAgICBjb25zdCBjb250ZXh0ID0gdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5fX3FfY29udGV4dF9fO1xuICAgIGlmICghY29udGV4dCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoY29udGV4dCkpIHtcbiAgICAgIGNvbnN0IGVsZW1lbnQgPSBjb250ZXh0WzBdO1xuICAgICAgY29uc3QgaG9zdEVsZW1lbnQgPSBnZXRIb3N0RWxlbWVudChlbGVtZW50KSE7XG4gICAgICBhc3NlcnREZWZpbmVkKGVsZW1lbnQpO1xuICAgICAgcmV0dXJuIChkb2N1bWVudC5fX3FfY29udGV4dF9fID0gbmV3SW52b2tlQ29udGV4dChcbiAgICAgICAgZ2V0RG9jdW1lbnQoZWxlbWVudCksXG4gICAgICAgIGhvc3RFbGVtZW50LFxuICAgICAgICBlbGVtZW50LFxuICAgICAgICBjb250ZXh0WzFdLFxuICAgICAgICBjb250ZXh0WzJdXG4gICAgICApKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnRleHQgYXMgSW52b2tlQ29udGV4dDtcbiAgfVxuICByZXR1cm4gX2NvbnRleHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRJbnZva2VDb250ZXh0KCk6IEludm9rZUNvbnRleHQge1xuICBjb25zdCBjdHggPSB0cnlHZXRJbnZva2VDb250ZXh0KCk7XG4gIGlmICghY3R4KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiUS1FUlJPUjogaW52b2tpbmcgJ3VzZSooKScgbWV0aG9kIG91dHNpZGUgb2YgaW52b2NhdGlvbiBjb250ZXh0LlwiKTtcbiAgfVxuICByZXR1cm4gY3R4O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlSW52b2tlPEFSR1MgZXh0ZW5kcyBhbnlbXSA9IGFueVtdLCBSRVQgPSBhbnk+KFxuICBjb250ZXh0OiBJbnZva2VDb250ZXh0LFxuICBmbjogKC4uLmFyZ3M6IEFSR1MpID0+IFJFVCxcbiAgLi4uYXJnczogQVJHU1xuKTogVmFsdWVPclByb21pc2U8UkVUPiB7XG4gIGNvbnN0IHByZXZpb3VzQ29udGV4dCA9IF9jb250ZXh0O1xuICBsZXQgcmV0dXJuVmFsdWU6IFJFVDtcbiAgdHJ5IHtcbiAgICBfY29udGV4dCA9IGNvbnRleHQ7XG4gICAgcmV0dXJuVmFsdWUgPSBmbi5hcHBseShudWxsLCBhcmdzKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBjb25zdCBjdXJyZW50Q3R4ID0gX2NvbnRleHQhO1xuICAgIF9jb250ZXh0ID0gcHJldmlvdXNDb250ZXh0O1xuICAgIGlmIChjdXJyZW50Q3R4LndhaXRPbiAmJiBjdXJyZW50Q3R4LndhaXRPbi5sZW5ndGggPiAwKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5zYWZlLWZpbmFsbHlcbiAgICAgIHJldHVybiBQcm9taXNlLmFsbChjdXJyZW50Q3R4LndhaXRPbikudGhlbigoKSA9PiByZXR1cm5WYWx1ZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXR1cm5WYWx1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBuZXdJbnZva2VDb250ZXh0KFxuICBkb2M/OiBEb2N1bWVudCxcbiAgaG9zdEVsZW1lbnQ/OiBFbGVtZW50LFxuICBlbGVtZW50PzogRWxlbWVudCxcbiAgZXZlbnQ/OiBhbnksXG4gIHVybD86IFVSTFxuKTogSW52b2tlQ29udGV4dCB7XG4gIHJldHVybiB7XG4gICAgZG9jLFxuICAgIGhvc3RFbGVtZW50LFxuICAgIGVsZW1lbnQsXG4gICAgZXZlbnQ6IGV2ZW50LFxuICAgIHVybDogdXJsIHx8IG51bGwsXG4gICAgcXJsOiB1bmRlZmluZWQsXG4gICAgc3Vic2NyaXB0aW9uczogZXZlbnQgPT09ICdxUmVuZGVyJyxcbiAgfTtcbn1cblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlV2FpdE9uKHByb21pc2U6IFByb21pc2U8YW55Pik6IHZvaWQge1xuICBjb25zdCBjdHggPSBnZXRJbnZva2VDb250ZXh0KCk7XG4gIChjdHgud2FpdE9uIHx8IChjdHgud2FpdE9uID0gW10pKS5wdXNoKHByb21pc2UpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SG9zdEVsZW1lbnQoZWw6IEVsZW1lbnQpOiBFbGVtZW50IHwgbnVsbCB7XG4gIGxldCBmb3VuZFNsb3QgPSBmYWxzZTtcbiAgbGV0IG5vZGU6IEVsZW1lbnQgfCBudWxsID0gZWw7XG4gIHdoaWxlIChub2RlKSB7XG4gICAgY29uc3QgaXNIb3N0ID0gbm9kZS5oYXNBdHRyaWJ1dGUoUUhvc3RBdHRyKTtcbiAgICBjb25zdCBpc1Nsb3QgPSBub2RlLnRhZ05hbWUgPT09ICdROlNMT1QnO1xuICAgIGlmIChpc0hvc3QpIHtcbiAgICAgIGlmICghZm91bmRTbG90KSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm91bmRTbG90ID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChpc1Nsb3QpIHtcbiAgICAgIGZvdW5kU2xvdCA9IHRydWU7XG4gICAgfVxuICAgIG5vZGUgPSBub2RlLnBhcmVudEVsZW1lbnQ7XG4gIH1cbiAgcmV0dXJuIG5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb250YWluZXIoZWw6IEVsZW1lbnQpOiBFbGVtZW50IHwgbnVsbCB7XG4gIHJldHVybiBlbC5jbG9zZXN0KFFDb250YWluZXJTZWxlY3Rvcik7XG59XG4iXX0=", "import { newInvokeContext, tryGetInvokeContext, useInvoke } from '../use/use-core';\nimport { qrlImport, stringifyQRL } from './qrl';\nexport function isQrl(value) {\n    return value instanceof QRLInternal;\n}\nclass QRL {\n    constructor(chunk, symbol, symbolRef, symbolFn, capture, captureRef) {\n        this.chunk = chunk;\n        this.symbol = symbol;\n        this.symbolRef = symbolRef;\n        this.symbolFn = symbolFn;\n        this.capture = capture;\n        this.captureRef = captureRef;\n        this.canonicalChunk = chunk.replace(FIND_EXT, '');\n    }\n    setContainer(el) {\n        if (!this.el) {\n            this.el = el;\n        }\n    }\n    async resolve(el) {\n        if (el) {\n            this.setContainer(el);\n        }\n        return qrlImport(this.el, this);\n    }\n    invokeFn() {\n        return async (...args) => {\n            const currentCtx = tryGetInvokeContext();\n            const fn = typeof this.symbolRef === 'function' ? this.symbolRef : await this.resolve();\n            if (typeof fn === 'function') {\n                const context = Object.assign(Object.assign(Object.assign({}, newInvokeContext()), currentCtx), { qrl: this });\n                return useInvoke(context, fn, ...args);\n            }\n            throw new Error('QRL is not a function');\n        };\n    }\n    copy() {\n        return new QRLInternal(this.chunk, this.symbol, this.symbolRef, this.symbolFn, null, this.captureRef);\n    }\n    async invoke(...args) {\n        const fn = this.invokeFn();\n        return fn(...args);\n    }\n    serialize(options) {\n        return stringifyQRL(this, options);\n    }\n}\nexport const QRLInternal = QRL;\n// https://regexr.com/6enjv\nconst FIND_EXT = /\\?[\\w=&]+$/;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXJsLWNsYXNzLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9pbXBvcnQvcXJsLWNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBaUIsZ0JBQWdCLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFbEcsT0FBTyxFQUFFLFNBQVMsRUFBdUIsWUFBWSxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBR3JFLE1BQU0sVUFBVSxLQUFLLENBQUMsS0FBVTtJQUM5QixPQUFPLEtBQUssWUFBWSxXQUFXLENBQUM7QUFDdEMsQ0FBQztBQUVELE1BQU0sR0FBRztJQUtQLFlBQ1MsS0FBYSxFQUNiLE1BQWMsRUFDZCxTQUFzQyxFQUN0QyxRQUFxRCxFQUNyRCxPQUF3QixFQUN4QixVQUF3QjtRQUx4QixVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ2IsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLGNBQVMsR0FBVCxTQUFTLENBQTZCO1FBQ3RDLGFBQVEsR0FBUixRQUFRLENBQTZDO1FBQ3JELFlBQU8sR0FBUCxPQUFPLENBQWlCO1FBQ3hCLGVBQVUsR0FBVixVQUFVLENBQWM7UUFFL0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQsWUFBWSxDQUFDLEVBQVc7UUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUU7WUFDWixJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztTQUNkO0lBQ0gsQ0FBQztJQUVELEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBWTtRQUN4QixJQUFJLEVBQUUsRUFBRTtZQUNOLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDdkI7UUFDRCxPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxRQUFRO1FBQ04sT0FBTyxLQUFLLEVBQUUsR0FBRyxJQUFXLEVBQUUsRUFBRTtZQUM5QixNQUFNLFVBQVUsR0FBRyxtQkFBbUIsRUFBRSxDQUFDO1lBQ3pDLE1BQU0sRUFBRSxHQUFHLE9BQU8sSUFBSSxDQUFDLFNBQVMsS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBRXhGLElBQUksT0FBTyxFQUFFLEtBQUssVUFBVSxFQUFFO2dCQUM1QixNQUFNLE9BQU8saURBQ1IsZ0JBQWdCLEVBQUUsR0FDbEIsVUFBVSxLQUNiLEdBQUcsRUFBRSxJQUFJLEdBQ1YsQ0FBQztnQkFDRixPQUFPLFNBQVMsQ0FBQyxPQUFPLEVBQUUsRUFBUyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7YUFDL0M7WUFDRCxNQUFNLElBQUksS0FBSyxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFDM0MsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUVELElBQUk7UUFDRixPQUFPLElBQUksV0FBVyxDQUNwQixJQUFJLENBQUMsS0FBSyxFQUNWLElBQUksQ0FBQyxNQUFNLEVBQ1gsSUFBSSxDQUFDLFNBQVMsRUFDZCxJQUFJLENBQUMsUUFBUSxFQUNiLElBQUksRUFDSixJQUFJLENBQUMsVUFBVSxDQUNoQixDQUFDO0lBQ0osQ0FBQztJQUVELEtBQUssQ0FBQyxNQUFNLENBQ1YsR0FBRyxJQUFVO1FBRWIsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzNCLE9BQU8sRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDckIsQ0FBQztJQUVELFNBQVMsQ0FBQyxPQUE2QjtRQUNyQyxPQUFPLFlBQVksQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDckMsQ0FBQztDQUNGO0FBR0QsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFlLEdBQUcsQ0FBQztBQUUzQywyQkFBMkI7QUFDM0IsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW52b2tlQ29udGV4dCwgbmV3SW52b2tlQ29udGV4dCwgdHJ5R2V0SW52b2tlQ29udGV4dCwgdXNlSW52b2tlIH0gZnJvbSAnLi4vdXNlL3VzZS1jb3JlJztcbmltcG9ydCB0eXBlIHsgVmFsdWVPclByb21pc2UgfSBmcm9tICcuLi91dGlsL3R5cGVzJztcbmltcG9ydCB7IHFybEltcG9ydCwgUVJMU2VyaWFsaXplT3B0aW9ucywgc3RyaW5naWZ5UVJMIH0gZnJvbSAnLi9xcmwnO1xuaW1wb3J0IHR5cGUgeyBRUkwgYXMgSVFSTCB9IGZyb20gJy4vcXJsLnB1YmxpYyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1FybCh2YWx1ZTogYW55KTogdmFsdWUgaXMgUVJMSW50ZXJuYWwge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBRUkxJbnRlcm5hbDtcbn1cblxuY2xhc3MgUVJMPFRZUEUgPSBhbnk+IGltcGxlbWVudHMgSVFSTDxUWVBFPiB7XG4gIF9fYnJhbmRfX1FSTF9fITogVFlQRTtcbiAgY2Fub25pY2FsQ2h1bms6IHN0cmluZztcbiAgcHJpdmF0ZSBlbDogRWxlbWVudCB8IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgY2h1bms6IHN0cmluZyxcbiAgICBwdWJsaWMgc3ltYm9sOiBzdHJpbmcsXG4gICAgcHVibGljIHN5bWJvbFJlZjogbnVsbCB8IFZhbHVlT3JQcm9taXNlPFRZUEU+LFxuICAgIHB1YmxpYyBzeW1ib2xGbjogbnVsbCB8ICgoKSA9PiBQcm9taXNlPFJlY29yZDxzdHJpbmcsIGFueT4+KSxcbiAgICBwdWJsaWMgY2FwdHVyZTogbnVsbCB8IHN0cmluZ1tdLFxuICAgIHB1YmxpYyBjYXB0dXJlUmVmOiBudWxsIHwgYW55W11cbiAgKSB7XG4gICAgdGhpcy5jYW5vbmljYWxDaHVuayA9IGNodW5rLnJlcGxhY2UoRklORF9FWFQsICcnKTtcbiAgfVxuXG4gIHNldENvbnRhaW5lcihlbDogRWxlbWVudCkge1xuICAgIGlmICghdGhpcy5lbCkge1xuICAgICAgdGhpcy5lbCA9IGVsO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHJlc29sdmUoZWw/OiBFbGVtZW50KTogUHJvbWlzZTxUWVBFPiB7XG4gICAgaWYgKGVsKSB7XG4gICAgICB0aGlzLnNldENvbnRhaW5lcihlbCk7XG4gICAgfVxuICAgIHJldHVybiBxcmxJbXBvcnQodGhpcy5lbCwgdGhpcyk7XG4gIH1cblxuICBpbnZva2VGbigpOiAoLi4uYXJnczogYW55W10pID0+IGFueSB7XG4gICAgcmV0dXJuIGFzeW5jICguLi5hcmdzOiBhbnlbXSkgPT4ge1xuICAgICAgY29uc3QgY3VycmVudEN0eCA9IHRyeUdldEludm9rZUNvbnRleHQoKTtcbiAgICAgIGNvbnN0IGZuID0gdHlwZW9mIHRoaXMuc3ltYm9sUmVmID09PSAnZnVuY3Rpb24nID8gdGhpcy5zeW1ib2xSZWYgOiBhd2FpdCB0aGlzLnJlc29sdmUoKTtcblxuICAgICAgaWYgKHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBjb25zdCBjb250ZXh0OiBJbnZva2VDb250ZXh0ID0ge1xuICAgICAgICAgIC4uLm5ld0ludm9rZUNvbnRleHQoKSxcbiAgICAgICAgICAuLi5jdXJyZW50Q3R4LFxuICAgICAgICAgIHFybDogdGhpcyxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHVzZUludm9rZShjb250ZXh0LCBmbiBhcyBhbnksIC4uLmFyZ3MpO1xuICAgICAgfVxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdRUkwgaXMgbm90IGEgZnVuY3Rpb24nKTtcbiAgICB9O1xuICB9XG5cbiAgY29weSgpOiBRUkxJbnRlcm5hbDxUWVBFPiB7XG4gICAgcmV0dXJuIG5ldyBRUkxJbnRlcm5hbChcbiAgICAgIHRoaXMuY2h1bmssXG4gICAgICB0aGlzLnN5bWJvbCxcbiAgICAgIHRoaXMuc3ltYm9sUmVmLFxuICAgICAgdGhpcy5zeW1ib2xGbixcbiAgICAgIG51bGwsXG4gICAgICB0aGlzLmNhcHR1cmVSZWZcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgaW52b2tlPEFSR1MgZXh0ZW5kcyBhbnlbXT4oXG4gICAgLi4uYXJnczogQVJHU1xuICApOiBQcm9taXNlPFRZUEUgZXh0ZW5kcyAoLi4uYXJnczogYW55KSA9PiBhbnkgPyBSZXR1cm5UeXBlPFRZUEU+IDogbmV2ZXI+IHtcbiAgICBjb25zdCBmbiA9IHRoaXMuaW52b2tlRm4oKTtcbiAgICByZXR1cm4gZm4oLi4uYXJncyk7XG4gIH1cblxuICBzZXJpYWxpemUob3B0aW9ucz86IFFSTFNlcmlhbGl6ZU9wdGlvbnMpIHtcbiAgICByZXR1cm4gc3RyaW5naWZ5UVJMKHRoaXMsIG9wdGlvbnMpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIFFSTEludGVybmFsPFQgPSBhbnk+ID0gUVJMPFQ+O1xuZXhwb3J0IGNvbnN0IFFSTEludGVybmFsOiB0eXBlb2YgUVJMID0gUVJMO1xuXG4vLyBodHRwczovL3JlZ2V4ci5jb20vNmVuanZcbmNvbnN0IEZJTkRfRVhUID0gL1xcP1tcXHc9Jl0rJC87XG4iXX0=", "/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nexport function flattenArray(array, dst) {\n    // Yes this function is just Array.flat, but we need to run on old versions of Node.\n    if (!dst)\n        dst = [];\n    for (const item of array) {\n        if (Array.isArray(item)) {\n            flattenArray(item, dst);\n        }\n        else {\n            dst.push(item);\n        }\n    }\n    return dst;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXkuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvYXJyYXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsTUFBTSxVQUFVLFlBQVksQ0FBSSxLQUFrQixFQUFFLEdBQVM7SUFDM0Qsb0ZBQW9GO0lBQ3BGLElBQUksQ0FBQyxHQUFHO1FBQUUsR0FBRyxHQUFHLEVBQUUsQ0FBQztJQUNuQixLQUFLLE1BQU0sSUFBSSxJQUFJLEtBQUssRUFBRTtRQUN4QixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDdkIsWUFBWSxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztTQUN6QjthQUFNO1lBQ0wsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNoQjtLQUNGO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZmxhdHRlbkFycmF5PFQ+KGFycmF5OiAoVCB8IFRbXSlbXSwgZHN0PzogVFtdKTogVFtdIHtcbiAgLy8gWWVzIHRoaXMgZnVuY3Rpb24gaXMganVzdCBBcnJheS5mbGF0LCBidXQgd2UgbmVlZCB0byBydW4gb24gb2xkIHZlcnNpb25zIG9mIE5vZGUuXG4gIGlmICghZHN0KSBkc3QgPSBbXTtcbiAgZm9yIChjb25zdCBpdGVtIG9mIGFycmF5KSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaXRlbSkpIHtcbiAgICAgIGZsYXR0ZW5BcnJheShpdGVtLCBkc3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRzdDtcbn1cbiJdfQ==", "/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { flattenArray } from './array';\n/**\n * Converts a tree of Promises into a flat array of resolved promise values.\n *\n * @param tree - array of arrays of values or promises of values.\n * @returns a `Promise` of array of values.\n */\nexport function flattenPromiseTree(tree) {\n    return Promise.all(tree).then((values) => {\n        const flatArray = flattenArray(values);\n        for (let i = 0; i < flatArray.length; i++) {\n            if (isPromise(flatArray[i])) {\n                return flattenPromiseTree(flatArray);\n            }\n        }\n        return flatArray;\n    });\n}\nexport function isPromise(value) {\n    return value instanceof Promise;\n}\nexport const then = (promise, thenFn) => {\n    return isPromise(promise) ? promise.then(thenFn) : thenFn(promise);\n};\nexport const promiseAll = (promises) => {\n    const hasPromise = promises.some(isPromise);\n    if (hasPromise) {\n        return Promise.all(promises);\n    }\n    return promises;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbWlzZXMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvcHJvbWlzZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBR0gsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUl2Qzs7Ozs7R0FLRztBQUNILE1BQU0sVUFBVSxrQkFBa0IsQ0FBSSxJQUFvQjtJQUN4RCxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBVyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBYSxFQUFFLEVBQUU7UUFDckQsTUFBTSxTQUFTLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3pDLElBQUksU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUMzQixPQUFPLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQ3RDO1NBQ0Y7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxNQUFNLFVBQVUsU0FBUyxDQUFDLEtBQVU7SUFDbEMsT0FBTyxLQUFLLFlBQVksT0FBTyxDQUFDO0FBQ2xDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsQ0FDbEIsT0FBMEIsRUFDMUIsTUFBcUMsRUFDbEIsRUFBRTtJQUNyQixPQUFPLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3JFLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxDQUFrQixRQUFXLEVBQXFCLEVBQUU7SUFDNUUsTUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM1QyxJQUFJLFVBQVUsRUFBRTtRQUNkLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUM5QjtJQUNELE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgZmxhdHRlbkFycmF5IH0gZnJvbSAnLi9hcnJheSc7XG5cbmV4cG9ydCB0eXBlIFByb21pc2VUcmVlPFQ+ID0gVCB8IFByb21pc2U8VD4gfCBQcm9taXNlPFRbXT4gfCBBcnJheTxQcm9taXNlVHJlZTxUPj47XG5cbi8qKlxuICogQ29udmVydHMgYSB0cmVlIG9mIFByb21pc2VzIGludG8gYSBmbGF0IGFycmF5IG9mIHJlc29sdmVkIHByb21pc2UgdmFsdWVzLlxuICpcbiAqIEBwYXJhbSB0cmVlIC0gYXJyYXkgb2YgYXJyYXlzIG9mIHZhbHVlcyBvciBwcm9taXNlcyBvZiB2YWx1ZXMuXG4gKiBAcmV0dXJucyBhIGBQcm9taXNlYCBvZiBhcnJheSBvZiB2YWx1ZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuUHJvbWlzZVRyZWU8VD4odHJlZTogUHJvbWlzZVRyZWU8VD4pOiBQcm9taXNlPFRbXT4ge1xuICByZXR1cm4gUHJvbWlzZS5hbGwodHJlZSBhcyBUW10pLnRoZW4oKHZhbHVlczogYW55W10pID0+IHtcbiAgICBjb25zdCBmbGF0QXJyYXkgPSBmbGF0dGVuQXJyYXkodmFsdWVzKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZsYXRBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGlzUHJvbWlzZShmbGF0QXJyYXlbaV0pKSB7XG4gICAgICAgIHJldHVybiBmbGF0dGVuUHJvbWlzZVRyZWUoZmxhdEFycmF5KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZsYXRBcnJheTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1Byb21pc2UodmFsdWU6IGFueSk6IHZhbHVlIGlzIFByb21pc2U8YW55PiB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2U7XG59XG5cbmV4cG9ydCBjb25zdCB0aGVuID0gPFQsIEI+KFxuICBwcm9taXNlOiBWYWx1ZU9yUHJvbWlzZTxUPixcbiAgdGhlbkZuOiAoYXJnOiBUKSA9PiBWYWx1ZU9yUHJvbWlzZTxCPlxuKTogVmFsdWVPclByb21pc2U8Qj4gPT4ge1xuICByZXR1cm4gaXNQcm9taXNlKHByb21pc2UpID8gcHJvbWlzZS50aGVuKHRoZW5GbikgOiB0aGVuRm4ocHJvbWlzZSk7XG59O1xuXG5leHBvcnQgY29uc3QgcHJvbWlzZUFsbCA9IDxUIGV4dGVuZHMgYW55W10+KHByb21pc2VzOiBUKTogVmFsdWVPclByb21pc2U8VD4gPT4ge1xuICBjb25zdCBoYXNQcm9taXNlID0gcHJvbWlzZXMuc29tZShpc1Byb21pc2UpO1xuICBpZiAoaGFzUHJvbWlzZSkge1xuICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XG4gIH1cbiAgcmV0dXJuIHByb21pc2VzO1xufTtcbiJdfQ==", "import { getContainer } from '../use/use-core';\nimport { getDocument } from '../util/dom';\nexport const createPlatform = (doc) => {\n    const moduleCache = new Map();\n    return {\n        importSymbol(element, url, symbolName) {\n            const urlDoc = toUrl(doc, element, url).toString();\n            const urlCopy = new URL(urlDoc);\n            urlCopy.hash = '';\n            urlCopy.search = '';\n            const importURL = urlCopy.href;\n            const mod = moduleCache.get(importURL);\n            if (mod) {\n                return mod[symbolName];\n            }\n            return import(/* @vite-ignore */ importURL).then((mod) => {\n                moduleCache.set(importURL, mod);\n                return mod[symbolName];\n            });\n        },\n        raf: (fn) => {\n            return new Promise((resolve) => {\n                requestAnimationFrame(() => {\n                    resolve(fn());\n                });\n            });\n        },\n        nextTick: (fn) => {\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(fn());\n                });\n            });\n        },\n        chunkForSymbol() {\n            return undefined;\n        },\n    };\n};\n/**\n * Convert relative base URI and relative URL into a fully qualified URL.\n *\n * @param base -`QRL`s are relative, and therefore they need a base for resolution.\n *    - `Element` use `base.ownerDocument.baseURI`\n *    - `Document` use `base.baseURI`\n *    - `string` use `base` as is\n *    - `QConfig` use `base.baseURI`\n * @param url - relative URL\n * @returns fully qualified URL.\n */\nexport function toUrl(doc, element, url) {\n    var _a;\n    const containerEl = getContainer(element);\n    const base = new URL((_a = containerEl === null || containerEl === void 0 ? void 0 : containerEl.getAttribute('q:base')) !== null && _a !== void 0 ? _a : doc.baseURI, doc.baseURI);\n    return new URL(url, base);\n}\n/**\n * @public\n */\nexport const setPlatform = (doc, plt) => (doc[DocumentPlatform] = plt);\n/**\n * @public\n */\nexport const getPlatform = (docOrNode) => {\n    const doc = getDocument(docOrNode);\n    return doc[DocumentPlatform] || (doc[DocumentPlatform] = createPlatform(doc));\n};\nconst DocumentPlatform = /*@__PURE__*/ Symbol();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm0uanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3BsYXRmb3JtL3BsYXRmb3JtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRzFDLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxDQUFDLEdBQWEsRUFBZ0IsRUFBRTtJQUM1RCxNQUFNLFdBQVcsR0FBRyxJQUFJLEdBQUcsRUFBcUMsQ0FBQztJQUNqRSxPQUFPO1FBQ0wsWUFBWSxDQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUUsVUFBVTtZQUNuQyxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUVuRCxNQUFNLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNoQyxPQUFPLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztZQUNsQixPQUFPLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztZQUNwQixNQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO1lBQy9CLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDdkMsSUFBSSxHQUFHLEVBQUU7Z0JBQ1AsT0FBTyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7YUFDeEI7WUFDRCxPQUFPLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtnQkFDdkQsV0FBVyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ2hDLE9BQU8sR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3pCLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUNELEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1lBQ1YsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUM3QixxQkFBcUIsQ0FBQyxHQUFHLEVBQUU7b0JBQ3pCLE9BQU8sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUNoQixDQUFDLENBQUMsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUNELFFBQVEsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1lBQ2YsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUM3QixVQUFVLENBQUMsR0FBRyxFQUFFO29CQUNkLE9BQU8sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUNoQixDQUFDLENBQUMsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUNELGNBQWM7WUFDWixPQUFPLFNBQVMsQ0FBQztRQUNuQixDQUFDO0tBQ0YsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGOzs7Ozs7Ozs7O0dBVUc7QUFDSCxNQUFNLFVBQVUsS0FBSyxDQUFDLEdBQWEsRUFBRSxPQUFnQixFQUFFLEdBQWlCOztJQUN0RSxNQUFNLFdBQVcsR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDMUMsTUFBTSxJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBQSxXQUFXLGFBQVgsV0FBVyx1QkFBWCxXQUFXLENBQUUsWUFBWSxDQUFDLFFBQVEsQ0FBQyxtQ0FBSSxHQUFHLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN0RixPQUFPLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUM1QixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxHQUFhLEVBQUUsR0FBaUIsRUFBRSxFQUFFLENBQzlELENBQUUsR0FBd0IsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBRXREOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLENBQUMsU0FBMEIsRUFBRSxFQUFFO0lBQ3hELE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQXFCLENBQUM7SUFDdkQsT0FBTyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ2hGLENBQUMsQ0FBQztBQUVGLE1BQU0sZ0JBQWdCLEdBQUcsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q29udGFpbmVyIH0gZnJvbSAnLi4vdXNlL3VzZS1jb3JlJztcbmltcG9ydCB7IGdldERvY3VtZW50IH0gZnJvbSAnLi4vdXRpbC9kb20nO1xuaW1wb3J0IHR5cGUgeyBDb3JlUGxhdGZvcm0gfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVBsYXRmb3JtID0gKGRvYzogRG9jdW1lbnQpOiBDb3JlUGxhdGZvcm0gPT4ge1xuICBjb25zdCBtb2R1bGVDYWNoZSA9IG5ldyBNYXA8c3RyaW5nLCB7IFtzeW1ib2w6IHN0cmluZ106IGFueSB9PigpO1xuICByZXR1cm4ge1xuICAgIGltcG9ydFN5bWJvbChlbGVtZW50LCB1cmwsIHN5bWJvbE5hbWUpIHtcbiAgICAgIGNvbnN0IHVybERvYyA9IHRvVXJsKGRvYywgZWxlbWVudCwgdXJsKS50b1N0cmluZygpO1xuXG4gICAgICBjb25zdCB1cmxDb3B5ID0gbmV3IFVSTCh1cmxEb2MpO1xuICAgICAgdXJsQ29weS5oYXNoID0gJyc7XG4gICAgICB1cmxDb3B5LnNlYXJjaCA9ICcnO1xuICAgICAgY29uc3QgaW1wb3J0VVJMID0gdXJsQ29weS5ocmVmO1xuICAgICAgY29uc3QgbW9kID0gbW9kdWxlQ2FjaGUuZ2V0KGltcG9ydFVSTCk7XG4gICAgICBpZiAobW9kKSB7XG4gICAgICAgIHJldHVybiBtb2Rbc3ltYm9sTmFtZV07XG4gICAgICB9XG4gICAgICByZXR1cm4gaW1wb3J0KC8qIEB2aXRlLWlnbm9yZSAqLyBpbXBvcnRVUkwpLnRoZW4oKG1vZCkgPT4ge1xuICAgICAgICBtb2R1bGVDYWNoZS5zZXQoaW1wb3J0VVJMLCBtb2QpO1xuICAgICAgICByZXR1cm4gbW9kW3N5bWJvbE5hbWVdO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICByYWY6IChmbikgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgcmVzb2x2ZShmbigpKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIG5leHRUaWNrOiAoZm4pID0+IHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICByZXNvbHZlKGZuKCkpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgY2h1bmtGb3JTeW1ib2woKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0sXG4gIH07XG59O1xuXG4vKipcbiAqIENvbnZlcnQgcmVsYXRpdmUgYmFzZSBVUkkgYW5kIHJlbGF0aXZlIFVSTCBpbnRvIGEgZnVsbHkgcXVhbGlmaWVkIFVSTC5cbiAqXG4gKiBAcGFyYW0gYmFzZSAtYFFSTGBzIGFyZSByZWxhdGl2ZSwgYW5kIHRoZXJlZm9yZSB0aGV5IG5lZWQgYSBiYXNlIGZvciByZXNvbHV0aW9uLlxuICogICAgLSBgRWxlbWVudGAgdXNlIGBiYXNlLm93bmVyRG9jdW1lbnQuYmFzZVVSSWBcbiAqICAgIC0gYERvY3VtZW50YCB1c2UgYGJhc2UuYmFzZVVSSWBcbiAqICAgIC0gYHN0cmluZ2AgdXNlIGBiYXNlYCBhcyBpc1xuICogICAgLSBgUUNvbmZpZ2AgdXNlIGBiYXNlLmJhc2VVUklgXG4gKiBAcGFyYW0gdXJsIC0gcmVsYXRpdmUgVVJMXG4gKiBAcmV0dXJucyBmdWxseSBxdWFsaWZpZWQgVVJMLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9VcmwoZG9jOiBEb2N1bWVudCwgZWxlbWVudDogRWxlbWVudCwgdXJsOiBzdHJpbmcgfCBVUkwpOiBVUkwge1xuICBjb25zdCBjb250YWluZXJFbCA9IGdldENvbnRhaW5lcihlbGVtZW50KTtcbiAgY29uc3QgYmFzZSA9IG5ldyBVUkwoY29udGFpbmVyRWw/LmdldEF0dHJpYnV0ZSgncTpiYXNlJykgPz8gZG9jLmJhc2VVUkksIGRvYy5iYXNlVVJJKTtcbiAgcmV0dXJuIG5ldyBVUkwodXJsLCBiYXNlKTtcbn1cblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBjb25zdCBzZXRQbGF0Zm9ybSA9IChkb2M6IERvY3VtZW50LCBwbHQ6IENvcmVQbGF0Zm9ybSkgPT5cbiAgKChkb2MgYXMgUGxhdGZvcm1Eb2N1bWVudClbRG9jdW1lbnRQbGF0Zm9ybV0gPSBwbHQpO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IGdldFBsYXRmb3JtID0gKGRvY09yTm9kZTogRG9jdW1lbnQgfCBOb2RlKSA9PiB7XG4gIGNvbnN0IGRvYyA9IGdldERvY3VtZW50KGRvY09yTm9kZSkgYXMgUGxhdGZvcm1Eb2N1bWVudDtcbiAgcmV0dXJuIGRvY1tEb2N1bWVudFBsYXRmb3JtXSB8fCAoZG9jW0RvY3VtZW50UGxhdGZvcm1dID0gY3JlYXRlUGxhdGZvcm0oZG9jKSk7XG59O1xuXG5jb25zdCBEb2N1bWVudFBsYXRmb3JtID0gLypAX19QVVJFX18qLyBTeW1ib2woKTtcblxuaW50ZXJmYWNlIFBsYXRmb3JtRG9jdW1lbnQgZXh0ZW5kcyBEb2N1bWVudCB7XG4gIFtEb2N1bWVudFBsYXRmb3JtXT86IENvcmVQbGF0Zm9ybTtcbn1cbiJdfQ==", "import { assertDefined } from '../assert/assert';\nimport { getInvokeContext } from './use-core';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useHostElement\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useHostElement instead)\n/**\n * Retrieves the Host Element of the current component.\n *\n * NOTE: `useHostElement` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useHostElement() {\n    const element = getInvokeContext().hostElement;\n    assertDefined(element);\n    return element;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWhvc3QtZWxlbWVudC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2UtaG9zdC1lbGVtZW50LnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRTlDLDRFQUE0RTtBQUM1RSx5Q0FBeUM7QUFDekMsd0dBQXdHO0FBQ3hHOzs7Ozs7O0dBT0c7QUFDSCxVQUFVO0FBQ1YsTUFBTSxVQUFVLGNBQWM7SUFDNUIsTUFBTSxPQUFPLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQyxXQUFZLENBQUM7SUFDaEQsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZCLE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnREZWZpbmVkIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiaHR0cHM6Ly9oYWNrbWQuaW8vbFE4djdmeWhSLVdEM2ItMmFSVXB5dyN1c2VIb3N0RWxlbWVudFwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IGh0dHBzOi8vaGFja21kLmlvL0Bxd2lrLWRvY3MvQmt4cFN6ODBZLyUyRmxROHY3ZnloUi1XRDNiLTJhUlVweXclM0Zib3RoI3VzZUhvc3RFbGVtZW50IGluc3RlYWQpXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgSG9zdCBFbGVtZW50IG9mIHRoZSBjdXJyZW50IGNvbXBvbmVudC5cbiAqXG4gKiBOT1RFOiBgdXNlSG9zdEVsZW1lbnRgIG1ldGhvZCBjYW4gb25seSBiZSB1c2VkIGluIHRoZSBzeW5jaHJvbm91cyBwb3J0aW9uIG9mIHRoZSBjYWxsYmFja1xuICogKGJlZm9yZSBhbnkgYGF3YWl0YCBzdGF0ZW1lbnRzLilcbiAqXG4gKiBAcHVibGljXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiB1c2VIb3N0RWxlbWVudCgpOiBFbGVtZW50IHtcbiAgY29uc3QgZWxlbWVudCA9IGdldEludm9rZUNvbnRleHQoKS5ob3N0RWxlbWVudCE7XG4gIGFzc2VydERlZmluZWQoZWxlbWVudCk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuIl19", "import { QHostAttr, QSlotAttr } from './markers';\n/**\n * Returns true if the `node` is `Element` and of the right `tagName`.\n *\n * @param node\n * @private\n */\nexport function isDomElementWithTagName(node, tagName) {\n    return isHtmlElement(node) && node.tagName.toUpperCase() == tagName.toUpperCase();\n}\n/**\n * @private\n */\nexport function isTemplateElement(node) {\n    return isDomElementWithTagName(node, 'template');\n}\n/**\n * @private\n */\nexport function isQSLotTemplateElement(node) {\n    return isTemplateElement(node) && node.hasAttribute(QSlotAttr);\n}\n/**\n * @private\n */\nexport function isComponentElement(node) {\n    return isHtmlElement(node) && node.hasAttribute(QHostAttr);\n}\n/**\n * @private\n */\nexport function isHtmlElement(node) {\n    return node ? node.nodeType === NodeType.ELEMENT_NODE : false;\n}\n/**\n * `Node.type` enumeration\n */\nexport var NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n    NodeType[NodeType[\"ATTRIBUTE_NODE\"] = 2] = \"ATTRIBUTE_NODE\";\n    NodeType[NodeType[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n    NodeType[NodeType[\"CDATA_SECTION_NODE\"] = 4] = \"CDATA_SECTION_NODE\";\n    NodeType[NodeType[\"PROCESSING_INSTRUCTION_NODE\"] = 7] = \"PROCESSING_INSTRUCTION_NODE\";\n    // document, such as <?xml-stylesheet \u2026 ?>.\n    NodeType[NodeType[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n    NodeType[NodeType[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\n    NodeType[NodeType[\"DOCUMENT_TYPE_NODE\"] = 10] = \"DOCUMENT_TYPE_NODE\";\n    NodeType[NodeType[\"DOCUMENT_FRAGMENT_NODE\"] = 11] = \"DOCUMENT_FRAGMENT_NODE\";\n})(NodeType || (NodeType = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFakQ7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLElBQTZCLEVBQzdCLE9BQWU7SUFFZixPQUFPLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxJQUFJLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNwRixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQUMsSUFBNkI7SUFDN0QsT0FBTyx1QkFBdUIsQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDbkQsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLHNCQUFzQixDQUFDLElBQTZCO0lBQ2xFLE9BQU8saUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNqRSxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsa0JBQWtCLENBQUMsSUFBNkI7SUFDOUQsT0FBTyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUM3RCxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsYUFBYSxDQUFDLElBQVM7SUFDckMsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0FBQ2hFLENBQUM7QUFRRDs7R0FFRztBQUNILE1BQU0sQ0FBTixJQUFrQixRQVdqQjtBQVhELFdBQWtCLFFBQVE7SUFDeEIsdURBQWdCLENBQUE7SUFDaEIsMkRBQWtCLENBQUE7SUFDbEIsaURBQWEsQ0FBQTtJQUNiLG1FQUFzQixDQUFBO0lBQ3RCLHFGQUErQixDQUFBO0lBQy9CLDJDQUEyQztJQUMzQyx1REFBZ0IsQ0FBQTtJQUNoQix5REFBaUIsQ0FBQTtJQUNqQixvRUFBdUIsQ0FBQTtJQUN2Qiw0RUFBMkIsQ0FBQTtBQUM3QixDQUFDLEVBWGlCLFFBQVEsS0FBUixRQUFRLFFBV3pCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUUhvc3RBdHRyLCBRU2xvdEF0dHIgfSBmcm9tICcuL21hcmtlcnMnO1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgYG5vZGVgIGlzIGBFbGVtZW50YCBhbmQgb2YgdGhlIHJpZ2h0IGB0YWdOYW1lYC5cbiAqXG4gKiBAcGFyYW0gbm9kZVxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9tRWxlbWVudFdpdGhUYWdOYW1lKFxuICBub2RlOiBOb2RlIHwgbnVsbCB8IHVuZGVmaW5lZCxcbiAgdGFnTmFtZTogc3RyaW5nXG4pOiBub2RlIGlzIEVsZW1lbnQge1xuICByZXR1cm4gaXNIdG1sRWxlbWVudChub2RlKSAmJiBub2RlLnRhZ05hbWUudG9VcHBlckNhc2UoKSA9PSB0YWdOYW1lLnRvVXBwZXJDYXNlKCk7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVGVtcGxhdGVFbGVtZW50KG5vZGU6IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkKTogbm9kZSBpcyBIVE1MVGVtcGxhdGVFbGVtZW50IHtcbiAgcmV0dXJuIGlzRG9tRWxlbWVudFdpdGhUYWdOYW1lKG5vZGUsICd0ZW1wbGF0ZScpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1FTTG90VGVtcGxhdGVFbGVtZW50KG5vZGU6IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkKTogbm9kZSBpcyBIVE1MVGVtcGxhdGVFbGVtZW50IHtcbiAgcmV0dXJuIGlzVGVtcGxhdGVFbGVtZW50KG5vZGUpICYmIG5vZGUuaGFzQXR0cmlidXRlKFFTbG90QXR0cik7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQ29tcG9uZW50RWxlbWVudChub2RlOiBOb2RlIHwgbnVsbCB8IHVuZGVmaW5lZCk6IG5vZGUgaXMgSFRNTEVsZW1lbnQge1xuICByZXR1cm4gaXNIdG1sRWxlbWVudChub2RlKSAmJiBub2RlLmhhc0F0dHJpYnV0ZShRSG9zdEF0dHIpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0h0bWxFbGVtZW50KG5vZGU6IGFueSk6IG5vZGUgaXMgRWxlbWVudCB7XG4gIHJldHVybiBub2RlID8gbm9kZS5ub2RlVHlwZSA9PT0gTm9kZVR5cGUuRUxFTUVOVF9OT0RFIDogZmFsc2U7XG59XG5cbi8qKlxuICogVHlwZSByZXByZXNlbnRpbmcgYSB2YWx1ZSB3aGljaCBpcyBlaXRoZXIgcmVzb2x2ZSBvciBhIHByb21pc2UuXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCB0eXBlIFZhbHVlT3JQcm9taXNlPFQ+ID0gVCB8IFByb21pc2U8VD47XG5cbi8qKlxuICogYE5vZGUudHlwZWAgZW51bWVyYXRpb25cbiAqL1xuZXhwb3J0IGNvbnN0IGVudW0gTm9kZVR5cGUge1xuICBFTEVNRU5UX05PREUgPSAxLCAvLyBBbiBFbGVtZW50IG5vZGUgbGlrZSA8cD4gb3IgPGRpdj4uXG4gIEFUVFJJQlVURV9OT0RFID0gMiwgLy8gQW4gQXR0cmlidXRlIG9mIGFuIEVsZW1lbnQuXG4gIFRFWFRfTk9ERSA9IDMsIC8vIFRoZSBhY3R1YWwgVGV4dCBpbnNpZGUgYW4gRWxlbWVudCBvciBBdHRyLlxuICBDREFUQV9TRUNUSU9OX05PREUgPSA0LCAvLyBBIENEQVRBU2VjdGlvbiwgc3VjaCBhcyA8IUNEQVRBW1sg4oCmIF1dPi5cbiAgUFJPQ0VTU0lOR19JTlNUUlVDVElPTl9OT0RFID0gNywgLy8gQSBQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24gb2YgYW4gWE1MXG4gIC8vIGRvY3VtZW50LCBzdWNoIGFzIDw/eG1sLXN0eWxlc2hlZXQg4oCmID8+LlxuICBDT01NRU5UX05PREUgPSA4LCAvLyBBIENvbW1lbnQgbm9kZSwgc3VjaCBhcyA8IS0tIOKApiAtLT4uXG4gIERPQ1VNRU5UX05PREUgPSA5LCAvLyBBIERvY3VtZW50IG5vZGUuXG4gIERPQ1VNRU5UX1RZUEVfTk9ERSA9IDEwLCAvLyBBIERvY3VtZW50VHlwZSBub2RlLCBzdWNoIGFzIDwhRE9DVFlQRSBodG1sPi5cbiAgRE9DVU1FTlRfRlJBR01FTlRfTk9ERSA9IDExLCAvLyBBIERvY3VtZW50RnJhZ21lbnQgbm9kZS5cbn1cbiJdfQ==", "/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { isHtmlElement } from '../util/types';\nexport function stringifyDebug(value) {\n    if (value == null)\n        return String(value);\n    if (typeof value === 'function')\n        return value.name;\n    if (isHtmlElement(value))\n        return stringifyElement(value);\n    if (value instanceof URL)\n        return String(value);\n    if (typeof value === 'object')\n        return JSON.stringify(value, function (key, value) {\n            if (isHtmlElement(value))\n                return stringifyElement(value);\n            return value;\n        });\n    return String(value);\n}\nexport function stringifyElement(element) {\n    let html = '<' + element.localName;\n    const attributes = element.attributes;\n    const names = [];\n    for (let i = 0; i < attributes.length; i++) {\n        names.push(attributes[i].name);\n    }\n    names.sort();\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        let value = element.getAttribute(name);\n        if (value === null || value === void 0 ? void 0 : value.startsWith('file:/')) {\n            value = value.replace(/(file:\\/\\/).*(\\/.*)$/, (all, protocol, file) => protocol + '...' + file);\n        }\n        html +=\n            ' ' + name + (value == null || value == '' ? '' : \"='\" + value.replace(\"'\", '&apos;') + \"'\");\n    }\n    return html + '>';\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9lcnJvci9zdHJpbmdpZnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5QyxNQUFNLFVBQVUsY0FBYyxDQUFDLEtBQVU7SUFDdkMsSUFBSSxLQUFLLElBQUksSUFBSTtRQUFFLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLElBQUksT0FBTyxLQUFLLEtBQUssVUFBVTtRQUFFLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQztJQUNuRCxJQUFJLGFBQWEsQ0FBQyxLQUFLLENBQUM7UUFBRSxPQUFPLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pELElBQUksS0FBSyxZQUFZLEdBQUc7UUFBRSxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQyxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVE7UUFDM0IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxVQUFxQixHQUFXLEVBQUUsS0FBVTtZQUN2RSxJQUFJLGFBQWEsQ0FBQyxLQUFLLENBQUM7Z0JBQUUsT0FBTyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN6RCxPQUFPLEtBQUssQ0FBQztRQUNmLENBQUMsQ0FBQyxDQUFDO0lBQ0wsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDdkIsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxPQUFnQjtJQUMvQyxJQUFJLElBQUksR0FBRyxHQUFHLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQztJQUNuQyxNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDO0lBQ3RDLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNqQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUMxQyxLQUFLLENBQUMsSUFBSSxDQUFFLFVBQVUsQ0FBQyxDQUFDLENBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUMxQztJQUNELEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNiLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3JDLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QixJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLElBQUksS0FBSyxhQUFMLEtBQUssdUJBQUwsS0FBSyxDQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUMvQixLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FDbkIsc0JBQXNCLEVBQ3RCLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLFFBQVEsR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUNqRCxDQUFDO1NBQ0g7UUFDRCxJQUFJO1lBQ0YsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7S0FDaEc7SUFDRCxPQUFPLElBQUksR0FBRyxHQUFHLENBQUM7QUFDcEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgaXNIdG1sRWxlbWVudCB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5RGVidWcodmFsdWU6IGFueSk6IHN0cmluZyB8IG51bGwge1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicpIHJldHVybiB2YWx1ZS5uYW1lO1xuICBpZiAoaXNIdG1sRWxlbWVudCh2YWx1ZSkpIHJldHVybiBzdHJpbmdpZnlFbGVtZW50KHZhbHVlKTtcbiAgaWYgKHZhbHVlIGluc3RhbmNlb2YgVVJMKSByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpXG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlLCBmdW5jdGlvbiAodGhpczogYW55LCBrZXk6IHN0cmluZywgdmFsdWU6IGFueSkge1xuICAgICAgaWYgKGlzSHRtbEVsZW1lbnQodmFsdWUpKSByZXR1cm4gc3RyaW5naWZ5RWxlbWVudCh2YWx1ZSk7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSk7XG4gIHJldHVybiBTdHJpbmcodmFsdWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5RWxlbWVudChlbGVtZW50OiBFbGVtZW50KTogc3RyaW5nIHtcbiAgbGV0IGh0bWwgPSAnPCcgKyBlbGVtZW50LmxvY2FsTmFtZTtcbiAgY29uc3QgYXR0cmlidXRlcyA9IGVsZW1lbnQuYXR0cmlidXRlcztcbiAgY29uc3QgbmFtZXMgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgbmFtZXMucHVzaCgoYXR0cmlidXRlc1tpXSBhcyBBdHRyKS5uYW1lKTtcbiAgfVxuICBuYW1lcy5zb3J0KCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBuYW1lID0gbmFtZXNbaV07XG4gICAgbGV0IHZhbHVlID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgaWYgKHZhbHVlPy5zdGFydHNXaXRoKCdmaWxlOi8nKSkge1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKFxuICAgICAgICAvKGZpbGU6XFwvXFwvKS4qKFxcLy4qKSQvLFxuICAgICAgICAoYWxsLCBwcm90b2NvbCwgZmlsZSkgPT4gcHJvdG9jb2wgKyAnLi4uJyArIGZpbGVcbiAgICAgICk7XG4gICAgfVxuICAgIGh0bWwgKz1cbiAgICAgICcgJyArIG5hbWUgKyAodmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSA9PSAnJyA/ICcnIDogXCI9J1wiICsgdmFsdWUucmVwbGFjZShcIidcIiwgJyZhcG9zOycpICsgXCInXCIpO1xuICB9XG4gIHJldHVybiBodG1sICsgJz4nO1xufVxuIl19", "/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { stringifyDebug } from './stringify';\nimport { qDev } from '../util/qdev';\nexport var QError;\n(function (QError) {\n    // core 000-099\n    QError[QError[\"TODO\"] = 0] = \"TODO\";\n    QError[QError[\"Core_qConfigNotFound_path\"] = 1] = \"Core_qConfigNotFound_path\";\n    QError[QError[\"Core_unrecognizedStack_frame\"] = 2] = \"Core_unrecognizedStack_frame\";\n    QError[QError[\"Core_noAttribute_atr1_element\"] = 3] = \"Core_noAttribute_atr1_element\";\n    QError[QError[\"Core_noAttribute_atr1_attr2_element\"] = 4] = \"Core_noAttribute_atr1_attr2_element\";\n    QError[QError[\"Core_missingProperty_name_props\"] = 5] = \"Core_missingProperty_name_props\";\n    QError[QError[\"Core_missingExport_name_url_props\"] = 6] = \"Core_missingExport_name_url_props\";\n    // QRL 100-199\n    QError[QError[\"QRL_expectFunction_url_actual\"] = 100] = \"QRL_expectFunction_url_actual\";\n    // Injection 200-299\n    QError[QError[\"Injector_noHost_element\"] = 200] = \"Injector_noHost_element\";\n    QError[QError[\"Injector_expectedSpecificInjector_expected_actual\"] = 201] = \"Injector_expectedSpecificInjector_expected_actual\";\n    QError[QError[\"Injector_notElement_arg\"] = 202] = \"Injector_notElement_arg\";\n    QError[QError[\"Injector_wrongMethodThis_expected_actual\"] = 203] = \"Injector_wrongMethodThis_expected_actual\";\n    QError[QError[\"Injector_missingSerializedState_entityKey_element\"] = 204] = \"Injector_missingSerializedState_entityKey_element\";\n    QError[QError[\"Injector_notFound_element\"] = 206] = \"Injector_notFound_element\";\n    QError[QError[\"Injector_eventInjectorNotSerializable\"] = 207] = \"Injector_eventInjectorNotSerializable\";\n    // Entities 300-399\n    QError[QError[\"Entity_notValidKey_key\"] = 300] = \"Entity_notValidKey_key\";\n    QError[QError[\"Entity_keyAlreadyExists_key\"] = 301] = \"Entity_keyAlreadyExists_key\";\n    QError[QError[\"Entity_invalidAttribute_name\"] = 303] = \"Entity_invalidAttribute_name\";\n    QError[QError[\"Entity_missingExpandoOrState_attrName\"] = 304] = \"Entity_missingExpandoOrState_attrName\";\n    QError[QError[\"Entity_elementMissingEntityAttr_element_attr\"] = 305] = \"Entity_elementMissingEntityAttr_element_attr\";\n    QError[QError[\"Entity_noState_entity_props\"] = 306] = \"Entity_noState_entity_props\";\n    QError[QError[\"Entity_expected_obj\"] = 307] = \"Entity_expected_obj\";\n    QError[QError[\"Entity_overridesConstructor_entity\"] = 308] = \"Entity_overridesConstructor_entity\";\n    QError[QError[\"Entity_keyMissingParts_key_key\"] = 309] = \"Entity_keyMissingParts_key_key\";\n    QError[QError[\"Entity_no$type_entity\"] = 310] = \"Entity_no$type_entity\";\n    QError[QError[\"Entity_no$keyProps_entity\"] = 311] = \"Entity_no$keyProps_entity\";\n    QError[QError[\"Entity_no$qrl_entity\"] = 312] = \"Entity_no$qrl_entity\";\n    QError[QError[\"Entity_nameCollision_name_currentQrl_expectedQrl\"] = 313] = \"Entity_nameCollision_name_currentQrl_expectedQrl\";\n    QError[QError[\"Entity_keyTooManyParts_entity_parts_key\"] = 314] = \"Entity_keyTooManyParts_entity_parts_key\";\n    QError[QError[\"Entity_keyNameMismatch_key_name_entity_name\"] = 315] = \"Entity_keyNameMismatch_key_name_entity_name\";\n    QError[QError[\"Entity_stateMissingKey_state\"] = 316] = \"Entity_stateMissingKey_state\";\n    // Component 400-499\n    QError[QError[\"Component_bindNeedsKey\"] = 400] = \"Component_bindNeedsKey\";\n    QError[QError[\"Component_bindNeedsValue\"] = 401] = \"Component_bindNeedsValue\";\n    QError[QError[\"Component_needsState\"] = 402] = \"Component_needsState\";\n    QError[QError[\"Component_needsInjectionContext_constructor\"] = 403] = \"Component_needsInjectionContext_constructor\";\n    QError[QError[\"Component_noProperty_propName_props_host\"] = 404] = \"Component_noProperty_propName_props_host\";\n    QError[QError[\"Component_notFound_component\"] = 405] = \"Component_notFound_component\";\n    QError[QError[\"Component_doesNotMatch_component_actual\"] = 406] = \"Component_doesNotMatch_component_actual\";\n    QError[QError[\"Component_noState_component_props\"] = 408] = \"Component_noState_component_props\";\n    // Provider 500-599\n    QError[QError[\"Provider_unrecognizedFormat_value\"] = 500] = \"Provider_unrecognizedFormat_value\";\n    // Render 600-699\n    QError[QError[\"Render_unexpectedJSXNodeType_type\"] = 600] = \"Render_unexpectedJSXNodeType_type\";\n    QError[QError[\"Render_unsupportedFormat_obj_attr\"] = 601] = \"Render_unsupportedFormat_obj_attr\";\n    QError[QError[\"Render_expectingEntity_entity\"] = 602] = \"Render_expectingEntity_entity\";\n    QError[QError[\"Render_expectingEntityArray_obj\"] = 603] = \"Render_expectingEntityArray_obj\";\n    QError[QError[\"Render_expectingEntityOrComponent_obj\"] = 604] = \"Render_expectingEntityOrComponent_obj\";\n    QError[QError[\"Render_stateMachineStuck\"] = 699] = \"Render_stateMachineStuck\";\n    // Event\n    QError[QError[\"Event_emitEventRequiresName_url\"] = 700] = \"Event_emitEventRequiresName_url\";\n    QError[QError[\"Event_emitEventCouldNotFindListener_event_element\"] = 701] = \"Event_emitEventCouldNotFindListener_event_element\";\n})(QError || (QError = {}));\nexport function qError(code, ...args) {\n    if (qDev) {\n        const text = codeToText(code);\n        const parts = text.split('{}');\n        const error = parts\n            .map((value, index) => {\n            return value + (index === parts.length - 1 ? '' : stringifyDebug(args[index]));\n        })\n            .join('');\n        debugger; // eslint-disable-line no-debugger\n        return new Error(error);\n    }\n    else {\n        return new Error(`QError ` + code);\n    }\n}\nfunction codeToText(code) {\n    const area = {\n        0: 'ERROR',\n        1: 'QRL-ERROR',\n        2: 'INJECTOR-ERROR',\n        3: 'SERVICE-ERROR',\n        4: 'COMPONENT-ERROR',\n        5: 'PROVIDER-ERROR',\n        6: 'RENDER-ERROR',\n        7: 'EVENT-ERROR',\n    }[Math.floor(code / 100)];\n    const text = {\n        [QError.TODO]: '{}',\n        [QError.Core_qConfigNotFound_path]: \"QConfig not found in path '{}'.\",\n        [QError.Core_unrecognizedStack_frame]: \"Unrecognized stack format '{}'\",\n        [QError.Core_noAttribute_atr1_element]: \"Could not find entity state '{}' at '{}' or any of it's parents.\",\n        [QError.Core_noAttribute_atr1_attr2_element]: \"Could not find entity state '{}' ( or entity provider '{}') at '{}' or any of it's parents.\",\n        [QError.Core_missingProperty_name_props]: \"Missing property '{}' in props '{}'.\",\n        [QError.Core_missingExport_name_url_props]: \"Missing export '{}' from '{}'. Exported symbols are: {}\",\n        //////////////\n        [QError.QRL_expectFunction_url_actual]: \"QRL '${}' should point to function, was '{}'.\",\n        //////////////\n        [QError.Injector_noHost_element]: \"Can't find host element above '{}'.\",\n        [QError.Injector_expectedSpecificInjector_expected_actual]: \"Provider is expecting '{}' but got '{}'.\",\n        [QError.Injector_notElement_arg]: \"Expected 'Element' was '{}'.\",\n        [QError.Injector_wrongMethodThis_expected_actual]: \"Expected injection 'this' to be of type '{}', but was of type '{}'.\",\n        [QError.Injector_missingSerializedState_entityKey_element]: \"Entity key '{}' is found on '{}' but does not contain state. Was 'serializeState()' not run during dehydration?\",\n        [QError.Injector_notFound_element]: \"No injector can be found starting at '{}'.\",\n        [QError.Injector_eventInjectorNotSerializable]: 'EventInjector does not support serialization.',\n        //////////////\n        [QError.Entity_notValidKey_key]: \"Data key '{}' is not a valid key.\\n\" +\n            '  - Data key can only contain characters (preferably lowercase) or number\\n' +\n            '  - Data key is prefixed with entity name\\n' +\n            \"  - Data key is made up from parts that are separated with ':'.\",\n        [QError.Entity_keyAlreadyExists_key]: \"A entity with key '{}' already exists.\",\n        [QError.Entity_invalidAttribute_name]: \"'{}' is not a valid attribute. \" +\n            \"Attributes can only contain 'a-z' (lowercase), '0-9', '-' and '_'.\",\n        [QError.Entity_missingExpandoOrState_attrName]: \"Found '{}' but expando did not have entity and attribute did not have state.\",\n        [QError.Entity_elementMissingEntityAttr_element_attr]: \"Element '{}' is missing entity attribute definition '{}'.\",\n        [QError.Entity_noState_entity_props]: \"Unable to create state for entity '{}' with props '{}' because no state found and '$newState()' method was not defined on entity.\",\n        [QError.Entity_expected_obj]: \"'{}' is not an instance of 'Entity'.\",\n        [QError.Entity_overridesConstructor_entity]: \"'{}' overrides 'constructor' property preventing 'EntityType' retrieval.\",\n        [QError.Entity_no$keyProps_entity]: \"Entity '{}' does not define '$keyProps'.\",\n        [QError.Entity_no$type_entity]: \"Entity '{}' must have static '$type' property defining the name of the entity.\",\n        [QError.Entity_no$qrl_entity]: \"Entity '{}' must have static '$qrl' property defining the import location of the entity.\",\n        [QError.Entity_nameCollision_name_currentQrl_expectedQrl]: \"Name collision. Already have entity named '{}' with QRL '{}' but expected QRL '{}'.\",\n        [QError.Entity_keyMissingParts_key_key]: \"Entity key '{}' is missing values. Expecting '{}:someValue'.\",\n        [QError.Entity_keyTooManyParts_entity_parts_key]: \"Entity '{}' defines '$keyProps' as  '{}'. Actual key '{}' has more parts than entity defines.\",\n        [QError.Entity_keyNameMismatch_key_name_entity_name]: \"Key '{}' belongs to entity named '{}', but expected entity '{}' with name '{}'.\",\n        [QError.Entity_stateMissingKey_state]: \"Entity state is missing '$key'. Are you sure you passed in state? Got '{}'.\",\n        //////////////\n        [QError.Component_bindNeedsKey]: \"'bind:' must have an key. (Example: 'bind:key=\\\"propertyName\\\"').\",\n        [QError.Component_bindNeedsValue]: \"'bind:id' must have a property name. (Example: 'bind:key=\\\"propertyName\\\"').\",\n        [QError.Component_needsState]: \"Can't find state on host element.\",\n        [QError.Component_needsInjectionContext_constructor]: \"Components must be instantiated inside an injection context. Use '{}.new(...)' for creation.\",\n        [QError.Component_noProperty_propName_props_host]: \"Property '{}' not found in '{}' on component '{}'.\",\n        [QError.Component_notFound_component]: \"Unable to find '{}' component.\",\n        [QError.Component_doesNotMatch_component_actual]: \"Requesting component type '{}' does not match existing component instance '{}'.\",\n        [QError.Component_noState_component_props]: \"Unable to create state for component '{}' with props '{}' because no state found and '$newState()' method was not defined on component.\",\n        //////////////\n        [QError.Provider_unrecognizedFormat_value]: \"Unrecognized expression format '{}'.\",\n        //////////////\n        [QError.Render_unexpectedJSXNodeType_type]: 'Unexpected JSXNode<{}> type.',\n        [QError.Render_unsupportedFormat_obj_attr]: \"Value '{}' can't be written into '{}' attribute.\",\n        [QError.Render_expectingEntity_entity]: \"Expecting entity object, got '{}'.\",\n        [QError.Render_expectingEntityArray_obj]: \"Expecting array of entities, got '{}'.\",\n        [QError.Render_expectingEntityOrComponent_obj]: \"Expecting Entity or Component got '{}'.\",\n        [QError.Render_stateMachineStuck]: 'Render state machine did not advance.',\n        //////////////\n        [QError.Event_emitEventRequiresName_url]: \"Missing '$type' attribute in the '{}' url.\",\n        [QError.Event_emitEventCouldNotFindListener_event_element]: \"Re-emitting event '{}' but no listener found at '{}' or any of its parents.\",\n    }[code];\n    let textCode = '000' + code;\n    textCode = textCode.slice(-3);\n    return `${area}(Q-${textCode}): ${text}`;\n}\n//# sourceMappingURL=data:application/json;base64,", "/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { NodeType } from './types';\nexport function isNode(value) {\n    return value && typeof value.nodeType == 'number';\n}\nexport function isDocument(value) {\n    return value && value.nodeType == NodeType.DOCUMENT_NODE;\n}\nexport function isElement(value) {\n    return isNode(value) && value.nodeType == NodeType.ELEMENT_NODE;\n}\nexport function isText(value) {\n    return isNode(value) && value.nodeType == NodeType.TEXT_NODE;\n}\nexport function isComment(value) {\n    return isNode(value) && value.nodeType == NodeType.COMMENT_NODE;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9lbGVtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFbkMsTUFBTSxVQUFVLE1BQU0sQ0FBQyxLQUFVO0lBQy9CLE9BQU8sS0FBSyxJQUFJLE9BQU8sS0FBSyxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUM7QUFDcEQsQ0FBQztBQUNELE1BQU0sVUFBVSxVQUFVLENBQUMsS0FBVTtJQUNuQyxPQUFPLEtBQUssSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxhQUFhLENBQUM7QUFDM0QsQ0FBQztBQUNELE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxZQUFZLENBQUM7QUFDbEUsQ0FBQztBQUNELE1BQU0sVUFBVSxNQUFNLENBQUMsS0FBVTtJQUMvQixPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxTQUFTLENBQUM7QUFDL0QsQ0FBQztBQUNELE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxZQUFZLENBQUM7QUFDbEUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgTm9kZVR5cGUgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzTm9kZSh2YWx1ZTogYW55KTogdmFsdWUgaXMgTm9kZSB7XG4gIHJldHVybiB2YWx1ZSAmJiB0eXBlb2YgdmFsdWUubm9kZVR5cGUgPT0gJ251bWJlcic7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNEb2N1bWVudCh2YWx1ZTogYW55KTogdmFsdWUgaXMgRG9jdW1lbnQge1xuICByZXR1cm4gdmFsdWUgJiYgdmFsdWUubm9kZVR5cGUgPT0gTm9kZVR5cGUuRE9DVU1FTlRfTk9ERTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0VsZW1lbnQodmFsdWU6IGFueSk6IHZhbHVlIGlzIEhUTUxFbGVtZW50IHtcbiAgcmV0dXJuIGlzTm9kZSh2YWx1ZSkgJiYgdmFsdWUubm9kZVR5cGUgPT0gTm9kZVR5cGUuRUxFTUVOVF9OT0RFO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVGV4dCh2YWx1ZTogYW55KTogdmFsdWUgaXMgVGV4dCB7XG4gIHJldHVybiBpc05vZGUodmFsdWUpICYmIHZhbHVlLm5vZGVUeXBlID09IE5vZGVUeXBlLlRFWFRfTk9ERTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0NvbW1lbnQodmFsdWU6IGFueSk6IHZhbHVlIGlzIENvbW1lbnQge1xuICByZXR1cm4gaXNOb2RlKHZhbHVlKSAmJiB2YWx1ZS5ub2RlVHlwZSA9PSBOb2RlVHlwZS5DT01NRU5UX05PREU7XG59XG4iXX0=", "import { getPlatform } from '../platform/platform';\nimport { assertDefined, assertEqual } from '../assert/assert';\nimport { parseQRL, stringifyQRL } from '../import/qrl';\nimport { isQrl } from '../import/qrl-class';\nimport { getContext } from '../props/props';\nimport { getDocument } from '../util/dom';\nimport { isDocument, isElement } from '../util/element';\nimport { logError, logWarn } from '../util/log';\nimport { ELEMENT_ID, ELEMENT_ID_PREFIX, QContainerAttr, QHostAttr, QObjAttr, } from '../util/markers';\nimport { qDev } from '../util/qdev';\nimport { getProxyMap, QOjectSubsSymbol, QOjectTargetSymbol, shouldSerialize, _restoreQObject, } from './q-object';\nexport const UNDEFINED_PREFIX = '\\u0010';\nexport const QRL_PREFIX = '\\u0011';\nexport function resume(elmOrDoc) {\n    const parentElm = isDocument(elmOrDoc) ? elmOrDoc.documentElement : elmOrDoc;\n    if (!isContainer(parentElm)) {\n        // logWarn('Skipping hydration because parent element is not q:container');\n        return;\n    }\n    const doc = getDocument(elmOrDoc);\n    const isDoc = isDocument(elmOrDoc) || elmOrDoc === doc.documentElement;\n    const parentJSON = isDoc ? doc.body : parentElm;\n    const script = getQwikJSON(parentJSON);\n    if (!script) {\n        logWarn('Skipping hydration qwik/json metadata was not found.');\n        return;\n    }\n    script.remove();\n    const map = getProxyMap(doc);\n    const meta = JSON.parse(script.textContent || '{}');\n    // Collect all elements\n    const elements = new Map();\n    getNodesInScope(parentElm, hasQId).forEach((el) => {\n        const id = el.getAttribute(ELEMENT_ID);\n        elements.set(ELEMENT_ID_PREFIX + id, el);\n    });\n    const getObject = (id) => {\n        return getObjectImpl(id, elements, meta.objs, map);\n    };\n    // Revive proxies with subscriptions into the proxymap\n    reviveValues(meta.objs, meta.subs, elements, map, parentJSON);\n    // Rebuild target objects\n    for (const obj of meta.objs) {\n        reviveNestedObjects(obj, getObject);\n    }\n    // Walk all elements with q:obj and resume their state\n    getNodesInScope(parentElm, hasQObj).forEach((el) => {\n        const qobj = el.getAttribute(QObjAttr);\n        const host = el.getAttribute(QHostAttr);\n        const ctx = getContext(el);\n        qobj.split(' ').forEach((part) => {\n            if (part !== '') {\n                const obj = getObject(part);\n                ctx.refMap.add(obj);\n            }\n            else if (qDev) {\n                logError('QObj contains empty ref');\n            }\n        });\n        if (host) {\n            const [props, renderQrl] = host.split(' ').map(strToInt);\n            assertDefined(props);\n            assertDefined(renderQrl);\n            ctx.props = ctx.refMap.get(props);\n            ctx.renderQrl = ctx.refMap.get(renderQrl);\n        }\n    });\n}\nexport function snapshotState(elmOrDoc) {\n    const doc = getDocument(elmOrDoc);\n    const parentElm = isDocument(elmOrDoc) ? elmOrDoc.documentElement : elmOrDoc;\n    const proxyMap = getProxyMap(doc);\n    const objSet = new Set();\n    const platform = getPlatform(doc);\n    const elementToIndex = new Map();\n    // Collect all qObjected around the DOM\n    const elements = getNodesInScope(parentElm, hasQObj);\n    elements.forEach((node) => {\n        const props = getContext(node);\n        const qMap = props.refMap;\n        qMap.array.forEach((v) => {\n            collectValue(v, objSet);\n        });\n    });\n    // Convert objSet to array\n    const objs = Array.from(objSet);\n    objs.sort((a, b) => {\n        const isProxyA = proxyMap.has(a) ? 0 : 1;\n        const isProxyB = proxyMap.has(b) ? 0 : 1;\n        return isProxyA - isProxyB;\n    });\n    const objToId = new Map();\n    let count = 0;\n    for (const obj of objs) {\n        objToId.set(obj, count);\n        count++;\n    }\n    function getElementID(el) {\n        let id = elementToIndex.get(el);\n        if (id === undefined) {\n            if (el.isConnected) {\n                id = intToStr(elementToIndex.size);\n                el.setAttribute(ELEMENT_ID, id);\n                id = ELEMENT_ID_PREFIX + id;\n            }\n            else {\n                id = null;\n            }\n            elementToIndex.set(el, id);\n        }\n        return id;\n    }\n    function getObjId(obj) {\n        if (obj !== null && typeof obj === 'object') {\n            const target = obj[QOjectTargetSymbol];\n            const id = objToId.get(normalizeObj(target !== null && target !== void 0 ? target : obj));\n            if (id !== undefined) {\n                const proxySuffix = target ? '!' : '';\n                return intToStr(id) + proxySuffix;\n            }\n            if (!target && isElement(obj)) {\n                return getElementID(obj);\n            }\n        }\n        else {\n            const id = objToId.get(normalizeObj(obj));\n            if (id !== undefined) {\n                return intToStr(id);\n            }\n        }\n        return null;\n    }\n    const subs = objs\n        .map((obj) => {\n        var _a;\n        const subs = (_a = proxyMap.get(obj)) === null || _a === void 0 ? void 0 : _a[QOjectSubsSymbol];\n        if (subs) {\n            return Object.fromEntries(Array.from(subs.entries()).map(([el, set]) => {\n                const id = getElementID(el);\n                if (id !== null) {\n                    return [id, Array.from(set)];\n                }\n                else {\n                    return [undefined, undefined];\n                }\n            }));\n        }\n        else {\n            return null;\n        }\n    })\n        .filter((a) => !!a);\n    const serialize = (value) => {\n        var _a;\n        return (_a = getObjId(value)) !== null && _a !== void 0 ? _a : value;\n    };\n    const qrlSerializeOptions = {\n        platform,\n        getObjId,\n    };\n    const convertedObjs = objs.map((obj) => {\n        if (Array.isArray(obj)) {\n            return obj.map(serialize);\n        }\n        else if (obj && typeof obj === 'object') {\n            if (isQrl(obj)) {\n                return QRL_PREFIX + stringifyQRL(obj, qrlSerializeOptions);\n            }\n            const output = {};\n            Object.entries(obj).forEach(([key, value]) => {\n                output[key] = serialize(value);\n            });\n            return output;\n        }\n        return obj;\n    });\n    // Write back to the dom\n    elements.forEach((node) => {\n        const ctx = getContext(node);\n        const props = ctx.props;\n        const renderQrl = ctx.renderQrl;\n        const attribute = ctx.refMap.array\n            .map((obj) => {\n            const id = getObjId(obj);\n            assertDefined(id);\n            return id;\n        })\n            .join(' ');\n        node.setAttribute(QObjAttr, attribute);\n        if (props) {\n            const objs = [props];\n            if (renderQrl) {\n                objs.push(renderQrl);\n            }\n            node.setAttribute(QHostAttr, objs.map((obj) => ctx.refMap.indexOf(obj)).join(' '));\n        }\n    });\n    // Sanity check of serialized element\n    if (qDev) {\n        elementToIndex.forEach((value, el) => {\n            if (getDocument(el) !== doc) {\n                logWarn('element from different document', value, el.tagName);\n            }\n            if (!value) {\n                logWarn('unconnected element', el.tagName, '\\n');\n            }\n        });\n    }\n    return {\n        objs: convertedObjs,\n        subs,\n    };\n}\nexport function getQwikJSON(parentElm) {\n    let child = parentElm.lastElementChild;\n    while (child) {\n        if (child.tagName === 'SCRIPT' && child.getAttribute('type') === 'qwik/json') {\n            return child;\n        }\n        child = child.previousElementSibling;\n    }\n    return undefined;\n}\nexport function getNodesInScope(parent, predicate) {\n    const nodes = [];\n    walkNodes(nodes, parent, predicate);\n    return nodes;\n}\nexport function walkNodes(nodes, parent, predicate) {\n    let child = parent.firstElementChild;\n    while (child) {\n        if (!isContainer(child)) {\n            if (predicate(child)) {\n                nodes.push(child);\n            }\n            walkNodes(nodes, child, predicate);\n        }\n        child = child.nextElementSibling;\n    }\n}\nfunction reviveValues(objs, subs, elementMap, map, containerEl) {\n    for (let i = 0; i < objs.length; i++) {\n        const value = objs[i];\n        if (typeof value === 'string') {\n            if (value === UNDEFINED_PREFIX) {\n                objs[i] = undefined;\n            }\n            else if (value.startsWith(QRL_PREFIX)) {\n                objs[i] = parseQRL(value.slice(1), containerEl);\n            }\n        }\n        else {\n            const sub = subs[i];\n            if (sub) {\n                const converted = new Map();\n                Object.entries(sub).forEach((entry) => {\n                    const el = elementMap.get(entry[0]);\n                    if (!el) {\n                        logWarn('QWIK can not revive subscriptions because of missing element ID', entry, value);\n                        return;\n                    }\n                    const set = new Set(entry[1]);\n                    converted.set(el, set);\n                });\n                _restoreQObject(value, map, converted);\n            }\n        }\n    }\n}\nfunction reviveNestedObjects(obj, getObject) {\n    if (obj && typeof obj == 'object') {\n        if (isQrl(obj)) {\n            if (obj.capture && obj.capture.length > 0) {\n                obj.captureRef = obj.capture.map(getObject);\n                obj.capture = null;\n            }\n            return;\n        }\n        else if (Array.isArray(obj)) {\n            for (let i = 0; i < obj.length; i++) {\n                const value = obj[i];\n                if (typeof value == 'string') {\n                    obj[i] = getObject(value);\n                }\n                else {\n                    reviveNestedObjects(value, getObject);\n                }\n            }\n        }\n        else if (Object.getPrototypeOf(obj) === Object.prototype) {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    if (typeof value == 'string') {\n                        obj[key] = getObject(value);\n                    }\n                    else {\n                        reviveNestedObjects(value, getObject);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction getObjectImpl(id, elements, objs, map) {\n    if (id.startsWith(ELEMENT_ID_PREFIX)) {\n        assertEqual(elements.has(id), true);\n        return elements.get(id);\n    }\n    const index = strToInt(id);\n    assertEqual(objs.length > index, true);\n    const obj = objs[index];\n    const needsProxy = id.endsWith('!');\n    if (needsProxy) {\n        const finalObj = map.get(obj);\n        assertDefined(finalObj);\n        return finalObj;\n    }\n    return obj;\n}\nfunction normalizeObj(obj) {\n    var _a;\n    if (obj === undefined || !shouldSerialize(obj)) {\n        return UNDEFINED_PREFIX;\n    }\n    if (obj && typeof obj === 'object') {\n        const value = (_a = obj[QOjectTargetSymbol]) !== null && _a !== void 0 ? _a : obj;\n        return value;\n    }\n    return obj;\n}\nfunction collectValue(obj, seen) {\n    collectQObjects(obj, seen);\n    seen.add(normalizeObj(obj));\n}\nfunction collectQrl(obj, seen) {\n    seen.add(normalizeObj(obj));\n    if (obj.captureRef) {\n        obj.captureRef.forEach((obj) => collectValue(obj, seen));\n    }\n}\nfunction collectQObjects(obj, seen) {\n    if (obj != null) {\n        if (typeof obj === 'object') {\n            if (!obj[QOjectTargetSymbol] && isElement(obj)) {\n                return;\n            }\n            if (isQrl(obj)) {\n                collectQrl(obj, seen);\n                return;\n            }\n            obj = normalizeObj(obj);\n        }\n        if (typeof obj === 'object') {\n            if (seen.has(obj))\n                return;\n            seen.add(obj);\n            if (Array.isArray(obj)) {\n                for (let i = 0; i < obj.length; i++) {\n                    collectQObjects(obj[i], seen);\n                }\n            }\n            else {\n                for (const key in obj) {\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                        collectQObjects(obj[key], seen);\n                    }\n                }\n            }\n        }\n        if (typeof obj === 'string') {\n            seen.add(obj);\n        }\n    }\n}\nexport function isProxy(obj) {\n    return obj !== null && typeof obj === 'object' && QOjectTargetSymbol in obj;\n}\nexport function isContainer(el) {\n    return el.hasAttribute(QContainerAttr);\n}\nfunction hasQObj(el) {\n    return el.hasAttribute(QObjAttr);\n}\nfunction hasQId(el) {\n    return el.hasAttribute(ELEMENT_ID);\n}\nexport const intToStr = (nu) => {\n    return nu.toString(36);\n};\nexport const strToInt = (nu) => {\n    return parseInt(nu, 36);\n};\n//# sourceMappingURL=data:application/json;base64,", "import { QObjAttr } from '../util/markers';\nexport function newQObjectMap(element) {\n    const array = [];\n    let added = element.hasAttribute(QObjAttr);\n    return {\n        array,\n        get(index) {\n            return array[index];\n        },\n        indexOf(obj) {\n            const index = array.indexOf(obj);\n            return index === -1 ? undefined : index;\n        },\n        add(object) {\n            const index = array.indexOf(object);\n            if (index === -1) {\n                array.push(object);\n                if (!added) {\n                    element.setAttribute(QObjAttr, '');\n                    added = true;\n                }\n                return array.length - 1;\n            }\n            return index;\n        },\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcHMtb2JqLW1hcC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcHJvcHMvcHJvcHMtb2JqLW1hcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFTM0MsTUFBTSxVQUFVLGFBQWEsQ0FBQyxPQUFnQjtJQUM1QyxNQUFNLEtBQUssR0FBbUIsRUFBRSxDQUFDO0lBQ2pDLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFM0MsT0FBTztRQUNMLEtBQUs7UUFDTCxHQUFHLENBQUMsS0FBYTtZQUNmLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RCLENBQUM7UUFDRCxPQUFPLENBQUMsR0FBVztZQUNqQixNQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2pDLE9BQU8sS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUMxQyxDQUFDO1FBQ0QsR0FBRyxDQUFDLE1BQW9CO1lBQ3RCLE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDcEMsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFDLEVBQUU7Z0JBQ2hCLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ25CLElBQUksQ0FBQyxLQUFLLEVBQUU7b0JBQ1YsT0FBTyxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUM7b0JBQ25DLEtBQUssR0FBRyxJQUFJLENBQUM7aUJBQ2Q7Z0JBQ0QsT0FBTyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQzthQUN6QjtZQUNELE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQztLQUNZLENBQUM7QUFDbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgUU9iamVjdCB9IGZyb20gJy4uL29iamVjdC9xLW9iamVjdCc7XG5pbXBvcnQgeyBRT2JqQXR0ciB9IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUU9iamVjdE1hcCB7XG4gIGFkZChxT2JqZWN0OiBRT2JqZWN0PGFueT4pOiBudW1iZXI7XG4gIGdldChpbmRleDogbnVtYmVyKTogUU9iamVjdDxhbnk+IHwgdW5kZWZpbmVkO1xuICBpbmRleE9mKG9iamVjdDogUU9iamVjdDxhbnk+KTogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICBhcnJheTogUU9iamVjdDxhbnk+W107XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBuZXdRT2JqZWN0TWFwKGVsZW1lbnQ6IEVsZW1lbnQpOiBRT2JqZWN0TWFwIHtcbiAgY29uc3QgYXJyYXk6IFFPYmplY3Q8YW55PltdID0gW107XG4gIGxldCBhZGRlZCA9IGVsZW1lbnQuaGFzQXR0cmlidXRlKFFPYmpBdHRyKTtcblxuICByZXR1cm4ge1xuICAgIGFycmF5LFxuICAgIGdldChpbmRleDogbnVtYmVyKTogUU9iamVjdDxhbnk+IHwgdW5kZWZpbmVkIHtcbiAgICAgIHJldHVybiBhcnJheVtpbmRleF07XG4gICAgfSxcbiAgICBpbmRleE9mKG9iajogc3RyaW5nKTogbnVtYmVyIHwgdW5kZWZpbmVkIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gYXJyYXkuaW5kZXhPZihvYmopO1xuICAgICAgcmV0dXJuIGluZGV4ID09PSAtMSA/IHVuZGVmaW5lZCA6IGluZGV4O1xuICAgIH0sXG4gICAgYWRkKG9iamVjdDogUU9iamVjdDxhbnk+KSB7XG4gICAgICBjb25zdCBpbmRleCA9IGFycmF5LmluZGV4T2Yob2JqZWN0KTtcbiAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgYXJyYXkucHVzaChvYmplY3QpO1xuICAgICAgICBpZiAoIWFkZGVkKSB7XG4gICAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoUU9iakF0dHIsICcnKTtcbiAgICAgICAgICBhZGRlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFycmF5Lmxlbmd0aCAtIDE7XG4gICAgICB9XG4gICAgICByZXR1cm4gaW5kZXg7XG4gICAgfSxcbiAgfSBhcyBRT2JqZWN0TWFwO1xufVxuIl19", "// TODO(misko): need full object parsing /serializing\nimport { assertEqual } from '../assert/assert';\nexport function qDeflate(obj, hostCtx) {\n    return String(hostCtx.refMap.add(obj));\n}\nexport function qInflate(ref, hostCtx) {\n    const int = parseInt(ref, 10);\n    const obj = hostCtx.refMap.get(int);\n    assertEqual(hostCtx.refMap.array.length > int, true);\n    return obj;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicS1qc29uLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9qc29uL3EtanNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQ7QUFDckQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRy9DLE1BQU0sVUFBVSxRQUFRLENBQUMsR0FBUSxFQUFFLE9BQWlCO0lBQ2xELE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDekMsQ0FBQztBQUVELE1BQU0sVUFBVSxRQUFRLENBQUMsR0FBVyxFQUFFLE9BQWlCO0lBQ3JELE1BQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDOUIsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDcEMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDckQsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVE9ETyhtaXNrbyk6IG5lZWQgZnVsbCBvYmplY3QgcGFyc2luZyAvc2VyaWFsaXppbmdcbmltcG9ydCB7IGFzc2VydEVxdWFsIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgdHlwZSB7IFFDb250ZXh0IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gcURlZmxhdGUob2JqOiBhbnksIGhvc3RDdHg6IFFDb250ZXh0KTogc3RyaW5nIHtcbiAgcmV0dXJuIFN0cmluZyhob3N0Q3R4LnJlZk1hcC5hZGQob2JqKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBxSW5mbGF0ZShyZWY6IHN0cmluZywgaG9zdEN0eDogUUNvbnRleHQpOiBhbnkge1xuICBjb25zdCBpbnQgPSBwYXJzZUludChyZWYsIDEwKTtcbiAgY29uc3Qgb2JqID0gaG9zdEN0eC5yZWZNYXAuZ2V0KGludCk7XG4gIGFzc2VydEVxdWFsKGhvc3RDdHgucmVmTWFwLmFycmF5Lmxlbmd0aCA+IGludCwgdHJ1ZSk7XG4gIHJldHVybiBvYmo7XG59XG4iXX0=", "/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nexport function fromCamelToKebabCase(text) {\n    return text.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\nexport function fromKebabToCamelCase(text) {\n    return text.replace(/-./g, (x) => x[1].toUpperCase());\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzZS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9jYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE1BQU0sVUFBVSxvQkFBb0IsQ0FBQyxJQUFZO0lBQy9DLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNoRSxDQUFDO0FBRUQsTUFBTSxVQUFVLG9CQUFvQixDQUFDLElBQVk7SUFDL0MsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDeEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGZyb21DYW1lbFRvS2ViYWJDYXNlKHRleHQ6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiB0ZXh0LnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csICckMS0kMicpLnRvTG93ZXJDYXNlKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmcm9tS2ViYWJUb0NhbWVsQ2FzZSh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gdGV4dC5yZXBsYWNlKC8tLi9nLCAoeCkgPT4geFsxXS50b1VwcGVyQ2FzZSgpKTtcbn1cbiJdfQ==", "/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nexport function stringify(value) {\n    return value == null ? null : String(value);\n}\nexport function debugStringify(value) {\n    if (value != null && typeof value == 'object') {\n        return String(value.constructor.name) + '\\n' + safeJSONStringify(value);\n    }\n    return String(value);\n}\nfunction safeJSONStringify(value) {\n    try {\n        return JSON.stringify(value, null, '  ');\n    }\n    catch (e) {\n        return String(e);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL3N0cmluZ2lmeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxNQUFNLFVBQVUsU0FBUyxDQUFDLEtBQVU7SUFDbEMsT0FBTyxLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxLQUFVO0lBQ3ZDLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxPQUFPLEtBQUssSUFBSSxRQUFRLEVBQUU7UUFDN0MsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDekU7SUFDRCxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN2QixDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxLQUFVO0lBQ25DLElBQUk7UUFDRixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztLQUMxQztJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsT0FBTyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDbEI7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5KHZhbHVlOiBhbnkpOiBzdHJpbmcgfCBudWxsIHtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyBudWxsIDogU3RyaW5nKHZhbHVlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlYnVnU3RyaW5naWZ5KHZhbHVlOiBhbnkpOiBzdHJpbmcge1xuICBpZiAodmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gU3RyaW5nKHZhbHVlLmNvbnN0cnVjdG9yLm5hbWUpICsgJ1xcbicgKyBzYWZlSlNPTlN0cmluZ2lmeSh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIHNhZmVKU09OU3RyaW5naWZ5KHZhbHVlOiBhbnkpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodmFsdWUsIG51bGwsICcgICcpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIFN0cmluZyhlKTtcbiAgfVxufVxuIl19", "import { getPlatform } from '../platform/platform';\nimport { QError, qError } from '../error/error';\nimport { parseQRL, qrlImport, stringifyQRL } from '../import/qrl';\nimport { isQrl } from '../import/qrl-class';\nimport { qDeflate } from '../json/q-json';\nimport { getInvokeContext, useInvoke } from '../use/use-core';\nimport { fromCamelToKebabCase } from '../util/case';\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { isPromise } from '../util/promises';\nimport { debugStringify } from '../util/stringify';\nimport { getDocument } from '../util/dom';\nimport { setAttribute } from '../render/cursor';\nimport { emitEvent } from '../util/event';\nconst ON_PROP_REGEX = /^on([A-Z]|-.).*Qrl$/;\nconst ON$_PROP_REGEX = /^on([A-Z]|-.).*\\$$/;\nexport function isOnProp(prop) {\n    return ON_PROP_REGEX.test(prop);\n}\nexport function isOn$Prop(prop) {\n    return ON$_PROP_REGEX.test(prop);\n}\nexport function qPropReadQRL(ctx, prop) {\n    const existingQRLs = getExistingQRLs(ctx, prop);\n    if (existingQRLs.length === 0) {\n        return null;\n    }\n    return () => {\n        const context = getInvokeContext();\n        const qrls = getExistingQRLs(ctx, prop);\n        return Promise.all(qrls.map(async (qrlOrPromise) => {\n            const qrl = await qrlOrPromise;\n            if (!qrl.symbolRef) {\n                qrl.symbolRef = await qrlImport(ctx.element, qrl);\n            }\n            context.qrl = qrl;\n            emitEvent(ctx.element, 'qSymbol', { name: qrl.symbol }, true);\n            return useInvoke(context, qrl.symbolRef);\n        }));\n    };\n}\nexport function qPropWriteQRL(rctx, ctx, prop, value) {\n    if (!value) {\n        return;\n    }\n    if (typeof value == 'string') {\n        value = parseQRL(value, ctx.element);\n    }\n    const existingQRLs = getExistingQRLs(ctx, prop);\n    if (Array.isArray(value)) {\n        value.forEach((value) => qPropWriteQRL(rctx, ctx, prop, value));\n    }\n    else if (isQrl(value)) {\n        const cp = value.copy();\n        cp.setContainer(ctx.element);\n        const capture = cp.capture;\n        if (capture == null) {\n            // we need to serialize the lexical scope references\n            const captureRef = cp.captureRef;\n            cp.capture =\n                captureRef && captureRef.length ? captureRef.map((ref) => qDeflate(ref, ctx)) : EMPTY_ARRAY;\n        }\n        // Important we modify the array as it is cached.\n        for (let i = 0; i < existingQRLs.length; i++) {\n            const qrl = existingQRLs[i];\n            if (!isPromise(qrl) && qrl.canonicalChunk === cp.canonicalChunk && qrl.symbol === cp.symbol) {\n                existingQRLs.splice(i, 1);\n                i--;\n            }\n        }\n        existingQRLs.push(cp);\n    }\n    else if (isPromise(value)) {\n        const writePromise = value.then((qrl) => {\n            existingQRLs.splice(existingQRLs.indexOf(writePromise), 1);\n            qPropWriteQRL(rctx, ctx, prop, qrl);\n            return qrl;\n        });\n        existingQRLs.push(writePromise);\n    }\n    else {\n        // TODO(misko): Test/better text\n        throw qError(QError.TODO, `Not QRLInternal: prop: ${prop}; value: ` + value);\n    }\n    const kebabProp = fromCamelToKebabCase(prop);\n    const newValue = serializeQRLs(existingQRLs, ctx);\n    if (ctx.element.getAttribute(kebabProp) !== newValue) {\n        if (rctx) {\n            setAttribute(rctx, ctx.element, kebabProp, newValue);\n        }\n        else {\n            ctx.element.setAttribute(kebabProp, newValue);\n        }\n    }\n}\nexport function closureRefError(ref) {\n    return new Error(`QWIK-ERROR: A closure can only lexically capture 'QObject' and 'QProp' const references. Got: ` +\n        debugStringify(ref));\n}\nfunction getExistingQRLs(ctx, prop) {\n    const key = 'event:' + prop;\n    let parts = ctx.cache.get(key);\n    if (!parts) {\n        const attrName = fromCamelToKebabCase(prop);\n        parts = [];\n        (ctx.element.getAttribute(attrName) || '').split('\\n').forEach((qrl) => {\n            if (qrl) {\n                parts.push(parseQRL(qrl, ctx.element));\n            }\n        });\n        ctx.cache.set(key, parts);\n    }\n    return parts;\n}\nfunction serializeQRLs(existingQRLs, ctx) {\n    const platform = getPlatform(getDocument(ctx.element));\n    const element = ctx.element;\n    const opts = {\n        platform,\n        element,\n    };\n    return existingQRLs\n        .map((qrl) => (isPromise(qrl) ? '' : stringifyQRL(qrl, opts)))\n        .filter((v) => !!v)\n        .join('\\n');\n}\n//# sourceMappingURL=data:application/json;base64,", "import { QError, qError } from '../error/error';\nimport { getProxyMap, readWriteProxy } from '../object/q-object';\nimport { resume } from '../object/store';\nimport { getDocument } from '../util/dom';\nimport { newQObjectMap } from './props-obj-map';\nimport { qPropWriteQRL, qPropReadQRL } from './props-on';\nError.stackTraceLimit = 9999;\nconst Q_IS_RESUMED = '__isResumed__';\nconst Q_CTX = '__ctx__';\nexport function resumeIfNeeded(containerEl) {\n    const isHydrated = containerEl[Q_IS_RESUMED];\n    if (!isHydrated) {\n        containerEl[Q_IS_RESUMED] = true;\n        resume(containerEl);\n    }\n}\nexport function getContext(element) {\n    let ctx = element[Q_CTX];\n    if (!ctx) {\n        const cache = new Map();\n        element[Q_CTX] = ctx = {\n            element,\n            cache,\n            refMap: newQObjectMap(element),\n            dirty: false,\n            props: undefined,\n            renderQrl: undefined,\n            component: undefined,\n        };\n    }\n    return ctx;\n}\nconst PREFIXES = ['onWindow', 'onWindow', 'on'];\nexport function normalizeOnProp(prop) {\n    let scope = 'on';\n    for (const prefix of PREFIXES) {\n        if (prop.startsWith(prefix)) {\n            scope = prefix;\n            prop = prop.slice(prefix.length);\n        }\n    }\n    if (prop.startsWith('-')) {\n        prop = prop.slice(1);\n    }\n    else {\n        prop = prop.toLowerCase();\n    }\n    return `${scope}:${prop}`;\n}\nexport function setEvent(rctx, ctx, prop, value) {\n    qPropWriteQRL(rctx, ctx, normalizeOnProp(prop), value);\n}\nexport function getEvent(ctx, prop) {\n    return qPropReadQRL(ctx, normalizeOnProp(prop));\n}\nexport function getProps(ctx) {\n    if (!ctx.props) {\n        ctx.props = readWriteProxy({}, getProxyMap(getDocument(ctx.element)));\n        ctx.refMap.add(ctx.props);\n    }\n    return ctx.props;\n}\n/**\n * Turn an `Array` or object literal into a `class` or `style`\n *\n * @param obj `string`, `Array` or object literal\n * @param isClass `true` if expecting `class` output\n * @returns `string`\n */\nexport function stringifyClassOrStyle(obj, isClass) {\n    if (obj == null)\n        return '';\n    if (typeof obj == 'object') {\n        let text = '';\n        let sep = '';\n        if (Array.isArray(obj)) {\n            if (!isClass) {\n                throw qError(QError.Render_unsupportedFormat_obj_attr, obj, 'style');\n            }\n            for (let i = 0; i < obj.length; i++) {\n                text += sep + obj[i];\n                sep = ' ';\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    text += isClass ? (value ? sep + key : '') : sep + key + ':' + value;\n                    sep = isClass ? ' ' : ';';\n                }\n            }\n        }\n        return text;\n    }\n    return String(obj);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcHMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3Byb3BzL3Byb3BzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDaEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNqRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFekMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMxQyxPQUFPLEVBQUUsYUFBYSxFQUFjLE1BQU0saUJBQWlCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFHekQsS0FBSyxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7QUFFN0IsTUFBTSxZQUFZLEdBQUcsZUFBZSxDQUFDO0FBQ3JDLE1BQU0sS0FBSyxHQUFHLFNBQVMsQ0FBQztBQUV4QixNQUFNLFVBQVUsY0FBYyxDQUFDLFdBQW9CO0lBQ2pELE1BQU0sVUFBVSxHQUFJLFdBQW1CLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDdEQsSUFBSSxDQUFDLFVBQVUsRUFBRTtRQUNkLFdBQW1CLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQzFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUNyQjtBQUNILENBQUM7QUF3QkQsTUFBTSxVQUFVLFVBQVUsQ0FBQyxPQUFnQjtJQUN6QyxJQUFJLEdBQUcsR0FBYyxPQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNSLE1BQU0sS0FBSyxHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7UUFDdkIsT0FBZSxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUcsR0FBRztZQUM5QixPQUFPO1lBQ1AsS0FBSztZQUNMLE1BQU0s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R0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFO29CQUNsRCxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7b0JBQ3ZCLElBQUksSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsS0FBSyxDQUFDO29CQUNyRSxHQUFHLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztpQkFDM0I7YUFDRjtTQUNGO1FBQ0QsT0FBTyxJQUFJLENBQUM7S0FDYjtJQUNELE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3JCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEpTWE5vZGUgfSBmcm9tICcuLi9yZW5kZXIvanN4L3R5cGVzL2pzeC1ub2RlJztcbmltcG9ydCB7IFFFcnJvciwgcUVycm9yIH0gZnJvbSAnLi4vZXJyb3IvZXJyb3InO1xuaW1wb3J0IHsgZ2V0UHJveHlNYXAsIHJlYWRXcml0ZVByb3h5IH0gZnJvbSAnLi4vb2JqZWN0L3Etb2JqZWN0JztcbmltcG9ydCB7IHJlc3VtZSB9IGZyb20gJy4uL29iamVjdC9zdG9yZSc7XG5pbXBvcnQgdHlwZSB7IFJlbmRlckNvbnRleHQgfSBmcm9tICcuLi9yZW5kZXIvY3Vyc29yJztcbmltcG9ydCB7IGdldERvY3VtZW50IH0gZnJvbSAnLi4vdXRpbC9kb20nO1xuaW1wb3J0IHsgbmV3UU9iamVjdE1hcCwgUU9iamVjdE1hcCB9IGZyb20gJy4vcHJvcHMtb2JqLW1hcCc7XG5pbXBvcnQgeyBxUHJvcFdyaXRlUVJMLCBxUHJvcFJlYWRRUkwgfSBmcm9tICcuL3Byb3BzLW9uJztcbmltcG9ydCB0eXBlIHsgUVJMSW50ZXJuYWwgfSBmcm9tICcuLi9pbXBvcnQvcXJsLWNsYXNzJztcblxuRXJyb3Iuc3RhY2tUcmFjZUxpbWl0ID0gOTk5OTtcblxuY29uc3QgUV9JU19SRVNVTUVEID0gJ19faXNSZXN1bWVkX18nO1xuY29uc3QgUV9DVFggPSAnX19jdHhfXyc7XG5cbmV4cG9ydCBmdW5jdGlvbiByZXN1bWVJZk5lZWRlZChjb250YWluZXJFbDogRWxlbWVudCk6IHZvaWQge1xuICBjb25zdCBpc0h5ZHJhdGVkID0gKGNvbnRhaW5lckVsIGFzIGFueSlbUV9JU19SRVNVTUVEXTtcbiAgaWYgKCFpc0h5ZHJhdGVkKSB7XG4gICAgKGNvbnRhaW5lckVsIGFzIGFueSlbUV9JU19SRVNVTUVEXSA9IHRydWU7XG4gICAgcmVzdW1lKGNvbnRhaW5lckVsKTtcbiAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFFDb250ZXh0RXZlbnRzIHtcbiAgW2V2ZW50TmFtZTogc3RyaW5nXTogUVJMSW50ZXJuYWwgfCB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29tcG9uZW50Q3R4IHtcbiAgaG9zdEVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICBzdHlsZUlkOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIHN0eWxlQ2xhc3M6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgc3R5bGVIb3N0Q2xhc3M6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgc2xvdHM6IEpTWE5vZGVbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBRQ29udGV4dCB7XG4gIGNhY2hlOiBNYXA8c3RyaW5nLCBhbnk+O1xuICByZWZNYXA6IFFPYmplY3RNYXA7XG4gIGVsZW1lbnQ6IEVsZW1lbnQ7XG4gIGRpcnR5OiBib29sZWFuO1xuICBwcm9wczogUmVjb3JkPHN0cmluZywgYW55PiB8IHVuZGVmaW5lZDtcbiAgcmVuZGVyUXJsOiBRUkxJbnRlcm5hbCB8IHVuZGVmaW5lZDtcbiAgY29tcG9uZW50OiBDb21wb25lbnRDdHggfCB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb250ZXh0KGVsZW1lbnQ6IEVsZW1lbnQpOiBRQ29udGV4dCB7XG4gIGxldCBjdHg6IFFDb250ZXh0ID0gKGVsZW1lbnQgYXMgYW55KVtRX0NUWF07XG4gIGlmICghY3R4KSB7XG4gICAgY29uc3QgY2FjaGUgPSBuZXcgTWFwKCk7XG4gICAgKGVsZW1lbnQgYXMgYW55KVtRX0NUWF0gPSBjdHggPSB7XG4gICAgICBlbGVtZW50LFxuICAgICAgY2FjaGUsXG4gICAgICByZWZNYXA6IG5ld1FPYmplY3RNYXAoZWxlbWVudCksXG4gICAgICBkaXJ0eTogZmFsc2UsXG4gICAgICBwcm9wczogdW5kZWZpbmVkLFxuICAgICAgcmVuZGVyUXJsOiB1bmRlZmluZWQsXG4gICAgICBjb21wb25lbnQ6IHVuZGVmaW5lZCxcbiAgICB9O1xuICB9XG4gIHJldHVybiBjdHg7XG59XG5cbmNvbnN0IFBSRUZJWEVTID0gWydvbldpbmRvdycsICdvbldpbmRvdycsICdvbiddO1xuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZU9uUHJvcChwcm9wOiBzdHJpbmcpIHtcbiAgbGV0IHNjb3BlID0gJ29uJztcbiAgZm9yIChjb25zdCBwcmVmaXggb2YgUFJFRklYRVMpIHtcbiAgICBpZiAocHJvcC5zdGFydHNXaXRoKHByZWZpeCkpIHtcbiAgICAgIHNjb3BlID0gcHJlZml4O1xuICAgICAgcHJvcCA9IHByb3Auc2xpY2UocHJlZml4Lmxlbmd0aCk7XG4gICAgfVxuICB9XG4gIGlmIChwcm9wLnN0YXJ0c1dpdGgoJy0nKSkge1xuICAgIHByb3AgPSBwcm9wLnNsaWNlKDEpO1xuICB9IGVsc2Uge1xuICAgIHByb3AgPSBwcm9wLnRvTG93ZXJDYXNlKCk7XG4gIH1cbiAgcmV0dXJuIGAke3Njb3BlfToke3Byb3B9YDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldEV2ZW50KHJjdHg6IFJlbmRlckNvbnRleHQsIGN0eDogUUNvbnRleHQsIHByb3A6IHN0cmluZywgdmFsdWU6IGFueSkge1xuICBxUHJvcFdyaXRlUVJMKHJjdHgsIGN0eCwgbm9ybWFsaXplT25Qcm9wKHByb3ApLCB2YWx1ZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRFdmVudChjdHg6IFFDb250ZXh0LCBwcm9wOiBzdHJpbmcpOiBhbnkge1xuICByZXR1cm4gcVByb3BSZWFkUVJMKGN0eCwgbm9ybWFsaXplT25Qcm9wKHByb3ApKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFByb3BzKGN0eDogUUNvbnRleHQpIHtcbiAgaWYgKCFjdHgucHJvcHMpIHtcbiAgICBjdHgucHJvcHMgPSByZWFkV3JpdGVQcm94eSh7fSwgZ2V0UHJveHlNYXAoZ2V0RG9jdW1lbnQoY3R4LmVsZW1lbnQpKSk7XG4gICAgY3R4LnJlZk1hcC5hZGQoY3R4LnByb3BzKTtcbiAgfVxuICByZXR1cm4gY3R4LnByb3BzITtcbn1cblxuLyoqXG4gKiBUdXJuIGFuIGBBcnJheWAgb3Igb2JqZWN0IGxpdGVyYWwgaW50byBhIGBjbGFzc2Agb3IgYHN0eWxlYFxuICpcbiAqIEBwYXJhbSBvYmogYHN0cmluZ2AsIGBBcnJheWAgb3Igb2JqZWN0IGxpdGVyYWxcbiAqIEBwYXJhbSBpc0NsYXNzIGB0cnVlYCBpZiBleHBlY3RpbmcgYGNsYXNzYCBvdXRwdXRcbiAqIEByZXR1cm5zIGBzdHJpbmdgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdpZnlDbGFzc09yU3R5bGUob2JqOiBhbnksIGlzQ2xhc3M6IGJvb2xlYW4pOiBzdHJpbmcge1xuICBpZiAob2JqID09IG51bGwpIHJldHVybiAnJztcbiAgaWYgKHR5cGVvZiBvYmogPT0gJ29iamVjdCcpIHtcbiAgICBsZXQgdGV4dCA9ICcnO1xuICAgIGxldCBzZXAgPSAnJztcbiAgICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgICBpZiAoIWlzQ2xhc3MpIHtcbiAgICAgICAgdGhyb3cgcUVycm9yKFFFcnJvci5SZW5kZXJfdW5zdXBwb3J0ZWRGb3JtYXRfb2JqX2F0dHIsIG9iaiwgJ3N0eWxlJyk7XG4gICAgICB9XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG9iai5sZW5ndGg7IGkrKykge1xuICAgICAgICB0ZXh0ICs9IHNlcCArIG9ialtpXTtcbiAgICAgICAgc2VwID0gJyAnO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgICAgICBjb25zdCB2YWx1ZSA9IG9ialtrZXldO1xuICAgICAgICAgIHRleHQgKz0gaXNDbGFzcyA/ICh2YWx1ZSA/IHNlcCArIGtleSA6ICcnKSA6IHNlcCArIGtleSArICc6JyArIHZhbHVlO1xuICAgICAgICAgIHNlcCA9IGlzQ2xhc3MgPyAnICcgOiAnOyc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRleHQ7XG4gIH1cbiAgcmV0dXJuIFN0cmluZyhvYmopO1xufVxuIl19", "/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\n/**\n * Place at the root of the component View to allow binding of attributes on the Host element.\n *\n * ```\n * <Host someAttr={someExpr} someAttrStatic=\"value\">\n *   View content implementation.\n * </Host>\n * ```\n *\n * Qwik requires that components have [docs/HOST_ELEMENTS.ts] so that it is possible to have\n * asynchronous loading point. Host element is not owned by the component. At times it is\n * desirable for the component to render additional attributes on the host element. `<Host>`\n * servers that purpose.\n * @public\n */\nexport const Host = { __brand__: 'host' };\n/**\n * @public\n */\nexport const SkipRerender = { __brand__: 'skip' };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9zdC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3JlbmRlci9qc3gvaG9zdC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBS0g7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQW1ELEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBUyxDQUFDO0FBRWpHOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUEwQixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHR5cGUgeyBIVE1MQXR0cmlidXRlcyB9IGZyb20gJy4vdHlwZXMvanN4LWdlbmVyYXRlZCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi90eXBlcy9qc3gtbm9kZSc7XG5cbi8qKlxuICogUGxhY2UgYXQgdGhlIHJvb3Qgb2YgdGhlIGNvbXBvbmVudCBWaWV3IHRvIGFsbG93IGJpbmRpbmcgb2YgYXR0cmlidXRlcyBvbiB0aGUgSG9zdCBlbGVtZW50LlxuICpcbiAqIGBgYFxuICogPEhvc3Qgc29tZUF0dHI9e3NvbWVFeHByfSBzb21lQXR0clN0YXRpYz1cInZhbHVlXCI+XG4gKiAgIFZpZXcgY29udGVudCBpbXBsZW1lbnRhdGlvbi5cbiAqIDwvSG9zdD5cbiAqIGBgYFxuICpcbiAqIFF3aWsgcmVxdWlyZXMgdGhhdCBjb21wb25lbnRzIGhhdmUgW2RvY3MvSE9TVF9FTEVNRU5UUy50c10gc28gdGhhdCBpdCBpcyBwb3NzaWJsZSB0byBoYXZlXG4gKiBhc3luY2hyb25vdXMgbG9hZGluZyBwb2ludC4gSG9zdCBlbGVtZW50IGlzIG5vdCBvd25lZCBieSB0aGUgY29tcG9uZW50LiBBdCB0aW1lcyBpdCBpc1xuICogZGVzaXJhYmxlIGZvciB0aGUgY29tcG9uZW50IHRvIHJlbmRlciBhZGRpdGlvbmFsIGF0dHJpYnV0ZXMgb24gdGhlIGhvc3QgZWxlbWVudC4gYDxIb3N0PmBcbiAqIHNlcnZlcnMgdGhhdCBwdXJwb3NlLlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgSG9zdDogRnVuY3Rpb25Db21wb25lbnQ8SFRNTEF0dHJpYnV0ZXM8SFRNTEVsZW1lbnQ+PiA9IHsgX19icmFuZF9fOiAnaG9zdCcgfSBhcyBhbnk7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgU2tpcFJlcmVuZGVyOiBGdW5jdGlvbkNvbXBvbmVudDx7fT4gPSB7IF9fYnJhbmRfXzogJ3NraXAnIH0gYXMgYW55O1xuIl19", "import { runtimeQrl } from './qrl';\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#$\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#$ instead)\n/**\n * Qwik Optimizer marker function.\n *\n * Use `$(...)` to tell Qwik Optimizer to extract the expression in `$(...)` into a lazy-loadable\n * resource referenced by `QRL`.\n *\n * See: `implicit$FirstArg` for additional `____$(...)` rules.\n *\n * In this example `$(...)` is used to capture the callback function of `onmousemove` into\n * lazy-loadable reference. This allows the code to refer to the function without actually\n * loading the function. In this example, the callback function does not get loaded until\n * `mousemove` event fires.\n *\n * ```typescript\n * onDocument(\n *   'mousemove',\n *   $(() => console.log('mousemove'))\n * );\n * ```\n *\n * In this code the Qwik Optimizer detects `$(...)` and transforms the code into:\n *\n * ```typescript\n * // FILE: <current file>\n * onDocument('mousemove', qrl('./chunk-abc.js', 'onMousemove'));\n *\n * // FILE: chunk-abc.js\n * export const onMousemove = () => console.log('mousemove');\n * ```\n *\n * ## Special Rules\n *\n * The Qwik Optimizer places special rules on functions that can be lazy-loaded.\n *\n * 1. The expression of the `$(expression)` function must be importable by the system.\n * (expression shows up in `import` or has `export`)\n * 2. If inlined function then all lexically captured values must be:\n *    - importable (vars shows up in `import` or has `export`)\n *    - const (The capturing process differs from JS capturing in that writing to captured\n * variables does not update them, and therefore writes are forbidden. The best practice is that\n * all captured variables are constants.)\n *    - Must be runtime serializable.\n *\n * ```typescript\n * import { importedFn } from './example';\n *\n * export const greet = () => console.log('greet');\n * function topLevelFn() {}\n *\n * function myCode() {\n *   const store = useStore({});\n *   function localFn() {}\n *   // Valid Examples\n *   $(greet); // greet is importable\n *   $(importedFn); // importedFn is importable\n *   $(() => greet()); // greet is importable;\n *   $(() => importedFn()); // importedFn is importable\n *   $(() => console.log(store)); // store is serializable.\n *\n *   // Compile time errors\n *   $(topLevelFn); // ERROR: `topLevelFn` not importable\n *   $(() => topLevelFn()); // ERROR: `topLevelFn` not importable\n *\n *   // Runtime errors\n *   $(localFn); // ERROR: `localFn` fails serialization\n *   $(() => localFn()); // ERROR: `localFn` fails serialization\n * }\n *\n * ```\n *\n * @param expression - Expression which should be lazy loaded\n * @public\n */\n// </docs>\nexport function $(expression) {\n    return runtimeQrl(expression);\n}\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#implicit$FirstArg\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#implicit$FirstArg instead)\n/**\n * Create a `____$(...)` convenience method from `___(...)`.\n *\n * It is very common for functions to take a lazy-loadable resource as a first argument. For this\n * reason, the Qwik Optimizer automatically extracts the first argument from any function which\n * ends in `$`.\n *\n * This means that `foo$(arg0)` and `foo($(arg0))` are equivalent with respect to Qwik Optimizer.\n * The former is just a shorthand for the latter.\n *\n * For example these function call are equivalent:\n *\n * - `component$(() => {...})` is same as `onRender($(() => {...}))`\n *\n * ```typescript\n * export function myApi(callback: QRL<() => void>): void {\n *   // ...\n * }\n *\n * export const myApi$ = implicit$FirstArg(myApi);\n * // type of myApi$: (callback: () => void): void\n *\n * // can be used as:\n * myApi$(() => console.log('callback'));\n *\n * // will be transpiled to:\n * // FILE: <current file>\n * myApi(qrl('./chunk-abc.js', 'callback'));\n *\n * // FILE: chunk-abc.js\n * export const callback = () => console.log('callback');\n * ```\n *\n * @param fn - function that should have its first argument automatically `$`.\n * @public\n */\n// </docs>\nexport function implicit$FirstArg(fn) {\n    return function (first, ...rest) {\n        return fn.call(null, $(first), ...rest);\n    };\n}\n//# sourceMappingURL=data:application/json;base64,", "import { Host } from '../render/jsx/host.public';\nimport { getContext } from '../props/props';\nimport { smartUpdateChildren, updateProperties } from './cursor';\nexport function visitJsxNode(ctx, elm, jsxNode, isSvg) {\n    if (jsxNode === undefined) {\n        return smartUpdateChildren(ctx, elm, [], 'root', isSvg);\n    }\n    if (Array.isArray(jsxNode)) {\n        return smartUpdateChildren(ctx, elm, jsxNode.flat(), 'root', isSvg);\n    }\n    else if (jsxNode.type === Host) {\n        updateProperties(ctx, getContext(elm), jsxNode.props, isSvg);\n        return smartUpdateChildren(ctx, elm, jsxNode.children || [], 'root', isSvg);\n    }\n    else {\n        return smartUpdateChildren(ctx, elm, [jsxNode], 'root', isSvg);\n    }\n}\nexport function whileResolvingRender(...args) {\n    throw new Error('Function not implemented.' + args);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9yZW5kZXIvcmVuZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFNUMsT0FBTyxFQUFpQixtQkFBbUIsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUloRixNQUFNLFVBQVUsWUFBWSxDQUMxQixHQUFrQixFQUNsQixHQUFZLEVBQ1osT0FBd0MsRUFDeEMsS0FBYztJQUVkLElBQUksT0FBTyxLQUFLLFNBQVMsRUFBRTtRQUN6QixPQUFPLG1CQUFtQixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztLQUN6RDtJQUNELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUMxQixPQUFPLG1CQUFtQixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztLQUNyRTtTQUFNLElBQUksT0FBTyxDQUFDLElBQUksS0FBSyxJQUFJLEVBQUU7UUFDaEMsZ0JBQWdCLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxPQUFPLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzdELE9BQU8sbUJBQW1CLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsUUFBUSxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDN0U7U0FBTTtRQUNMLE9BQU8sbUJBQW1CLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztLQUNoRTtBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsb0JBQW9CLENBQ2xDLEdBQUcsSUFBdUQ7SUFFMUQsTUFBTSxJQUFJLEtBQUssQ0FBQywyQkFBMkIsR0FBRyxJQUFJLENBQUMsQ0FBQztBQUN0RCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSG9zdCB9IGZyb20gJy4uL3JlbmRlci9qc3gvaG9zdC5wdWJsaWMnO1xuaW1wb3J0IHsgZ2V0Q29udGV4dCB9IGZyb20gJy4uL3Byb3BzL3Byb3BzJztcbmltcG9ydCB0eXBlIHsgVmFsdWVPclByb21pc2UgfSBmcm9tICcuLi91dGlsL3R5cGVzJztcbmltcG9ydCB7IFJlbmRlckNvbnRleHQsIHNtYXJ0VXBkYXRlQ2hpbGRyZW4sIHVwZGF0ZVByb3BlcnRpZXMgfSBmcm9tICcuL2N1cnNvcic7XG5pbXBvcnQgdHlwZSB7IEpTWE5vZGUgfSBmcm9tICcuL2pzeC90eXBlcy9qc3gtbm9kZSc7XG5leHBvcnQgdHlwZSBDb21wb25lbnRSZW5kZXJRdWV1ZSA9IFByb21pc2U8SFRNTEVsZW1lbnRbXT5bXTtcblxuZXhwb3J0IGZ1bmN0aW9uIHZpc2l0SnN4Tm9kZShcbiAgY3R4OiBSZW5kZXJDb250ZXh0LFxuICBlbG06IEVsZW1lbnQsXG4gIGpzeE5vZGU6IEpTWE5vZGUgfCBKU1hOb2RlW10gfCB1bmRlZmluZWQsXG4gIGlzU3ZnOiBib29sZWFuXG4pOiBWYWx1ZU9yUHJvbWlzZTx2b2lkPiB7XG4gIGlmIChqc3hOb2RlID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gc21hcnRVcGRhdGVDaGlsZHJlbihjdHgsIGVsbSwgW10sICdyb290JywgaXNTdmcpO1xuICB9XG4gIGlmIChBcnJheS5pc0FycmF5KGpzeE5vZGUpKSB7XG4gICAgcmV0dXJuIHNtYXJ0VXBkYXRlQ2hpbGRyZW4oY3R4LCBlbG0sIGpzeE5vZGUuZmxhdCgpLCAncm9vdCcsIGlzU3ZnKTtcbiAgfSBlbHNlIGlmIChqc3hOb2RlLnR5cGUgPT09IEhvc3QpIHtcbiAgICB1cGRhdGVQcm9wZXJ0aWVzKGN0eCwgZ2V0Q29udGV4dChlbG0pLCBqc3hOb2RlLnByb3BzLCBpc1N2Zyk7XG4gICAgcmV0dXJuIHNtYXJ0VXBkYXRlQ2hpbGRyZW4oY3R4LCBlbG0sIGpzeE5vZGUuY2hpbGRyZW4gfHwgW10sICdyb290JywgaXNTdmcpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBzbWFydFVwZGF0ZUNoaWxkcmVuKGN0eCwgZWxtLCBbanN4Tm9kZV0sICdyb290JywgaXNTdmcpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3aGlsZVJlc29sdmluZ1JlbmRlcjxBUkdTIGV4dGVuZHMgYW55W10sIFJFVD4oXG4gIC4uLmFyZ3M6IFsuLi5BUkdTLCAoLi4uYXJnczogUmVzb2x2ZWRWYWx1ZXM8QVJHUz4pID0+IFJFVF1cbik6IFJFVCB7XG4gIHRocm93IG5ldyBFcnJvcignRnVuY3Rpb24gbm90IGltcGxlbWVudGVkLicgKyBhcmdzKTtcbn1cblxuZXhwb3J0IHR5cGUgUmVzb2x2ZWRWYWx1ZXM8QVJHUyBleHRlbmRzIGFueVtdPiA9IHtcbiAgW0sgaW4ga2V5b2YgQVJHU106IEFSR1NbS10gZXh0ZW5kcyBWYWx1ZU9yUHJvbWlzZTxpbmZlciBVPiA/IFUgOiBBUkdTW0tdO1xufTtcbiJdfQ==", "export function hashCode(text, hash = 0) {\n    if (text.length === 0)\n        return hash;\n    for (let i = 0; i < text.length; i++) {\n        const chr = text.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return Number(Math.abs(hash)).toString(36);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzaF9jb2RlLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2hhc2hfY29kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsUUFBUSxDQUFDLElBQVksRUFBRSxPQUFlLENBQUM7SUFDckQsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUM7UUFBRSxPQUFPLElBQUksQ0FBQztJQUNuQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNwQyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQy9CLElBQUksR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDO1FBQ2hDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQywyQkFBMkI7S0FDdkM7SUFDRCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaGFzaENvZGUodGV4dDogc3RyaW5nLCBoYXNoOiBudW1iZXIgPSAwKSB7XG4gIGlmICh0ZXh0Lmxlbmd0aCA9PT0gMCkgcmV0dXJuIGhhc2g7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGV4dC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGNociA9IHRleHQuY2hhckNvZGVBdChpKTtcbiAgICBoYXNoID0gKGhhc2ggPDwgNSkgLSBoYXNoICsgY2hyO1xuICAgIGhhc2ggfD0gMDsgLy8gQ29udmVydCB0byAzMmJpdCBpbnRlZ2VyXG4gIH1cbiAgcmV0dXJuIE51bWJlcihNYXRoLmFicyhoYXNoKSkudG9TdHJpbmcoMzYpO1xufVxuIl19", "import { ComponentStylesPrefixContent, ComponentStylesPrefixHost } from '../util/markers';\nimport { hashCode } from '../util/hash_code';\nexport function styleKey(qStyles) {\n    return qStyles && String(hashCode(qStyles.symbol));\n}\nexport function styleHost(styleId) {\n    return styleId && ComponentStylesPrefixHost + styleId;\n}\nexport function styleContent(styleId) {\n    return styleId && ComponentStylesPrefixContent + styleId;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXJsLXN0eWxlcy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvY29tcG9uZW50L3FybC1zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLDRCQUE0QixFQUFFLHlCQUF5QixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDMUYsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBTzdDLE1BQU0sVUFBVSxRQUFRLENBQUMsT0FBbUM7SUFDMUQsT0FBTyxPQUFPLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBT0QsTUFBTSxVQUFVLFNBQVMsQ0FBQyxPQUEyQjtJQUNuRCxPQUFPLE9BQU8sSUFBSSx5QkFBeUIsR0FBRyxPQUFPLENBQUM7QUFDeEQsQ0FBQztBQU9ELE1BQU0sVUFBVSxZQUFZLENBQUMsT0FBMkI7SUFDdEQsT0FBTyxPQUFPLElBQUksNEJBQTRCLEdBQUcsT0FBTyxDQUFDO0FBQzNELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFFSTEludGVybmFsIH0gZnJvbSAnLi4vaW1wb3J0L3FybC1jbGFzcyc7XG5pbXBvcnQgeyBDb21wb25lbnRTdHlsZXNQcmVmaXhDb250ZW50LCBDb21wb25lbnRTdHlsZXNQcmVmaXhIb3N0IH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcbmltcG9ydCB7IGhhc2hDb2RlIH0gZnJvbSAnLi4vdXRpbC9oYXNoX2NvZGUnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlS2V5KHFTdHlsZXM6IFFSTEludGVybmFsPHN0cmluZz4pOiBzdHJpbmc7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVLZXkocVN0eWxlczogUVJMSW50ZXJuYWw8c3RyaW5nPiB8IG51bGwpOiBzdHJpbmcgfCBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlS2V5KHFTdHlsZXM6IFFSTEludGVybmFsPHN0cmluZz4gfCBudWxsKTogc3RyaW5nIHwgbnVsbCB7XG4gIHJldHVybiBxU3R5bGVzICYmIFN0cmluZyhoYXNoQ29kZShxU3R5bGVzLnN5bWJvbCkpO1xufVxuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlSG9zdChzdHlsZUlkOiBzdHJpbmcpOiBzdHJpbmc7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVIb3N0KHN0eWxlSWQ6IHN0cmluZyB8IHVuZGVmaW5lZCk6IHN0cmluZyB8IHVuZGVmaW5lZDtcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUhvc3Qoc3R5bGVJZDogc3RyaW5nIHwgdW5kZWZpbmVkKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgcmV0dXJuIHN0eWxlSWQgJiYgQ29tcG9uZW50U3R5bGVzUHJlZml4SG9zdCArIHN0eWxlSWQ7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gc3R5bGVDb250ZW50KHN0eWxlSWQ6IHN0cmluZyk6IHN0cmluZztcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUNvbnRlbnQoc3R5bGVJZDogc3RyaW5nIHwgdW5kZWZpbmVkKTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlQ29udGVudChzdHlsZUlkOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICByZXR1cm4gc3R5bGVJZCAmJiBDb21wb25lbnRTdHlsZXNQcmVmaXhDb250ZW50ICsgc3R5bGVJZDtcbn1cbiJdfQ==", "import { qDev } from '../../util/qdev';\nimport { Host, SkipRerender } from './host.public';\nimport { EMPTY_ARRAY } from '../../util/flyweight';\nimport { logWarn } from '../../util/log';\n/**\n * @public\n */\nexport function jsx(type, props, key) {\n    return new JSXNodeImpl(type, props, key);\n}\nexport class JSXNodeImpl {\n    constructor(type, props, key = null) {\n        this.type = type;\n        this.props = props;\n        this.children = EMPTY_ARRAY;\n        this.text = undefined;\n        this.key = null;\n        if (key != null) {\n            this.key = String(key);\n        }\n        if (props) {\n            const children = processNode(props.children);\n            if (children !== undefined) {\n                if (Array.isArray(children)) {\n                    this.children = children;\n                }\n                else {\n                    this.children = [children];\n                }\n            }\n        }\n    }\n}\nexport function processNode(node) {\n    if (node == null || typeof node === 'boolean') {\n        return undefined;\n    }\n    if (isJSXNode(node)) {\n        if (node.type === Host || node.type === SkipRerender) {\n            return node;\n        }\n        else if (typeof node.type === 'function') {\n            return processNode(node.type(Object.assign(Object.assign({}, node.props), { children: node.children }), node.key));\n        }\n        else {\n            return node;\n        }\n    }\n    else if (Array.isArray(node)) {\n        return node.flatMap(processNode).filter((e) => e != null);\n    }\n    else if (typeof node === 'string' || typeof node === 'number' || typeof node === 'boolean') {\n        const newNode = new JSXNodeImpl('#text', null, null);\n        newNode.text = String(node);\n        return newNode;\n    }\n    else {\n        logWarn('Unvalid node, skipping');\n        return undefined;\n    }\n}\nexport const isJSXNode = (n) => {\n    if (qDev) {\n        if (n instanceof JSXNodeImpl) {\n            return true;\n        }\n        if (n && typeof n === 'object' && n.constructor.name === JSXNodeImpl.name) {\n            throw new Error(`Duplicate implementations of \"JSXNodeImpl\" found`);\n        }\n        return false;\n    }\n    else {\n        return n instanceof JSXNodeImpl;\n    }\n};\n/**\n * @public\n */\nexport const Fragment = (props) => props.children;\nexport { jsx as jsxs, jsx as jsxDEV };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianN4LXJ1bnRpbWUuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3JlbmRlci9qc3gvanN4LXJ1bnRpbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFekM7O0dBRUc7QUFDSCxNQUFNLFVBQVUsR0FBRyxDQUNqQixJQUFPLEVBQ1AsS0FBWSxFQUNaLEdBQXFCO0lBRXJCLE9BQU8sSUFBSSxXQUFXLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFHLENBQVEsQ0FBQztBQUNsRCxDQUFDO0FBRUQsTUFBTSxPQUFPLFdBQVc7SUFLdEIsWUFDUyxJQUFPLEVBQ1AsS0FBaUMsRUFDeEMsTUFBOEIsSUFBSTtRQUYzQixTQUFJLEdBQUosSUFBSSxDQUFHO1FBQ1AsVUFBSyxHQUFMLEtBQUssQ0FBNEI7UUFOMUMsYUFBUSxHQUFjLFdBQVcsQ0FBQztRQUNsQyxTQUFJLEdBQXdCLFNBQVMsQ0FBQztRQUN0QyxRQUFHLEdBQWtCLElBQUksQ0FBQztRQU94QixJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUU7WUFDZixJQUFJLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN4QjtRQUNELElBQUksS0FBSyxFQUFFO1lBQ1QsTUFBTSxRQUFRLEdBQUcsV0FBVyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUM3QyxJQUFJLFFBQVEsS0FBSyxTQUFTLEVBQUU7Z0JBQzFCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRTtvQkFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7aUJBQzFCO3FCQUFNO29CQUNMLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztpQkFDNUI7YUFDRjtTQUNGO0lBQ0gsQ0FBQztDQUNGO0FBRUQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUFTO0lBQ25DLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxPQUFPLElBQUksS0FBSyxTQUFTLEVBQUU7UUFDN0MsT0FBTyxTQUFTLENBQUM7S0FDbEI7SUFDRCxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNuQixJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssWUFBWSxFQUFFO1lBQ3BELE9BQU8sSUFBSSxDQUFDO1NBQ2I7YUFBTSxJQUFJLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxVQUFVLEVBQUU7WUFDMUMsT0FBTyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksaUNBQU0sSUFBSSxDQUFDLEtBQUssS0FBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsS0FBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUNyRjthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUM7U0FDYjtLQUNGO1NBQU0sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQWMsQ0FBQztLQUN4RTtTQUFNLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxPQUFPLElBQUksS0FBSyxTQUFTLEVBQUU7UUFDNUYsTUFBTSxPQUFPLEdBQUcsSUFBSSxXQUFXLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNyRCxPQUFPLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QixPQUFPLE9BQU8sQ0FBQztLQUNoQjtTQUFNO1FBQ0wsT0FBTyxDQUFDLHdCQUF3QixDQUFDLENBQUM7UUFDbEMsT0FBTyxTQUFTLENBQUM7S0FDbEI7QUFDSCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBTSxFQUF5QixFQUFFO0lBQ3pELElBQUksSUFBSSxFQUFFO1FBQ1IsSUFBSSxDQUFDLFlBQVksV0FBVyxFQUFFO1lBQzVCLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxJQUFJLENBQUMsSUFBSSxPQUFPLENBQUMsS0FBSyxRQUFRLElBQUksQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLEtBQUssV0FBVyxDQUFDLElBQUksRUFBRTtZQUN6RSxNQUFNLElBQUksS0FBSyxDQUFDLGtEQUFrRCxDQUFDLENBQUM7U0FDckU7UUFDRCxPQUFPLEtBQUssQ0FBQztLQUNkO1NBQU07UUFDTCxPQUFPLENBQUMsWUFBWSxXQUFXLENBQUM7S0FDakM7QUFDSCxDQUFDLENBQUM7QUFFRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBMEMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxRQUFlLENBQUM7QUFJaEcsT0FBTyxFQUFFLEdBQUcsSUFBSSxJQUFJLEVBQUUsR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCwgSlNYTm9kZSB9IGZyb20gJy4vdHlwZXMvanN4LW5vZGUnO1xuaW1wb3J0IHR5cGUgeyBRd2lrSlNYIH0gZnJvbSAnLi90eXBlcy9qc3gtcXdpayc7XG5pbXBvcnQgeyBxRGV2IH0gZnJvbSAnLi4vLi4vdXRpbC9xZGV2JztcbmltcG9ydCB7IEhvc3QsIFNraXBSZXJlbmRlciB9IGZyb20gJy4vaG9zdC5wdWJsaWMnO1xuaW1wb3J0IHsgRU1QVFlfQVJSQVkgfSBmcm9tICcuLi8uLi91dGlsL2ZseXdlaWdodCc7XG5pbXBvcnQgeyBsb2dXYXJuIH0gZnJvbSAnLi4vLi4vdXRpbC9sb2cnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgc3RyaW5nIHwgRnVuY3Rpb25Db21wb25lbnQ8UFJPUFM+LCBQUk9QUz4oXG4gIHR5cGU6IFQsXG4gIHByb3BzOiBQUk9QUyxcbiAga2V5Pzogc3RyaW5nIHwgbnVtYmVyXG4pOiBKU1hOb2RlPFQ+IHtcbiAgcmV0dXJuIG5ldyBKU1hOb2RlSW1wbCh0eXBlLCBwcm9wcywga2V5KSBhcyBhbnk7XG59XG5cbmV4cG9ydCBjbGFzcyBKU1hOb2RlSW1wbDxUPiBpbXBsZW1lbnRzIEpTWE5vZGU8VD4ge1xuICBjaGlsZHJlbjogSlNYTm9kZVtdID0gRU1QVFlfQVJSQVk7XG4gIHRleHQ/OiBzdHJpbmcgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gIGtleTogc3RyaW5nIHwgbnVsbCA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHR5cGU6IFQsXG4gICAgcHVibGljIHByb3BzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+IHwgbnVsbCxcbiAgICBrZXk6IHN0cmluZyB8IG51bWJlciB8IG51bGwgPSBudWxsXG4gICkge1xuICAgIGlmIChrZXkgIT0gbnVsbCkge1xuICAgICAgdGhpcy5rZXkgPSBTdHJpbmcoa2V5KTtcbiAgICB9XG4gICAgaWYgKHByb3BzKSB7XG4gICAgICBjb25zdCBjaGlsZHJlbiA9IHByb2Nlc3NOb2RlKHByb3BzLmNoaWxkcmVuKTtcbiAgICAgIGlmIChjaGlsZHJlbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSkge1xuICAgICAgICAgIHRoaXMuY2hpbGRyZW4gPSBjaGlsZHJlbjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmNoaWxkcmVuID0gW2NoaWxkcmVuXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcHJvY2Vzc05vZGUobm9kZTogYW55KTogSlNYTm9kZVtdIHwgSlNYTm9kZSB8IHVuZGVmaW5lZCB7XG4gIGlmIChub2RlID09IG51bGwgfHwgdHlwZW9mIG5vZGUgPT09ICdib29sZWFuJykge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbiAgaWYgKGlzSlNYTm9kZShub2RlKSkge1xuICAgIGlmIChub2RlLnR5cGUgPT09IEhvc3QgfHwgbm9kZS50eXBlID09PSBTa2lwUmVyZW5kZXIpIHtcbiAgICAgIHJldHVybiBub2RlO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIG5vZGUudHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIHByb2Nlc3NOb2RlKG5vZGUudHlwZSh7IC4uLm5vZGUucHJvcHMsIGNoaWxkcmVuOiBub2RlLmNoaWxkcmVuIH0sIG5vZGUua2V5KSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBub2RlO1xuICAgIH1cbiAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KG5vZGUpKSB7XG4gICAgcmV0dXJuIG5vZGUuZmxhdE1hcChwcm9jZXNzTm9kZSkuZmlsdGVyKChlKSA9PiBlICE9IG51bGwpIGFzIEpTWE5vZGVbXTtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygbm9kZSA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIG5vZGUgPT09ICdudW1iZXInIHx8IHR5cGVvZiBub2RlID09PSAnYm9vbGVhbicpIHtcbiAgICBjb25zdCBuZXdOb2RlID0gbmV3IEpTWE5vZGVJbXBsKCcjdGV4dCcsIG51bGwsIG51bGwpO1xuICAgIG5ld05vZGUudGV4dCA9IFN0cmluZyhub2RlKTtcbiAgICByZXR1cm4gbmV3Tm9kZTtcbiAgfSBlbHNlIHtcbiAgICBsb2dXYXJuKCdVbnZhbGlkIG5vZGUsIHNraXBwaW5nJyk7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgaXNKU1hOb2RlID0gKG46IGFueSk6IG4gaXMgSlNYTm9kZTx1bmtub3duPiA9PiB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKG4gaW5zdGFuY2VvZiBKU1hOb2RlSW1wbCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChuICYmIHR5cGVvZiBuID09PSAnb2JqZWN0JyAmJiBuLmNvbnN0cnVjdG9yLm5hbWUgPT09IEpTWE5vZGVJbXBsLm5hbWUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRHVwbGljYXRlIGltcGxlbWVudGF0aW9ucyBvZiBcIkpTWE5vZGVJbXBsXCIgZm91bmRgKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBuIGluc3RhbmNlb2YgSlNYTm9kZUltcGw7XG4gIH1cbn07XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgRnJhZ21lbnQ6IEZ1bmN0aW9uQ29tcG9uZW50PHsgY2hpbGRyZW4/OiBhbnkgfT4gPSAocHJvcHMpID0+IHByb3BzLmNoaWxkcmVuIGFzIGFueTtcblxuZXhwb3J0IHR5cGUgeyBRd2lrSlNYIGFzIEpTWCB9O1xuXG5leHBvcnQgeyBqc3ggYXMganN4cywganN4IGFzIGpzeERFViB9O1xuIl19", "import { assertDefined } from '../assert/assert';\nimport { visitJsxNode } from '../render/render';\nimport { ComponentScopedStyles, QHostAttr } from '../util/markers';\nimport { then } from '../util/promises';\nimport { styleContent, styleHost } from './qrl-styles';\nimport { newInvokeContext, useInvoke } from '../use/use-core';\nimport { processNode } from '../render/jsx/jsx-runtime';\nexport const firstRenderComponent = (rctx, ctx) => {\n    ctx.element.setAttribute(QHostAttr, '');\n    const result = renderComponent(rctx, ctx);\n    // if (ctx.component?.styleHostClass) {\n    //   classlistAdd(rctx, ctx.element, ctx.component.styleHostClass);\n    // }\n    return result;\n};\nexport const renderComponent = (rctx, ctx) => {\n    const hostElement = ctx.element;\n    const onRenderQRL = ctx.renderQrl;\n    assertDefined(onRenderQRL);\n    const onRenderFn = onRenderQRL.invokeFn();\n    // Component is not dirty any more\n    ctx.dirty = false;\n    rctx.globalState.hostsStaging.delete(hostElement);\n    // Invoke render hook\n    const invocatinContext = newInvokeContext(rctx.doc, hostElement, hostElement, 'qRender');\n    invocatinContext.qrl = onRenderQRL;\n    const promise = useInvoke(invocatinContext, onRenderFn);\n    return then(promise, (jsxNode) => {\n        var _a;\n        rctx.hostElements.add(hostElement);\n        let componentCtx = ctx.component;\n        if (!componentCtx) {\n            componentCtx = ctx.component = {\n                hostElement,\n                slots: [],\n                styleHostClass: undefined,\n                styleClass: undefined,\n                styleId: undefined,\n            };\n            const scopedStyleId = (_a = hostElement.getAttribute(ComponentScopedStyles)) !== null && _a !== void 0 ? _a : undefined;\n            if (scopedStyleId) {\n                componentCtx.styleId = scopedStyleId;\n                componentCtx.styleHostClass = styleHost(scopedStyleId);\n                componentCtx.styleClass = styleContent(scopedStyleId);\n                hostElement.classList.add(componentCtx.styleHostClass);\n            }\n        }\n        componentCtx.slots = [];\n        const newCtx = Object.assign(Object.assign({}, rctx), { component: componentCtx });\n        return visitJsxNode(newCtx, hostElement, processNode(jsxNode), false);\n    });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LWN0eC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvY29tcG9uZW50L2NvbXBvbmVudC1jdHgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWpELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsU0FBUyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDbkUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3hDLE9BQU8sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUU5RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFReEQsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxJQUFtQixFQUFFLEdBQWEsRUFBRSxFQUFFO0lBQ3pFLEdBQUcsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN4QyxNQUFNLE1BQU0sR0FBRyxlQUFlLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzFDLHVDQUF1QztJQUN2QyxtRUFBbUU7SUFDbkUsSUFBSTtJQUNKLE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxDQUFDLElBQW1CLEVBQUUsR0FBYSxFQUFFLEVBQUU7SUFDcEUsTUFBTSxXQUFXLEdBQUcsR0FBRyxDQUFDLE9BQXNCLENBQUM7SUFDL0MsTUFBTSxXQUFXLEdBQUcsR0FBRyxDQUFDLFNBQVUsQ0FBQztJQUNuQyxhQUFhLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDM0IsTUFBTSxVQUFVLEdBQUcsV0FBVyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBRTFDLGtDQUFrQztJQUNsQyxHQUFHLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNsQixJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7SUFFbEQscUJBQXFCO0lBQ3JCLE1BQU0sZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ3pGLGdCQUFnQixDQUFDLEdBQUcsR0FBRyxXQUFXLENBQUM7SUFFbkMsTUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLGdCQUFnQixFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBRXhELE9BQU8sSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFOztRQUMvQixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNuQyxJQUFJLFlBQVksR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDakIsWUFBWSxHQUFHLEdBQUcsQ0FBQyxTQUFTLEdBQUc7Z0JBQzdCLFdBQVc7Z0JBQ1gsS0FBSyxFQUFFLEVBQUU7Z0JBQ1QsY0FBYyxFQUFFLFNBQVM7Z0JBQ3pCLFVBQVUsRUFBRSxTQUFTO2dCQUNyQixPQUFPLEVBQUUsU0FBUzthQUNuQixDQUFDO1lBQ0YsTUFBTSxhQUFhLEdBQUcsTUFBQSxXQUFXLENBQUMsWUFBWSxDQUFDLHFCQUFxQixDQUFDLG1DQUFJLFNBQVMsQ0FBQztZQUNuRixJQUFJLGFBQWEsRUFBRTtnQkFDakIsWUFBWSxDQUFDLE9BQU8sR0FBRyxhQUFhLENBQUM7Z0JBQ3JDLFlBQVksQ0FBQyxjQUFjLEdBQUcsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO2dCQUN2RCxZQUFZLENBQUMsVUFBVSxHQUFHLFlBQVksQ0FBQyxhQUFhLENBQUMsQ0FBQztnQkFDdEQsV0FBVyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxDQUFDO2FBQ3hEO1NBQ0Y7UUFDRCxZQUFZLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUV4QixNQUFNLE1BQU0sbUNBQ1AsSUFBSSxLQUNQLFNBQVMsRUFBRSxZQUFZLEdBQ3hCLENBQUM7UUFDRixPQUFPLFlBQVksQ0FBQyxNQUFNLEVBQUUsV0FBVyxFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN4RSxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydERlZmluZWQgfSBmcm9tICcuLi9hc3NlcnQvYXNzZXJ0JztcbmltcG9ydCB0eXBlIHsgUmVuZGVyQ29udGV4dCB9IGZyb20gJy4uL3JlbmRlci9jdXJzb3InO1xuaW1wb3J0IHsgdmlzaXRKc3hOb2RlIH0gZnJvbSAnLi4vcmVuZGVyL3JlbmRlcic7XG5pbXBvcnQgeyBDb21wb25lbnRTY29wZWRTdHlsZXMsIFFIb3N0QXR0ciB9IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5pbXBvcnQgeyB0aGVuIH0gZnJvbSAnLi4vdXRpbC9wcm9taXNlcyc7XG5pbXBvcnQgeyBzdHlsZUNvbnRlbnQsIHN0eWxlSG9zdCB9IGZyb20gJy4vcXJsLXN0eWxlcyc7XG5pbXBvcnQgeyBuZXdJbnZva2VDb250ZXh0LCB1c2VJbnZva2UgfSBmcm9tICcuLi91c2UvdXNlLWNvcmUnO1xuaW1wb3J0IHR5cGUgeyBRQ29udGV4dCB9IGZyb20gJy4uL3Byb3BzL3Byb3BzJztcbmltcG9ydCB7IHByb2Nlc3NOb2RlIH0gZnJvbSAnLi4vcmVuZGVyL2pzeC9qc3gtcnVudGltZSc7XG5pbXBvcnQgdHlwZSB7IFFSTEludGVybmFsIH0gZnJvbSAnLi4vaW1wb3J0L3FybC1jbGFzcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVuZGVyRmFjdG9yeU91dHB1dCB7XG4gIHJlbmRlclFSTDogUVJMSW50ZXJuYWw7XG4gIHdhaXRPbjogYW55W107XG59XG5cbmV4cG9ydCBjb25zdCBmaXJzdFJlbmRlckNvbXBvbmVudCA9IChyY3R4OiBSZW5kZXJDb250ZXh0LCBjdHg6IFFDb250ZXh0KSA9PiB7XG4gIGN0eC5lbGVtZW50LnNldEF0dHJpYnV0ZShRSG9zdEF0dHIsICcnKTtcbiAgY29uc3QgcmVzdWx0ID0gcmVuZGVyQ29tcG9uZW50KHJjdHgsIGN0eCk7XG4gIC8vIGlmIChjdHguY29tcG9uZW50Py5zdHlsZUhvc3RDbGFzcykge1xuICAvLyAgIGNsYXNzbGlzdEFkZChyY3R4LCBjdHguZWxlbWVudCwgY3R4LmNvbXBvbmVudC5zdHlsZUhvc3RDbGFzcyk7XG4gIC8vIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbmV4cG9ydCBjb25zdCByZW5kZXJDb21wb25lbnQgPSAocmN0eDogUmVuZGVyQ29udGV4dCwgY3R4OiBRQ29udGV4dCkgPT4ge1xuICBjb25zdCBob3N0RWxlbWVudCA9IGN0eC5lbGVtZW50IGFzIEhUTUxFbGVtZW50O1xuICBjb25zdCBvblJlbmRlclFSTCA9IGN0eC5yZW5kZXJRcmwhO1xuICBhc3NlcnREZWZpbmVkKG9uUmVuZGVyUVJMKTtcbiAgY29uc3Qgb25SZW5kZXJGbiA9IG9uUmVuZGVyUVJMLmludm9rZUZuKCk7XG5cbiAgLy8gQ29tcG9uZW50IGlzIG5vdCBkaXJ0eSBhbnkgbW9yZVxuICBjdHguZGlydHkgPSBmYWxzZTtcbiAgcmN0eC5nbG9iYWxTdGF0ZS5ob3N0c1N0YWdpbmcuZGVsZXRlKGhvc3RFbGVtZW50KTtcblxuICAvLyBJbnZva2UgcmVuZGVyIGhvb2tcbiAgY29uc3QgaW52b2NhdGluQ29udGV4dCA9IG5ld0ludm9rZUNvbnRleHQocmN0eC5kb2MsIGhvc3RFbGVtZW50LCBob3N0RWxlbWVudCwgJ3FSZW5kZXInKTtcbiAgaW52b2NhdGluQ29udGV4dC5xcmwgPSBvblJlbmRlclFSTDtcblxuICBjb25zdCBwcm9taXNlID0gdXNlSW52b2tlKGludm9jYXRpbkNvbnRleHQsIG9uUmVuZGVyRm4pO1xuXG4gIHJldHVybiB0aGVuKHByb21pc2UsIChqc3hOb2RlKSA9PiB7XG4gICAgcmN0eC5ob3N0RWxlbWVudHMuYWRkKGhvc3RFbGVtZW50KTtcbiAgICBsZXQgY29tcG9uZW50Q3R4ID0gY3R4LmNvbXBvbmVudDtcbiAgICBpZiAoIWNvbXBvbmVudEN0eCkge1xuICAgICAgY29tcG9uZW50Q3R4ID0gY3R4LmNvbXBvbmVudCA9IHtcbiAgICAgICAgaG9zdEVsZW1lbnQsXG4gICAgICAgIHNsb3RzOiBbXSxcbiAgICAgICAgc3R5bGVIb3N0Q2xhc3M6IHVuZGVmaW5lZCxcbiAgICAgICAgc3R5bGVDbGFzczogdW5kZWZpbmVkLFxuICAgICAgICBzdHlsZUlkOiB1bmRlZmluZWQsXG4gICAgICB9O1xuICAgICAgY29uc3Qgc2NvcGVkU3R5bGVJZCA9IGhvc3RFbGVtZW50LmdldEF0dHJpYnV0ZShDb21wb25lbnRTY29wZWRTdHlsZXMpID8/IHVuZGVmaW5lZDtcbiAgICAgIGlmIChzY29wZWRTdHlsZUlkKSB7XG4gICAgICAgIGNvbXBvbmVudEN0eC5zdHlsZUlkID0gc2NvcGVkU3R5bGVJZDtcbiAgICAgICAgY29tcG9uZW50Q3R4LnN0eWxlSG9zdENsYXNzID0gc3R5bGVIb3N0KHNjb3BlZFN0eWxlSWQpO1xuICAgICAgICBjb21wb25lbnRDdHguc3R5bGVDbGFzcyA9IHN0eWxlQ29udGVudChzY29wZWRTdHlsZUlkKTtcbiAgICAgICAgaG9zdEVsZW1lbnQuY2xhc3NMaXN0LmFkZChjb21wb25lbnRDdHguc3R5bGVIb3N0Q2xhc3MpO1xuICAgICAgfVxuICAgIH1cbiAgICBjb21wb25lbnRDdHguc2xvdHMgPSBbXTtcblxuICAgIGNvbnN0IG5ld0N0eDogUmVuZGVyQ29udGV4dCA9IHtcbiAgICAgIC4uLnJjdHgsXG4gICAgICBjb21wb25lbnQ6IGNvbXBvbmVudEN0eCxcbiAgICB9O1xuICAgIHJldHVybiB2aXNpdEpzeE5vZGUobmV3Q3R4LCBob3N0RWxlbWVudCwgcHJvY2Vzc05vZGUoanN4Tm9kZSksIGZhbHNlKTtcbiAgfSk7XG59O1xuIl19", "import { OnRenderProp, QSlotAttr } from '../util/markers';\nimport { getContext, getProps, setEvent } from '../props/props';\nimport { isOn$Prop, isOnProp } from '../props/props-on';\nimport { Host } from '../render/jsx/host.public';\nimport { $ } from '../import/qrl.public';\nimport { firstRenderComponent, renderComponent, } from '../component/component-ctx';\nimport { promiseAll, then } from '../util/promises';\nimport { assertDefined, assertEqual } from '../assert/assert';\nimport { NodeType } from '../util/types';\nimport { intToStr } from '../object/store';\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { SkipRerender } from './jsx/host.public';\nimport { logDebug, logError, logWarn } from '../util/log';\nimport { qDev } from '../util/qdev';\nimport { qError, QError } from '../error/error';\nimport { fromCamelToKebabCase } from '../util/case';\nimport { isStyleTask } from '../use/use-core';\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\nexport function smartUpdateChildren(ctx, elm, ch, mode, isSvg) {\n    if (ch.length === 1 && ch[0].type === SkipRerender) {\n        if (elm.firstChild !== null) {\n            return;\n        }\n        ch = ch[0].children;\n    }\n    const oldCh = getChildren(elm, mode);\n    if (oldCh.length > 0 && ch.length > 0) {\n        return updateChildren(ctx, elm, oldCh, ch, isSvg);\n    }\n    else if (ch.length > 0) {\n        return addVnodes(ctx, elm, undefined, ch, 0, ch.length - 1, isSvg);\n    }\n    else if (oldCh.length > 0) {\n        return removeVnodes(ctx, elm, oldCh, 0, oldCh.length - 1);\n    }\n}\nexport function updateChildren(ctx, parentElm, oldCh, newCh, isSvg) {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let oldKeyToIdx;\n    let idxInOld;\n    let elmToMove;\n    const results = [];\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newStartVnode)) {\n            results.push(patchVnode(ctx, oldStartVnode, newStartVnode, isSvg));\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (sameVnode(oldEndVnode, newEndVnode)) {\n            results.push(patchVnode(ctx, oldEndVnode, newEndVnode, isSvg));\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newEndVnode)) {\n            // Vnode moved right\n            results.push(patchVnode(ctx, oldStartVnode, newEndVnode, isSvg));\n            insertBefore(ctx, parentElm, oldStartVnode, oldEndVnode.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldEndVnode, newStartVnode)) {\n            // Vnode moved left\n            results.push(patchVnode(ctx, oldEndVnode, newStartVnode, isSvg));\n            insertBefore(ctx, parentElm, oldEndVnode, oldStartVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            if (oldKeyToIdx === undefined) {\n                oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n            }\n            idxInOld = oldKeyToIdx[newStartVnode.key];\n            if (idxInOld === undefined) {\n                // New element\n                const newElm = createElm(ctx, newStartVnode, isSvg);\n                results.push(then(newElm, (newElm) => {\n                    insertBefore(ctx, parentElm, newElm, oldStartVnode);\n                }));\n            }\n            else {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.nodeName !== newStartVnode.type) {\n                    const newElm = createElm(ctx, newStartVnode, isSvg);\n                    results.push(then(newElm, (newElm) => {\n                        insertBefore(ctx, parentElm, newElm, oldStartVnode);\n                    }));\n                }\n                else {\n                    results.push(patchVnode(ctx, elmToMove, newStartVnode, isSvg));\n                    oldCh[idxInOld] = undefined;\n                    insertBefore(ctx, parentElm, elmToMove, oldStartVnode);\n                }\n            }\n            newStartVnode = newCh[++newStartIdx];\n        }\n    }\n    if (newStartIdx <= newEndIdx) {\n        const before = newCh[newEndIdx + 1] == null ? undefined : newCh[newEndIdx + 1].elm;\n        results.push(addVnodes(ctx, parentElm, before, newCh, newStartIdx, newEndIdx, isSvg));\n    }\n    let wait = promiseAll(results);\n    if (oldStartIdx <= oldEndIdx) {\n        wait = then(wait, () => {\n            removeVnodes(ctx, parentElm, oldCh, oldStartIdx, oldEndIdx);\n        });\n    }\n    return wait;\n}\nfunction isComponentNode(node) {\n    return node.props && OnRenderProp in node.props;\n}\nfunction getCh(elm) {\n    return Array.from(elm.childNodes).filter(isNode);\n}\nexport function getChildren(elm, mode) {\n    switch (mode) {\n        case 'default':\n            return getCh(elm);\n        case 'slot':\n            return getCh(elm).filter(isChildSlot);\n        case 'root':\n            return getCh(elm).filter(isChildComponent);\n        case 'fallback':\n            return getCh(elm).filter(isFallback);\n    }\n}\nexport function isNode(elm) {\n    return elm.nodeType === 1 || elm.nodeType === 3;\n}\nfunction isFallback(node) {\n    return node.nodeName === 'Q:FALLBACK';\n}\nfunction isChildSlot(node) {\n    return node.nodeName !== 'Q:FALLBACK' && isChildComponent(node);\n}\nfunction isSlotTemplate(node) {\n    return node.nodeName === 'TEMPLATE' && node.hasAttribute(QSlotAttr);\n}\nfunction isChildComponent(node) {\n    return node.nodeName !== 'TEMPLATE' || !node.hasAttribute(QSlotAttr);\n}\nfunction splitBy(input, condition) {\n    var _a;\n    const output = {};\n    for (const item of input) {\n        const key = condition(item);\n        const array = (_a = output[key]) !== null && _a !== void 0 ? _a : (output[key] = []);\n        array.push(item);\n    }\n    return output;\n}\nexport function patchVnode(rctx, elm, vnode, isSvg) {\n    rctx.perf.visited++;\n    vnode.elm = elm;\n    const tag = vnode.type;\n    if (tag === '#text') {\n        if (elm.data !== vnode.text) {\n            setProperty(rctx, elm, 'data', vnode.text);\n        }\n        return;\n    }\n    if (tag === Host || tag === SkipRerender) {\n        return;\n    }\n    if (!isSvg) {\n        isSvg = tag === 'svg';\n    }\n    let promise;\n    const props = vnode.props;\n    const ctx = getContext(elm);\n    const dirty = updateProperties(rctx, ctx, props, isSvg);\n    const isSlot = tag === 'q:slot';\n    if (isSvg && vnode.type === 'foreignObject') {\n        isSvg = false;\n    }\n    else if (isSlot) {\n        rctx.component.slots.push(vnode);\n    }\n    const isComponent = isComponentNode(vnode);\n    if (dirty) {\n        promise = renderComponent(rctx, ctx);\n    }\n    const ch = vnode.children;\n    if (isComponent) {\n        return then(promise, () => {\n            const slotMaps = getSlots(ctx.component, elm);\n            const splittedChidren = splitBy(ch, getSlotName);\n            const promises = [];\n            // Mark empty slots and remove content\n            Object.entries(slotMaps.slots).forEach(([key, slotEl]) => {\n                if (slotEl && !splittedChidren[key]) {\n                    const oldCh = getChildren(slotEl, 'slot');\n                    if (oldCh.length > 0) {\n                        removeVnodes(rctx, slotEl, oldCh, 0, oldCh.length - 1);\n                    }\n                }\n            });\n            // Render into slots\n            Object.entries(splittedChidren).forEach(([key, ch]) => {\n                const slotElm = getSlotElement(rctx, slotMaps, elm, key);\n                promises.push(smartUpdateChildren(rctx, slotElm, ch, 'slot', isSvg));\n            });\n            return then(promiseAll(promises), () => {\n                removeTemplates(rctx, slotMaps);\n            });\n        });\n    }\n    const setsInnerHTML = checkInnerHTML(props);\n    if (setsInnerHTML) {\n        if (qDev && ch.length > 0) {\n            logWarn('Node can not have children when innerHTML is set');\n        }\n        return;\n    }\n    return then(promise, () => {\n        const mode = isSlot ? 'fallback' : 'default';\n        return smartUpdateChildren(rctx, elm, ch, mode, isSvg);\n    });\n}\nfunction addVnodes(ctx, parentElm, before, vnodes, startIdx, endIdx, isSvg) {\n    const promises = [];\n    for (; startIdx <= endIdx; ++startIdx) {\n        const ch = vnodes[startIdx];\n        assertDefined(ch);\n        promises.push(createElm(ctx, ch, isSvg));\n    }\n    return then(promiseAll(promises), (children) => {\n        for (const child of children) {\n            insertBefore(ctx, parentElm, child, before);\n        }\n    });\n}\nfunction removeVnodes(ctx, parentElm, nodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        const ch = nodes[startIdx];\n        assertDefined(ch);\n        removeNode(ctx, ch);\n    }\n}\nlet refCount = 0;\nconst RefSymbol = Symbol();\nfunction setSlotRef(ctx, hostElm, slotEl) {\n    var _a;\n    let ref = (_a = hostElm[RefSymbol]) !== null && _a !== void 0 ? _a : hostElm.getAttribute('q:sref');\n    if (ref === null) {\n        ref = intToStr(refCount++);\n        hostElm[RefSymbol] = ref;\n        setAttribute(ctx, hostElm, 'q:sref', ref);\n    }\n    slotEl.setAttribute('q:sref', ref);\n}\nfunction getSlotElement(ctx, slotMaps, parentEl, slotName) {\n    const slotEl = slotMaps.slots[slotName];\n    if (slotEl) {\n        return slotEl;\n    }\n    const templateEl = slotMaps.templates[slotName];\n    if (templateEl) {\n        return templateEl.content;\n    }\n    const template = createTemplate(ctx, slotName);\n    prepend(ctx, parentEl, template);\n    slotMaps.templates[slotName] = template;\n    return template.content;\n}\nfunction createTemplate(ctx, slotName) {\n    const template = createElement(ctx, 'template', false);\n    template.setAttribute(QSlotAttr, slotName);\n    return template;\n}\nfunction removeTemplates(ctx, slotMaps) {\n    Object.keys(slotMaps.templates).forEach((key) => {\n        const template = slotMaps.templates[key];\n        if (template && slotMaps.slots[key] !== undefined) {\n            removeNode(ctx, template);\n            slotMaps.templates[key] = undefined;\n        }\n    });\n}\nexport function resolveSlotProjection(ctx, hostElm, before, after) {\n    Object.entries(before.slots).forEach(([key, slotEl]) => {\n        if (slotEl && !after.slots[key]) {\n            // Slot removed\n            // Move slot to template\n            const template = createTemplate(ctx, key);\n            const slotChildren = getChildren(slotEl, 'slot');\n            template.content.append(...slotChildren);\n            hostElm.insertBefore(template, hostElm.firstChild);\n            ctx.operations.push({\n                el: template,\n                operation: 'slot-to-template',\n                args: slotChildren,\n                fn: () => { },\n            });\n        }\n    });\n    Object.entries(after.slots).forEach(([key, slotEl]) => {\n        if (slotEl && !before.slots[key]) {\n            // Slot created\n            // Move template to slot\n            const template = before.templates[key];\n            if (template) {\n                slotEl.appendChild(template.content);\n                template.remove();\n                ctx.operations.push({\n                    el: slotEl,\n                    operation: 'template-to-slot',\n                    args: [template],\n                    fn: () => { },\n                });\n            }\n        }\n    });\n}\nfunction getSlotName(node) {\n    var _a, _b;\n    return (_b = (_a = node.props) === null || _a === void 0 ? void 0 : _a['q:slot']) !== null && _b !== void 0 ? _b : '';\n}\nfunction createElm(rctx, vnode, isSvg) {\n    rctx.perf.visited++;\n    const tag = vnode.type;\n    if (tag === '#text') {\n        return (vnode.elm = createTextNode(rctx, vnode.text));\n    }\n    if (!isSvg) {\n        isSvg = tag === 'svg';\n    }\n    const props = vnode.props;\n    const elm = (vnode.elm = createElement(rctx, tag, isSvg));\n    const isComponent = isComponentNode(vnode);\n    const ctx = getContext(elm);\n    setKey(elm, vnode.key);\n    updateProperties(rctx, ctx, props, isSvg);\n    if (isSvg && tag === 'foreignObject') {\n        isSvg = false;\n    }\n    const currentComponent = rctx.component;\n    if (currentComponent) {\n        const styleTag = currentComponent.styleClass;\n        if (styleTag) {\n            classlistAdd(rctx, elm, styleTag);\n        }\n        if (tag === 'q:slot') {\n            setSlotRef(rctx, currentComponent.hostElement, elm);\n            rctx.component.slots.push(vnode);\n        }\n    }\n    let wait;\n    if (isComponent) {\n        // Run mount hook\n        const renderQRLPromise = props[OnRenderProp](elm);\n        wait = then(renderQRLPromise, (output) => {\n            ctx.renderQrl = output.renderQRL;\n            output.waitOn.forEach((task) => {\n                if (isStyleTask(task)) {\n                    appendStyle(rctx, elm, task);\n                }\n            });\n            ctx.refMap.add(output.renderQRL);\n            return firstRenderComponent(rctx, ctx);\n        });\n    }\n    else {\n        const setsInnerHTML = checkInnerHTML(props);\n        if (setsInnerHTML) {\n            if (qDev && vnode.children.length > 0) {\n                logWarn('Node can not have children when innerHTML is set');\n            }\n            return elm;\n        }\n    }\n    return then(wait, () => {\n        let children = vnode.children;\n        if (children.length > 0) {\n            if (children.length === 1 && children[0].type === SkipRerender) {\n                children = children[0].children;\n            }\n            const slotMap = isComponent ? getSlots(ctx.component, elm) : undefined;\n            const promises = children.map((ch) => createElm(rctx, ch, isSvg));\n            return then(promiseAll(promises), () => {\n                let parent = elm;\n                for (const node of children) {\n                    if (slotMap) {\n                        parent = getSlotElement(rctx, slotMap, elm, getSlotName(node));\n                    }\n                    parent.appendChild(node.elm);\n                }\n                return elm;\n            });\n        }\n        return elm;\n    });\n}\nconst getSlots = (componentCtx, hostElm) => {\n    var _a, _b, _c, _d, _e;\n    const slots = {};\n    const templates = {};\n    const slotRef = hostElm.getAttribute('q:sref');\n    const existingSlots = Array.from(hostElm.querySelectorAll(`q\\\\:slot[q\\\\:sref=\"${slotRef}\"]`));\n    const newSlots = (_a = componentCtx === null || componentCtx === void 0 ? void 0 : componentCtx.slots) !== null && _a !== void 0 ? _a : EMPTY_ARRAY;\n    const t = Array.from(hostElm.childNodes).filter(isSlotTemplate);\n    // Map slots\n    for (const elm of existingSlots) {\n        slots[(_b = elm.getAttribute('name')) !== null && _b !== void 0 ? _b : ''] = elm;\n    }\n    // Map virtual slots\n    for (const vnode of newSlots) {\n        slots[(_d = (_c = vnode.props) === null || _c === void 0 ? void 0 : _c.name) !== null && _d !== void 0 ? _d : ''] = vnode.elm;\n    }\n    // Map templates\n    for (const elm of t) {\n        templates[(_e = elm.getAttribute('q:slot')) !== null && _e !== void 0 ? _e : ''] = elm;\n    }\n    return { slots, templates };\n};\nconst handleStyle = (ctx, elm, _, newValue) => {\n    setAttribute(ctx, elm, 'style', stringifyClassOrStyle(newValue, false));\n    return true;\n};\nconst handleClass = (ctx, elm, _, newValue) => {\n    setAttribute(ctx, elm, 'class', stringifyClassOrStyle(newValue, true));\n    return true;\n};\nconst checkBeforeAssign = (ctx, elm, prop, newValue) => {\n    if (prop in elm) {\n        if (elm[prop] !== newValue) {\n            setProperty(ctx, elm, prop, newValue);\n        }\n    }\n    return true;\n};\nconst dangerouslySetInnerHTML = 'dangerouslySetInnerHTML';\nconst setInnerHTML = (ctx, elm, _, newValue) => {\n    if (dangerouslySetInnerHTML in elm) {\n        setProperty(ctx, elm, dangerouslySetInnerHTML, newValue);\n    }\n    else if ('innerHTML' in elm) {\n        setProperty(ctx, elm, 'innerHTML', newValue);\n    }\n    return true;\n};\nconst PROP_HANDLER_MAP = {\n    style: handleStyle,\n    class: handleClass,\n    className: handleClass,\n    value: checkBeforeAssign,\n    checked: checkBeforeAssign,\n    [dangerouslySetInnerHTML]: setInnerHTML,\n};\nconst ALLOWS_PROPS = ['class', 'className', 'style', 'id', 'q:slot'];\nconst HOST_PREFIX = 'host:';\nexport function updateProperties(rctx, ctx, expectProps, isSvg) {\n    if (!expectProps) {\n        return false;\n    }\n    const elm = ctx.element;\n    const qwikProps = OnRenderProp in expectProps ? getProps(ctx) : undefined;\n    for (let key of Object.keys(expectProps)) {\n        if (key === 'children' || key === OnRenderProp) {\n            continue;\n        }\n        const newValue = expectProps[key];\n        // Early exit if value didnt change\n        const oldValue = ctx.cache.get(key);\n        if (newValue === oldValue) {\n            continue;\n        }\n        ctx.cache.set(key, newValue);\n        // Check of data- or aria-\n        if (key.startsWith('data-') || key.startsWith('aria-')) {\n            setAttribute(rctx, elm, key, newValue);\n            continue;\n        }\n        if (qwikProps) {\n            const skipProperty = ALLOWS_PROPS.includes(key);\n            const hPrefixed = key.startsWith(HOST_PREFIX);\n            if (!skipProperty && !hPrefixed) {\n                // Qwik props\n                qwikProps[key] = newValue;\n                continue;\n            }\n            if (hPrefixed) {\n                key = key.slice(HOST_PREFIX.length);\n            }\n        }\n        else if (qDev && key.startsWith(HOST_PREFIX)) {\n            logWarn(`${HOST_PREFIX} prefix can not be used in non components`);\n            continue;\n        }\n        if (isOnProp(key)) {\n            setEvent(rctx, ctx, key.slice(0, -3), newValue);\n            continue;\n        }\n        if (isOn$Prop(key)) {\n            setEvent(rctx, ctx, key.slice(0, -1), $(newValue));\n            continue;\n        }\n        // Check if its an exception\n        const exception = PROP_HANDLER_MAP[key];\n        if (exception) {\n            if (exception(rctx, elm, key, newValue, oldValue)) {\n                continue;\n            }\n        }\n        // Check if property in prototype\n        if (!isSvg && key in elm) {\n            setProperty(rctx, elm, key, newValue);\n            continue;\n        }\n        // Fallback to render attribute\n        setAttribute(rctx, elm, key, newValue);\n    }\n    return ctx.dirty;\n}\nexport const startEvent = (ctx, name) => {\n    const event = {\n        name,\n        timeStart: performance.now(),\n        timeEnd: 0,\n    };\n    ctx.perf.timing.push(event);\n    return () => {\n        event.timeEnd = performance.now();\n    };\n};\nexport function setAttribute(ctx, el, prop, value) {\n    const fn = () => {\n        if (value == null) {\n            el.removeAttribute(prop);\n        }\n        else {\n            el.setAttribute(prop, String(value));\n        }\n    };\n    ctx.operations.push({\n        el,\n        operation: 'set-attribute',\n        args: [prop, value],\n        fn,\n    });\n}\nexport function classlistAdd(ctx, el, hostStyleTag) {\n    const fn = () => {\n        el.classList.add(hostStyleTag);\n    };\n    ctx.operations.push({\n        el,\n        operation: 'classlist-add',\n        args: [hostStyleTag],\n        fn,\n    });\n}\nfunction setProperty(ctx, node, key, value) {\n    const fn = () => {\n        try {\n            node[key] = value;\n        }\n        catch (err) {\n            logError('Set property', { node, key, value }, err);\n        }\n    };\n    ctx.operations.push({\n        el: node,\n        operation: 'set-property',\n        args: [key, value],\n        fn,\n    });\n}\nfunction createElement(ctx, expectTag, isSvg) {\n    const el = isSvg ? ctx.doc.createElementNS(SVG_NS, expectTag) : ctx.doc.createElement(expectTag);\n    ctx.operations.push({\n        el,\n        operation: 'create-element',\n        args: [expectTag],\n        fn: () => { },\n    });\n    return el;\n}\nfunction insertBefore(ctx, parent, newChild, refChild) {\n    const fn = () => {\n        parent.insertBefore(newChild, refChild ? refChild : null);\n    };\n    ctx.operations.push({\n        el: parent,\n        operation: 'insert-before',\n        args: [newChild, refChild],\n        fn,\n    });\n    return newChild;\n}\nfunction appendStyle(ctx, hostElement, styleTask) {\n    const fn = () => {\n        const containerEl = ctx.containerEl;\n        if (!containerEl.querySelector(`style[q\\\\:style=\"${styleTask.scope}\"]`)) {\n            const style = ctx.doc.createElement('style');\n            const stylesParent = ctx.doc.documentElement === containerEl ? ctx.doc.head : containerEl;\n            style.setAttribute('q:style', styleTask.scope);\n            style.textContent = styleTask.content;\n            stylesParent.insertBefore(style, containerEl.firstChild);\n        }\n    };\n    ctx.operations.push({\n        el: hostElement,\n        operation: 'append-style',\n        args: [styleTask],\n        fn,\n    });\n}\nfunction prepend(ctx, parent, newChild) {\n    const fn = () => {\n        parent.insertBefore(newChild, parent.firstChild);\n    };\n    ctx.operations.push({\n        el: parent,\n        operation: 'prepend',\n        args: [newChild],\n        fn,\n    });\n}\nfunction removeNode(ctx, el) {\n    const fn = () => {\n        const parent = el.parentNode;\n        if (parent) {\n            parent.removeChild(el);\n        }\n        else if (qDev) {\n            logWarn('Trying to remove component already removed', el);\n        }\n    };\n    ctx.operations.push({\n        el: el,\n        operation: 'remove',\n        args: [],\n        fn,\n    });\n}\nfunction createTextNode(ctx, text) {\n    return ctx.doc.createTextNode(text);\n}\nexport function executeContextWithSlots(ctx) {\n    const before = ctx.roots.map((elm) => getSlots(undefined, elm));\n    executeContext(ctx);\n    const after = ctx.roots.map((elm) => getSlots(undefined, elm));\n    assertEqual(before.length, after.length);\n    for (let i = 0; i < before.length; i++) {\n        resolveSlotProjection(ctx, ctx.roots[i], before[i], after[i]);\n    }\n}\nexport function executeContext(ctx) {\n    for (const op of ctx.operations) {\n        op.fn();\n    }\n}\nexport function printRenderStats(ctx) {\n    var _a;\n    const byOp = {};\n    for (const op of ctx.operations) {\n        byOp[op.operation] = ((_a = byOp[op.operation]) !== null && _a !== void 0 ? _a : 0) + 1;\n    }\n    const affectedElements = Array.from(new Set(ctx.operations.map((a) => a.el)));\n    const stats = {\n        byOp,\n        roots: ctx.roots,\n        hostElements: Array.from(ctx.hostElements),\n        affectedElements,\n        visitedNodes: ctx.perf.visited,\n        operations: ctx.operations.map((v) => [v.operation, v.el, ...v.args]),\n    };\n    logDebug('Render stats', stats);\n    return stats;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    const map = {};\n    for (let i = beginIdx; i <= endIdx; ++i) {\n        const child = children[i];\n        if (child.nodeType == NodeType.ELEMENT_NODE) {\n            const key = getKey(child);\n            if (key !== undefined) {\n                map[key] = i;\n            }\n        }\n    }\n    return map;\n}\nconst KEY_SYMBOL = Symbol('vnode key');\nfunction getKey(el) {\n    let key = el[KEY_SYMBOL];\n    if (key === undefined) {\n        key = el[KEY_SYMBOL] = el.getAttribute('q:key');\n    }\n    return key;\n}\nfunction setKey(el, key) {\n    if (typeof key === 'string') {\n        el.setAttribute('q:key', key);\n    }\n    el[KEY_SYMBOL] = key;\n}\nfunction sameVnode(vnode1, vnode2) {\n    const isSameSel = vnode1.nodeName.toLowerCase() === vnode2.type;\n    const isSameKey = vnode1.nodeType === NodeType.ELEMENT_NODE ? getKey(vnode1) === vnode2.key : true;\n    return isSameSel && isSameKey;\n}\nfunction checkInnerHTML(props) {\n    return props && ('innerHTML' in props || dangerouslySetInnerHTML in props);\n}\nexport function stringifyClassOrStyle(obj, isClass) {\n    if (obj == null)\n        return '';\n    if (typeof obj == 'object') {\n        let text = '';\n        let sep = '';\n        if (Array.isArray(obj)) {\n            if (!isClass) {\n                throw qError(QError.Render_unsupportedFormat_obj_attr, obj, 'style');\n            }\n            for (let i = 0; i < obj.length; i++) {\n                text += sep + obj[i];\n                sep = ' ';\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    text += isClass\n                        ? value\n                            ? sep + key\n                            : ''\n                        : sep + fromCamelToKebabCase(key) + ':' + value;\n                    sep = isClass ? ' ' : ';';\n                }\n            }\n        }\n        return text;\n    }\n    return String(obj);\n}\n//# sourceMappingURL=data:application/json;base64,", "import { assertDefined } from '../assert/assert';\nimport { QHostAttr } from '../util/markers';\nimport { executeContextWithSlots, printRenderStats } from './cursor';\nimport { getContext, resumeIfNeeded } from '../props/props';\nimport { qDev } from '../util/qdev';\nimport { getPlatform } from '../platform/platform';\nimport { getDocument } from '../util/dom';\nimport { renderComponent } from '../component/component-ctx';\nimport { logDebug } from '../util/log';\nimport { getContainer } from '../use/use-core';\n/**\n * Mark component for rendering.\n *\n * Use `notifyRender` method to mark a component for rendering at some later point in time.\n * This method uses `getPlatform(doc).queueRender` for scheduling of the rendering. The\n * default implementation of the method is to use `requestAnimationFrame` to do actual rendering.\n *\n * The method is intended to coalesce multiple calls into `notifyRender` into a single call for\n * rendering.\n *\n * @param hostElement - Host-element of the component to re-render.\n * @returns A promise which is resolved when the component has been rendered.\n * @public\n */\nexport function notifyRender(hostElement) {\n    assertDefined(hostElement.getAttribute(QHostAttr));\n    const containerEl = getContainer(hostElement);\n    assertDefined(containerEl);\n    resumeIfNeeded(containerEl);\n    const ctx = getContext(hostElement);\n    const state = getRenderingState(containerEl);\n    if (ctx.dirty) {\n        // TODO\n        return state.renderPromise;\n    }\n    ctx.dirty = true;\n    const activeRendering = state.hostsRendering !== undefined;\n    if (activeRendering) {\n        state.hostsStaging.add(hostElement);\n        return state.renderPromise.then((ctx) => {\n            if (state.hostsNext.has(hostElement)) {\n                // TODO\n                return state.renderPromise;\n            }\n            else {\n                return ctx;\n            }\n        });\n    }\n    else {\n        state.hostsNext.add(hostElement);\n        return scheduleFrame(containerEl, state);\n    }\n}\nexport function scheduleFrame(containerEl, state) {\n    if (state.renderPromise === undefined) {\n        state.renderPromise = getPlatform(containerEl).nextTick(() => renderMarked(containerEl, state));\n    }\n    return state.renderPromise;\n}\nconst SCHEDULE = Symbol('Render state');\nexport function getRenderingState(containerEl) {\n    let set = containerEl[SCHEDULE];\n    if (!set) {\n        containerEl[SCHEDULE] = set = {\n            hostsNext: new Set(),\n            hostsStaging: new Set(),\n            renderPromise: undefined,\n            hostsRendering: undefined,\n        };\n    }\n    return set;\n}\nexport async function renderMarked(containerEl, state) {\n    state.hostsRendering = new Set(state.hostsNext);\n    state.hostsNext.clear();\n    const doc = getDocument(containerEl);\n    const platform = getPlatform(containerEl);\n    const renderingQueue = Array.from(state.hostsRendering);\n    sortNodes(renderingQueue);\n    const ctx = {\n        doc,\n        globalState: state,\n        hostElements: new Set(),\n        operations: [],\n        roots: [],\n        containerEl,\n        component: undefined,\n        perf: {\n            visited: 0,\n            timing: [],\n        },\n    };\n    for (const el of renderingQueue) {\n        if (!ctx.hostElements.has(el)) {\n            ctx.roots.push(el);\n            await renderComponent(ctx, getContext(el));\n        }\n    }\n    // Early exist, no dom operations\n    if (ctx.operations.length === 0) {\n        if (qDev) {\n            if (typeof window !== 'undefined' && window.document != null) {\n                logDebug('Render skipped. No operations.');\n                printRenderStats(ctx);\n            }\n        }\n        postRendering(containerEl, state);\n        return ctx;\n    }\n    return platform.raf(() => {\n        executeContextWithSlots(ctx);\n        if (qDev) {\n            if (typeof window !== 'undefined' && window.document != null) {\n                printRenderStats(ctx);\n            }\n        }\n        postRendering(containerEl, state);\n        return ctx;\n    });\n}\nfunction postRendering(containerEl, state) {\n    // Move elements from staging to nextRender\n    state.hostsStaging.forEach((el) => {\n        state.hostsNext.add(el);\n    });\n    // Clear staging\n    state.hostsStaging.clear();\n    state.hostsRendering = undefined;\n    state.renderPromise = undefined;\n    if (state.hostsNext.size > 0) {\n        scheduleFrame(containerEl, state);\n    }\n}\nfunction sortNodes(elements) {\n    elements.sort((a, b) => (a.compareDocumentPosition(b) & 2 ? 1 : -1));\n}\n//# sourceMappingURL=data:application/json;base64,", "import { assertEqual } from '../assert/assert';\nimport { QError, qError } from '../error/error';\nimport { isQrl } from '../import/qrl-class';\nimport { notifyRender } from '../render/notify-render';\nimport { tryGetInvokeContext } from '../use/use-core';\nimport { logWarn } from '../util/log';\nimport { qDev, qTest } from '../util/qdev';\nimport { debugStringify } from '../util/stringify';\nconst ProxyMapSymbol = Symbol('ProxyMapSymbol');\nexport function getProxyMap(doc) {\n    let map = doc[ProxyMapSymbol];\n    if (!map) {\n        map = doc[ProxyMapSymbol] = new WeakMap();\n    }\n    return map;\n}\nexport function qObject(obj, proxyMap) {\n    assertEqual(unwrapProxy(obj), obj, 'Unexpected proxy at this location');\n    if (obj == null || typeof obj !== 'object') {\n        // TODO(misko): centralize\n        throw new Error(`Q-ERROR: Only objects can be wrapped in 'QObject', got ` + debugStringify(obj));\n    }\n    if (obj.constructor !== Object) {\n        throw new Error(`Q-ERROR: Only objects literals can be wrapped in 'QObject', got ` + debugStringify(obj));\n    }\n    return readWriteProxy(obj, proxyMap);\n}\nexport function _restoreQObject(obj, map, subs) {\n    return readWriteProxy(obj, map, subs);\n}\n/**\n * Creates a proxy which notifies of any writes.\n */\nexport function readWriteProxy(target, proxyMap, subs) {\n    if (!target || typeof target !== 'object')\n        return target;\n    let proxy = proxyMap.get(target);\n    if (proxy)\n        return proxy;\n    proxy = new Proxy(target, new ReadWriteProxyHandler(proxyMap, subs));\n    proxyMap.set(target, proxy);\n    return proxy;\n}\nexport const QOjectTargetSymbol = ':target:';\nexport const QOjectSubsSymbol = ':subs:';\nexport const QOjectOriginalProxy = ':proxy:';\nexport const SetSubscriber = Symbol('SetSubscriber');\nexport function unwrapProxy(proxy) {\n    if (proxy && typeof proxy == 'object') {\n        const value = proxy[QOjectTargetSymbol];\n        if (value)\n            return value;\n    }\n    return proxy;\n}\nexport function wrap(value, proxyMap) {\n    if (value && typeof value === 'object') {\n        if (isQrl(value)) {\n            return value;\n        }\n        const nakedValue = unwrapProxy(value);\n        if (nakedValue !== value) {\n            // already a proxy return;\n            return value;\n        }\n        if (qDev) {\n            verifySerializable(value);\n        }\n        const proxy = proxyMap.get(value);\n        return proxy ? proxy : readWriteProxy(value, proxyMap);\n    }\n    else {\n        return value;\n    }\n}\nclass ReadWriteProxyHandler {\n    constructor(proxyMap, subs = new Map()) {\n        this.proxyMap = proxyMap;\n        this.subs = subs;\n    }\n    getSub(el) {\n        let sub = this.subs.get(el);\n        if (!sub) {\n            this.subs.set(el, (sub = new Set()));\n        }\n        return sub;\n    }\n    get(target, prop) {\n        let subscriber = this.subscriber;\n        this.subscriber = undefined;\n        if (prop === QOjectTargetSymbol)\n            return target;\n        if (prop === QOjectSubsSymbol)\n            return this.subs;\n        if (prop === QOjectOriginalProxy)\n            return this.proxyMap.get(target);\n        const value = target[prop];\n        if (typeof prop === 'symbol') {\n            return value;\n        }\n        if (!subscriber) {\n            const invokeCtx = tryGetInvokeContext();\n            if (qDev && !invokeCtx && !qTest) {\n                logWarn(`State assigned outside invocation context. Getting prop \"${prop}\" of:`, target);\n            }\n            if (invokeCtx && invokeCtx.subscriptions && invokeCtx.hostElement) {\n                subscriber = invokeCtx.hostElement;\n            }\n        }\n        if (subscriber) {\n            const isArray = Array.isArray(target);\n            const sub = this.getSub(subscriber);\n            if (!isArray) {\n                sub.add(prop);\n            }\n        }\n        return wrap(value, this.proxyMap);\n    }\n    set(target, prop, newValue) {\n        if (typeof prop === 'symbol') {\n            if (prop === SetSubscriber) {\n                this.subscriber = newValue;\n            }\n            else {\n                target[prop] = newValue;\n            }\n            return true;\n        }\n        const unwrappedNewValue = unwrapProxy(newValue);\n        verifySerializable(unwrappedNewValue);\n        const isArray = Array.isArray(target);\n        if (isArray) {\n            target[prop] = unwrappedNewValue;\n            this.subs.forEach((_, el) => notifyRender(el));\n            return true;\n        }\n        const oldValue = target[prop];\n        if (oldValue !== unwrappedNewValue) {\n            target[prop] = unwrappedNewValue;\n            this.subs.forEach((propSets, el) => {\n                if (propSets.has(prop)) {\n                    notifyRender(el);\n                }\n            });\n        }\n        return true;\n    }\n    has(target, property) {\n        if (property === QOjectTargetSymbol)\n            return true;\n        if (property === QOjectSubsSymbol)\n            return true;\n        return Object.prototype.hasOwnProperty.call(target, property);\n    }\n    ownKeys(target) {\n        return Object.getOwnPropertyNames(target);\n    }\n}\nfunction verifySerializable(value) {\n    if (shouldSerialize(value) && typeof value == 'object' && value !== null) {\n        if (Array.isArray(value))\n            return;\n        if (isQrl(value))\n            return;\n        if (Object.getPrototypeOf(value) !== Object.prototype) {\n            throw qError(QError.TODO, 'Only primitive and object literals can be serialized.');\n        }\n    }\n}\nconst NOSERIALIZE = Symbol('NoSerialize');\nexport function shouldSerialize(obj) {\n    if (obj !== null && (typeof obj == 'object' || typeof obj === 'function')) {\n        const noSerialize = obj[NOSERIALIZE] === true;\n        return !noSerialize;\n    }\n    return true;\n}\n/**\n * @alpha\n */\nexport function noSerialize(input) {\n    input[NOSERIALIZE] = true;\n    return input;\n}\n//# sourceMappingURL=data:application/json;base64,", "import { useHostElement } from './use-host-element.public';\nimport { QOjectOriginalProxy, QOjectTargetSymbol, SetSubscriber } from '../object/q-object';\n/**\n * @alpha\n */\nexport function useSubscriber(obj) {\n    return wrapSubscriber(obj, useHostElement());\n}\n/**\n * @alpha\n */\nexport function wrapSubscriber(obj, subscriber) {\n    if (obj && typeof obj === 'object') {\n        const target = obj[QOjectTargetSymbol];\n        if (!target) {\n            return obj;\n        }\n        return new Proxy(obj, {\n            get(target, prop) {\n                if (prop === QOjectOriginalProxy) {\n                    return target;\n                }\n                target[SetSubscriber] = subscriber;\n                return target[prop];\n            },\n        });\n    }\n    return obj;\n}\n/**\n * @alpha\n */\nexport function unwrapSubscriber(obj) {\n    if (obj && typeof obj === 'object') {\n        const proxy = obj[QOjectOriginalProxy];\n        if (proxy) {\n            return proxy;\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXN1YnNjcmliZXIuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2Utc3Vic2NyaWJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDM0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLGtCQUFrQixFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTVGOztHQUVHO0FBQ0gsTUFBTSxVQUFVLGFBQWEsQ0FBZSxHQUFNO0lBQ2hELE9BQU8sY0FBYyxDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxjQUFjLENBQWUsR0FBTSxFQUFFLFVBQW1CO0lBQ3RFLElBQUksR0FBRyxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsRUFBRTtRQUNsQyxNQUFNLE1BQU0sR0FBSSxHQUFXLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsT0FBTyxHQUFHLENBQUM7U0FDWjtRQUNELE9BQU8sSUFBSSxLQUFLLENBQU0sR0FBRyxFQUFFO1lBQ3pCLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSTtnQkFDZCxJQUFJLElBQUksS0FBSyxtQkFBbUIsRUFBRTtvQkFDaEMsT0FBTyxNQUFNLENBQUM7aUJBQ2Y7Z0JBQ0QsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUFHLFVBQVUsQ0FBQztnQkFDbkMsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDdEIsQ0FBQztTQUNGLENBQUMsQ0FBQztLQUNKO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsZ0JBQWdCLENBQWUsR0FBTTtJQUNuRCxJQUFJLEdBQUcsSUFBSSxPQUFPLEdBQUcsS0FBSyxRQUFRLEVBQUU7UUFDbEMsTUFBTSxLQUFLLEdBQUksR0FBVyxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDaEQsSUFBSSxLQUFLLEVBQUU7WUFDVCxPQUFPLEtBQUssQ0FBQztTQUNkO0tBQ0Y7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VIb3N0RWxlbWVudCB9IGZyb20gJy4vdXNlLWhvc3QtZWxlbWVudC5wdWJsaWMnO1xuaW1wb3J0IHsgUU9qZWN0T3JpZ2luYWxQcm94eSwgUU9qZWN0VGFyZ2V0U3ltYm9sLCBTZXRTdWJzY3JpYmVyIH0gZnJvbSAnLi4vb2JqZWN0L3Etb2JqZWN0JztcblxuLyoqXG4gKiBAYWxwaGFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVN1YnNjcmliZXI8VCBleHRlbmRzIHt9PihvYmo6IFQpOiBUIHtcbiAgcmV0dXJuIHdyYXBTdWJzY3JpYmVyKG9iaiwgdXNlSG9zdEVsZW1lbnQoKSk7XG59XG5cbi8qKlxuICogQGFscGhhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3cmFwU3Vic2NyaWJlcjxUIGV4dGVuZHMge30+KG9iajogVCwgc3Vic2NyaWJlcjogRWxlbWVudCkge1xuICBpZiAob2JqICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnKSB7XG4gICAgY29uc3QgdGFyZ2V0ID0gKG9iaiBhcyBhbnkpW1FPamVjdFRhcmdldFN5bWJvbF07XG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUHJveHk8YW55PihvYmosIHtcbiAgICAgIGdldCh0YXJnZXQsIHByb3ApIHtcbiAgICAgICAgaWYgKHByb3AgPT09IFFPamVjdE9yaWdpbmFsUHJveHkpIHtcbiAgICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgICAgICB9XG4gICAgICAgIHRhcmdldFtTZXRTdWJzY3JpYmVyXSA9IHN1YnNjcmliZXI7XG4gICAgICAgIHJldHVybiB0YXJnZXRbcHJvcF07XG4gICAgICB9LFxuICAgIH0pO1xuICB9XG4gIHJldHVybiBvYmo7XG59XG5cbi8qKlxuICogQGFscGhhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1bndyYXBTdWJzY3JpYmVyPFQgZXh0ZW5kcyB7fT4ob2JqOiBUKSB7XG4gIGlmIChvYmogJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICBjb25zdCBwcm94eSA9IChvYmogYXMgYW55KVtRT2plY3RPcmlnaW5hbFByb3h5XTtcbiAgICBpZiAocHJveHkpIHtcbiAgICAgIHJldHVybiBwcm94eTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG9iajtcbn1cbiJdfQ==", "/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { isQrl, QRLInternal } from './qrl-class';\nimport { assertEqual } from '../assert/assert';\nimport { getDocument } from '../util/dom';\nimport { logError } from '../util/log';\nimport { then } from '../util/promises';\nimport { getPlatform } from '../platform/platform';\nimport { unwrapSubscriber } from '../use/use-subscriber';\nlet runtimeSymbolId = 0;\nconst RUNTIME_QRL = '/runtimeQRL';\n// https://regexr.com/68v72\nconst EXTRACT_IMPORT_PATH = /\\(\\s*(['\"])([^\\1]+)\\1\\s*\\)/;\n// https://regexr.com/690ds\nconst EXTRACT_SELF_IMPORT = /Promise\\s*\\.\\s*resolve/;\n// https://regexr.com/6a83h\nconst EXTRACT_FILE_NAME = /[\\\\/(]([\\w\\d.\\-_]+\\.(js|ts)x?):/;\nexport function toInternalQRL(qrl) {\n    assertEqual(isQrl(qrl), true);\n    return qrl;\n}\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#qrlImport\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#qrlImport instead)\n/**\n * Lazy-load a `QRL` symbol and return the lazy-loaded value.\n *\n * See: `QRL`\n *\n * @param element - Location of the URL to resolve against. This is needed to take `q:base` into\n * account.\n * @param qrl - QRL to load.\n * @returns A resolved QRL value as a Promise.\n */\n// </docs>\nexport function qrlImport(element, qrl) {\n    const qrl_ = toInternalQRL(qrl);\n    if (qrl_.symbolRef)\n        return qrl_.symbolRef;\n    if (qrl_.symbolFn) {\n        return (qrl_.symbolRef = qrl_\n            .symbolFn()\n            .then((module) => (qrl_.symbolRef = module[qrl_.symbol])));\n    }\n    else {\n        if (!element) {\n            throw new Error('QRL does not have an attached container');\n        }\n        const symbol = getPlatform(getDocument(element)).importSymbol(element, qrl_.chunk, qrl_.symbol);\n        return (qrl_.symbolRef = then(symbol, (ref) => {\n            return (qrl_.symbolRef = ref);\n        }));\n    }\n}\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#qrl\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#qrl instead)\n/**\n * Used by Qwik Optimizer to point to lazy-loaded resources.\n *\n * This function should be used by the Qwik Optimizer only. The function should not be directly\n * referred to in the source code of the application.\n *\n * See: `QRL`, `$(...)`\n *\n * @param chunkOrFn - Chunk name (or function which is stringified to extract chunk name)\n * @param symbol - Symbol to lazy load\n * @param lexicalScopeCapture - a set of lexically scoped variables to capture.\n * @public\n */\n// </docs>\nexport function qrl(chunkOrFn, symbol, lexicalScopeCapture = EMPTY_ARRAY) {\n    let chunk;\n    let symbolFn = null;\n    if (typeof chunkOrFn === 'string') {\n        chunk = chunkOrFn;\n    }\n    else if (typeof chunkOrFn === 'function') {\n        symbolFn = chunkOrFn;\n        let match;\n        const srcCode = String(chunkOrFn);\n        if ((match = srcCode.match(EXTRACT_IMPORT_PATH)) && match[2]) {\n            chunk = match[2];\n        }\n        else if ((match = srcCode.match(EXTRACT_SELF_IMPORT))) {\n            const ref = 'QWIK-SELF';\n            const frames = new Error(ref).stack.split('\\n');\n            const start = frames.findIndex((f) => f.includes(ref));\n            const frame = frames[start + 2];\n            match = frame.match(EXTRACT_FILE_NAME);\n            if (!match) {\n                chunk = 'main';\n            }\n            else {\n                chunk = match[1];\n            }\n        }\n        else {\n            throw new Error('Q-ERROR: Dynamic import not found: ' + srcCode);\n        }\n    }\n    else {\n        throw new Error('Q-ERROR: Unknown type argument: ' + chunkOrFn);\n    }\n    // Unwrap subscribers\n    if (Array.isArray(lexicalScopeCapture)) {\n        for (let i = 0; i < lexicalScopeCapture.length; i++) {\n            lexicalScopeCapture[i] = unwrapSubscriber(lexicalScopeCapture[i]);\n        }\n    }\n    return new QRLInternal(chunk, symbol, null, symbolFn, null, lexicalScopeCapture);\n}\nexport function runtimeQrl(symbol, lexicalScopeCapture = EMPTY_ARRAY) {\n    return new QRLInternal(RUNTIME_QRL, 's' + runtimeSymbolId++, symbol, null, null, lexicalScopeCapture);\n}\nexport function stringifyQRL(qrl, opts = {}) {\n    var _a;\n    const qrl_ = toInternalQRL(qrl);\n    const symbol = qrl_.symbol;\n    const platform = opts.platform;\n    const element = opts.element;\n    const chunk = platform ? (_a = platform.chunkForSymbol(symbol)) !== null && _a !== void 0 ? _a : qrl_.chunk : qrl_.chunk;\n    const parts = [chunk];\n    if (symbol && symbol !== 'default') {\n        parts.push('#', symbol);\n    }\n    const capture = qrl_.capture;\n    const captureRef = qrl_.captureRef;\n    if (opts.getObjId) {\n        if (captureRef && captureRef.length) {\n            const capture = captureRef.map(opts.getObjId);\n            parts.push(`[${capture.join(' ')}]`);\n        }\n    }\n    else if (capture && capture.length > 0) {\n        parts.push(`[${capture.join(' ')}]`);\n    }\n    const qrlString = parts.join('');\n    if (qrl_.chunk === RUNTIME_QRL && element) {\n        const qrls = element.__qrls__ || (element.__qrls__ = new Set());\n        qrls.add(qrl);\n    }\n    return qrlString;\n}\nexport function qrlToUrl(element, qrl) {\n    return new URL(stringifyQRL(qrl), getDocument(element).baseURI);\n}\n/**\n * `./chunk#symbol|symbol.propA.propB|[captures]\n */\nexport function parseQRL(qrl, el) {\n    const endIdx = qrl.length;\n    const hashIdx = indexOf(qrl, 0, '#');\n    const captureIdx = indexOf(qrl, hashIdx, '[');\n    const chunkEndIdx = Math.min(hashIdx, captureIdx);\n    const chunk = qrl.substring(0, chunkEndIdx);\n    const symbolStartIdx = hashIdx == endIdx ? hashIdx : hashIdx + 1;\n    const symbolEndIdx = captureIdx;\n    const symbol = symbolStartIdx == symbolEndIdx ? 'default' : qrl.substring(symbolStartIdx, symbolEndIdx);\n    const captureStartIdx = captureIdx;\n    const captureEndIdx = endIdx;\n    const capture = captureStartIdx === captureEndIdx\n        ? EMPTY_ARRAY\n        : qrl.substring(captureStartIdx + 1, captureEndIdx - 1).split(' ');\n    if (chunk === RUNTIME_QRL) {\n        logError(`Q-ERROR: '${qrl}' is runtime but no instance found on element.`);\n    }\n    const iQrl = new QRLInternal(chunk, symbol, null, null, capture, null);\n    if (el) {\n        iQrl.setContainer(el);\n    }\n    return iQrl;\n}\nfunction indexOf(text, startIdx, char) {\n    const endIdx = text.length;\n    const charIdx = text.indexOf(char, startIdx == endIdx ? 0 : startIdx);\n    return charIdx == -1 ? endIdx : charIdx;\n}\nexport function toQrlOrError(symbolOrQrl) {\n    if (!isQrl(symbolOrQrl)) {\n        if (typeof symbolOrQrl == 'function' || typeof symbolOrQrl == 'string') {\n            symbolOrQrl = runtimeQrl(symbolOrQrl);\n        }\n        else {\n            // TODO(misko): centralize\n            throw new Error(`Q-ERROR Only 'function's and 'string's are supported.`);\n        }\n    }\n    return symbolOrQrl;\n}\n//# sourceMappingURL=data:application/json;base64,", "import { toQrlOrError } from '../import/qrl';\nimport { $, implicit$FirstArg } from '../import/qrl.public';\nimport { qPropWriteQRL } from '../props/props-on';\nimport { newInvokeContext, useInvoke, useWaitOn } from '../use/use-core';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { ComponentScopedStyles, OnRenderProp } from '../util/markers';\nimport { styleKey } from './qrl-styles';\nimport { getContext, getProps } from '../props/props';\nimport { jsx } from '../render/jsx/jsx-runtime';\nimport { getDocument } from '../util/dom';\nimport { promiseAll } from '../util/promises';\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onUnmount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onUnmount instead)\n/**\n * A lazy-loadable reference to a component's destroy hook.\n *\n * Invoked when the component is destroyed (removed from render tree).\n *\n * @public\n */\n// </docs>\nexport function onUnmountQrl(unmountFn) {\n    throw new Error('IMPLEMENT: onUnmount' + unmountFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onUnmount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onUnmount instead)\n/**\n * A lazy-loadable reference to a component's destroy hook.\n *\n * Invoked when the component is destroyed (removed from render tree).\n *\n * @public\n */\n// </docs>\nexport const onUnmount$ = implicit$FirstArg(onUnmountQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onResume\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onResume instead)\n/**\n * A lazy-loadable reference to a component's on resume hook.\n *\n * The hook is eagerly invoked when the application resumes on the client. Because it is called\n * eagerly, this allows the component to resume even if no user interaction has taken place.\n *\n * @public\n */\n// </docs>\nexport function onResumeQrl(resumeFn) {\n    onWindow('load', resumeFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onHydrate\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onHydrate instead)\n/**\n * A lazy-loadable reference to a component's on resume hook.\n *\n * Invoked when the component's state is re-resumed from serialization. This allows the\n * component to do any work to re-activate itself.\n *\n * @public\n */\n// </docs>\nexport const onResume$ = implicit$FirstArg(onResumeQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#OnPause\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#OnPause instead)\n/**\n * A lazy-loadable reference to a component's on dehydrate hook.\n *\n * Invoked when the component's state is being serialized (dehydrated) into the DOM. This allows\n * the component to do last-minute clean-up before its state is serialized.\n *\n * Typically used with transient state.\n *\n * @public\n */\n// </docs>\nexport function onPauseQrl(dehydrateFn) {\n    throw new Error('IMPLEMENT: onPause' + dehydrateFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#OnPause\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#OnPause instead)\n/**\n * A lazy-loadable reference to a component's on dehydrate hook.\n *\n * Invoked when the component's state is being serialized (dehydrated) into the DOM. This allows\n * the component to do last-minute clean-up before its state is serialized.\n *\n * Typically used with transient state.\n *\n * @public\n */\n// </docs>\nexport const onPause$ = implicit$FirstArg(onPauseQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#on\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#on instead)\n/**\n * Register a listener on the current component's host element.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * See: `on`, `onWindow`, `onDocument`.\n *\n * @public\n */\n// </docs>\nexport function on(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on:${event}`, eventFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onDocument\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onDocument instead)\n/**\n * Register a listener on `document`.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * See: `on`, `onWindow`, `onDocument`.\n *\n * @public\n */\n// </docs>\nexport function onDocument(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on-document:${event}`, eventFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onWindow\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onWindow instead)\n/**\n * Register a listener on `window`.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * See: `on`, `onWindow`, `onDocument`.\n *\n * @public\n */\n// </docs>\nexport function onWindow(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on-window:${event}`, eventFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useStyles instead)\n/**\n * Refer to component styles.\n *\n * @alpha\n */\n// </docs>\nexport function useStylesQrl(styles) {\n    _useStyles(styles, false);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useStyles instead)\n/**\n * Refer to component styles.\n *\n * @alpha\n */\n// </docs>\nexport const useStyles$ = implicit$FirstArg(useStylesQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useScopedStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useScopedStyles instead)\n/**\n * @alpha\n */\n// </docs>\nexport function useScopedStylesQrl(styles) {\n    _useStyles(styles, true);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useScopedStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useScopedStyles instead)\n/**\n * @alpha\n */\n// </docs>\nexport const useScopedStyles$ = implicit$FirstArg(useScopedStylesQrl);\n/**\n * @public\n */\nexport function componentQrl(onMount, options = {}) {\n    var _a;\n    const tagName = (_a = options.tagName) !== null && _a !== void 0 ? _a : 'div';\n    // Return a QComponent Factory function.\n    return function QComponent(props, key) {\n        const onRenderFactory = async (hostElement) => {\n            const onMountQrl = toQrlOrError(onMount);\n            const onMountFn = await resolveQrl(hostElement, onMountQrl);\n            const ctx = getContext(hostElement);\n            const props = getProps(ctx);\n            const invokeCtx = newInvokeContext(getDocument(hostElement), hostElement, hostElement);\n            const renderQRL = (await useInvoke(invokeCtx, onMountFn, props));\n            return {\n                renderQRL,\n                waitOn: await promiseAll(invokeCtx.waitOn || []),\n            };\n        };\n        onRenderFactory.__brand__ = 'QRLFactory';\n        return jsx(tagName, Object.assign({ [OnRenderProp]: onRenderFactory }, props), key);\n    };\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#component\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#component instead)\n/**\n * Declare a Qwik component that can be used to create UI.\n *\n * Use `component` (and `component$`) to declare a Qwik component. A Qwik component is a special\n * kind of component that allows the Qwik framework to lazy load and execute the component\n * independently of other Qwik components as well as lazy load the component's life-cycle hooks\n * and event handlers.\n *\n * Side note: You can also declare regular (standard JSX) components that will have standard\n * synchronous behavior.\n *\n * Qwik component is a facade that describes how the component should be used without forcing the\n * implementation of the component to be eagerly loaded. A minimum Qwik definition consists of:\n *\n * - Component `onMount` method, which needs to return an\n * - `onRender` closure which constructs the component's JSX.\n *\n * ### Example:\n *\n * An example showing how to create a counter component:\n *\n * ```typescript\n * export const Counter = component$((props: { value?: number; step?: number }) => {\n *   const state = useStore({ count: props.value || 0 });\n *   return $(() => (\n *     <div>\n *       <span>{state.count}</span>\n *       <button onClick$={() => (state.count += props.step || 1)}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n * - `component$` is how a component gets declared.\n * - `{ value?: number; step?: number }` declares the public (props) interface of the component.\n * - `{ count: number }` declares the private (state) interface of the component.\n * - `onMount` closure: is used to create the data store (see: `useStore`);\n * - `$`: mark which parts of the component will be lazy-loaded. (see `$` for details.)\n *\n * The above can then be used like so:\n *\n * ```typescript\n * export const OtherComponent = component$(() => {\n *   return $(() => <Counter value={100} />);\n * });\n * ```\n *\n * See also: `component`, `onUnmount`, `onHydrate`, `OnPause`, `onHalt`, `onResume`, `on`,\n * `onDocument`, `onWindow`, `useStyles`, `useScopedStyles`\n *\n * @param onMount - Initialization closure used when the component is first created.\n * @param tagName - Optional components options. It can be used to set a custom tag-name to be\n * used for the component's host element.\n *\n * @public\n */\n// </docs>\nexport function component$(onMount, options) {\n    return componentQrl($(onMount), options);\n}\nfunction resolveQrl(hostElement, onMountQrl) {\n    return onMountQrl.symbolRef\n        ? Promise.resolve(onMountQrl.symbolRef)\n        : Promise.resolve(null).then(() => {\n            return onMountQrl.resolve(hostElement);\n        });\n}\nfunction _useStyles(styles, scoped) {\n    const styleQrl = toQrlOrError(styles);\n    const styleId = styleKey(styleQrl);\n    const hostElement = useHostElement();\n    if (scoped) {\n        hostElement.setAttribute(ComponentScopedStyles, styleId);\n    }\n    useWaitOn(styleQrl.resolve(hostElement).then((styleText) => {\n        const task = {\n            type: 'style',\n            scope: styleId,\n            content: scoped ? styleText.replace(/\uFFFD/g, styleId) : styleText,\n        };\n        return task;\n    }));\n}\n//# sourceMappingURL=data:application/json;base64,", "import { getDocument } from '../util/dom';\nimport { isDocument } from '../util/element';\nimport { qDev } from '../util/qdev';\nimport { snapshotState } from './store';\n/**\n * Serialize the current state of the application into DOM\n *\n * @public\n */\nexport function snapshot(elmOrDoc) {\n    const doc = getDocument(elmOrDoc);\n    const data = snapshotState(elmOrDoc);\n    const parentJSON = isDocument(elmOrDoc) ? elmOrDoc.body : elmOrDoc;\n    const script = doc.createElement('script');\n    script.setAttribute('type', 'qwik/json');\n    script.textContent = JSON.stringify(data, undefined, qDev ? '  ' : undefined);\n    parentJSON.appendChild(script);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUucHVibGljLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9vYmplY3Qvc3RvcmUucHVibGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDcEMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUV4Qzs7OztHQUlHO0FBQ0gsTUFBTSxVQUFVLFFBQVEsQ0FBQyxRQUE0QjtJQUNuRCxNQUFNLEdBQUcsR0FBRyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEMsTUFBTSxJQUFJLEdBQUcsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JDLE1BQU0sVUFBVSxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO0lBQ25FLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDM0MsTUFBTSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDekMsTUFBTSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzlFLFVBQVUsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDakMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldERvY3VtZW50IH0gZnJvbSAnLi4vdXRpbC9kb20nO1xuaW1wb3J0IHsgaXNEb2N1bWVudCB9IGZyb20gJy4uL3V0aWwvZWxlbWVudCc7XG5pbXBvcnQgeyBxRGV2IH0gZnJvbSAnLi4vdXRpbC9xZGV2JztcbmltcG9ydCB7IHNuYXBzaG90U3RhdGUgfSBmcm9tICcuL3N0b3JlJztcblxuLyoqXG4gKiBTZXJpYWxpemUgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGFwcGxpY2F0aW9uIGludG8gRE9NXG4gKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gc25hcHNob3QoZWxtT3JEb2M6IEVsZW1lbnQgfCBEb2N1bWVudCkge1xuICBjb25zdCBkb2MgPSBnZXREb2N1bWVudChlbG1PckRvYyk7XG4gIGNvbnN0IGRhdGEgPSBzbmFwc2hvdFN0YXRlKGVsbU9yRG9jKTtcbiAgY29uc3QgcGFyZW50SlNPTiA9IGlzRG9jdW1lbnQoZWxtT3JEb2MpID8gZWxtT3JEb2MuYm9keSA6IGVsbU9yRG9jO1xuICBjb25zdCBzY3JpcHQgPSBkb2MuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gIHNjcmlwdC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAncXdpay9qc29uJyk7XG4gIHNjcmlwdC50ZXh0Q29udGVudCA9IEpTT04uc3RyaW5naWZ5KGRhdGEsIHVuZGVmaW5lZCwgcURldiA/ICcgICcgOiB1bmRlZmluZWQpO1xuICBwYXJlbnRKU09OLmFwcGVuZENoaWxkKHNjcmlwdCk7XG59XG4iXX0=", "import { getContext, getProps } from '../props/props';\nimport { getInvokeContext } from './use-core';\nimport { useHostElement } from './use-host-element.public';\nexport function useProps() {\n    const ctx = getInvokeContext();\n    let props = ctx.props;\n    if (!props) {\n        props = ctx.props = getProps(getContext(useHostElement()));\n    }\n    return props;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXByb3BzLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1wcm9wcy5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDOUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRTNELE1BQU0sVUFBVSxRQUFRO0lBQ3RCLE1BQU0sR0FBRyxHQUFHLGdCQUFnQixFQUFFLENBQUM7SUFDL0IsSUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztJQUN0QixJQUFJLENBQUMsS0FBSyxFQUFFO1FBQ1YsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDNUQ7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFByb3BzIH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMucHVibGljJztcbmltcG9ydCB7IGdldENvbnRleHQsIGdldFByb3BzIH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuaW1wb3J0IHsgZ2V0SW52b2tlQ29udGV4dCB9IGZyb20gJy4vdXNlLWNvcmUnO1xuaW1wb3J0IHsgdXNlSG9zdEVsZW1lbnQgfSBmcm9tICcuL3VzZS1ob3N0LWVsZW1lbnQucHVibGljJztcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVByb3BzKCk6IFByb3BzIHtcbiAgY29uc3QgY3R4ID0gZ2V0SW52b2tlQ29udGV4dCgpO1xuICBsZXQgcHJvcHMgPSBjdHgucHJvcHM7XG4gIGlmICghcHJvcHMpIHtcbiAgICBwcm9wcyA9IGN0eC5wcm9wcyA9IGdldFByb3BzKGdldENvbnRleHQodXNlSG9zdEVsZW1lbnQoKSkpO1xuICB9XG4gIHJldHVybiBwcm9wcztcbn1cbiJdfQ==", "import { getContext, getEvent } from '../props/props';\nimport { newInvokeContext, useInvoke } from '../use/use-core';\nimport { getDocument } from '../util/dom';\nimport { logError } from '../util/log';\nconst ON_WATCH = 'on:qWatch';\nexport function registerOnWatch(element, props, watchFnQrl) {\n    props[ON_WATCH] = watchFnQrl;\n    invokeWatchFn(element, watchFnQrl);\n}\nconst cleanupFnMap = new Map();\nexport async function invokeWatchFn(element, watchFnQrl) {\n    const watchFn = await watchFnQrl.resolve(element);\n    const previousCleanupFn = cleanupFnMap.get(watchFn);\n    cleanupFnMap.delete(watchFn);\n    if (isCleanupFn(previousCleanupFn)) {\n        try {\n            previousCleanupFn();\n        }\n        catch (e) {\n            // TODO(misko): Centralize error handling\n            logError(e);\n        }\n    }\n    throw new Error('TO IMPLEMENT');\n}\nfunction isCleanupFn(value) {\n    return typeof value === 'function';\n}\nexport async function notifyWatchers(hostElement, qObjectId, propName) {\n    const ctx = getContext(hostElement);\n    const onWatch = getEvent(ctx, 'on:qWatch');\n    if (onWatch) {\n        try {\n            // TODO\n            const context = newInvokeContext(getDocument(hostElement), hostElement);\n            await useInvoke(context, onWatch, qObjectId, propName);\n        }\n        catch (e) {\n            logError(e);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2F0Y2guanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3dhdGNoL3dhdGNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFdEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFNBQVMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzlELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQU92QyxNQUFNLFFBQVEsR0FBRyxXQUFXLENBQUM7QUFFN0IsTUFBTSxVQUFVLGVBQWUsQ0FBQyxPQUFnQixFQUFFLEtBQVksRUFBRSxVQUFnQztJQUM5RixLQUFLLENBQUMsUUFBUSxDQUFDLEdBQUcsVUFBVSxDQUFDO0lBQzdCLGFBQWEsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDckMsQ0FBQztBQUVELE1BQU0sWUFBWSxHQUFHLElBQUksR0FBRyxFQUFzQixDQUFDO0FBRW5ELE1BQU0sQ0FBQyxLQUFLLFVBQVUsYUFBYSxDQUFDLE9BQWdCLEVBQUUsVUFBZ0M7SUFDcEYsTUFBTSxPQUFPLEdBQUcsTUFBTSxVQUFVLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2xELE1BQU0saUJBQWlCLEdBQUcsWUFBWSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNwRCxZQUFZLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzdCLElBQUksV0FBVyxDQUFDLGlCQUFpQixDQUFDLEVBQUU7UUFDbEMsSUFBSTtZQUNGLGlCQUFpQixFQUFFLENBQUM7U0FDckI7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLHlDQUF5QztZQUN6QyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDYjtLQUNGO0lBQ0QsTUFBTSxJQUFJLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUNsQyxDQUFDO0FBQ0QsU0FBUyxXQUFXLENBQUMsS0FBVTtJQUM3QixPQUFPLE9BQU8sS0FBSyxLQUFLLFVBQVUsQ0FBQztBQUNyQyxDQUFDO0FBRUQsTUFBTSxDQUFDLEtBQUssVUFBVSxjQUFjLENBQ2xDLFdBQW9CLEVBQ3BCLFNBQWlCLEVBQ2pCLFFBQWdCO0lBRWhCLE1BQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNwQyxNQUFNLE9BQU8sR0FBMEIsUUFBUSxDQUFDLEdBQUcsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNsRSxJQUFJLE9BQU8sRUFBRTtRQUNYLElBQUk7WUFDRixPQUFPO1lBQ1AsTUFBTSxPQUFPLEdBQUcsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1lBQ3hFLE1BQU0sU0FBUyxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQ3hEO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDYjtLQUNGO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgUVJMSW50ZXJuYWwgfSBmcm9tICcuLi9pbXBvcnQvcXJsLWNsYXNzJztcbmltcG9ydCB7IGdldENvbnRleHQsIGdldEV2ZW50IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuaW1wb3J0IHR5cGUgeyBQcm9wcyB9IGZyb20gJy4uL3Byb3BzL3Byb3BzLnB1YmxpYyc7XG5pbXBvcnQgeyBuZXdJbnZva2VDb250ZXh0LCB1c2VJbnZva2UgfSBmcm9tICcuLi91c2UvdXNlLWNvcmUnO1xuaW1wb3J0IHsgZ2V0RG9jdW1lbnQgfSBmcm9tICcuLi91dGlsL2RvbSc7XG5pbXBvcnQgeyBsb2dFcnJvciB9IGZyb20gJy4uL3V0aWwvbG9nJztcbmltcG9ydCB0eXBlIHsgT2JzZXJ2ZXIgfSBmcm9tICcuL3dhdGNoLnB1YmxpYyc7XG5cbmV4cG9ydCB0eXBlIENsZWFudXBGbiA9ICgpID0+IHZvaWQ7XG5leHBvcnQgdHlwZSBXYXRjaEZuID0gKG9iczogT2JzZXJ2ZXIpID0+IHVua25vd24gfCBDbGVhbnVwRm47XG5leHBvcnQgdHlwZSBPbldhdGNoSGFuZGxlciA9IChxT2JqZWN0SWQ6IHN0cmluZywgcHJvcE5hbWU6IHN0cmluZykgPT4gUHJvbWlzZTx1bmtub3duPjtcblxuY29uc3QgT05fV0FUQ0ggPSAnb246cVdhdGNoJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyT25XYXRjaChlbGVtZW50OiBFbGVtZW50LCBwcm9wczogUHJvcHMsIHdhdGNoRm5Rcmw6IFFSTEludGVybmFsPFdhdGNoRm4+KSB7XG4gIHByb3BzW09OX1dBVENIXSA9IHdhdGNoRm5Rcmw7XG4gIGludm9rZVdhdGNoRm4oZWxlbWVudCwgd2F0Y2hGblFybCk7XG59XG5cbmNvbnN0IGNsZWFudXBGbk1hcCA9IG5ldyBNYXA8V2F0Y2hGbiwgQ2xlYW51cEZuPigpO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW52b2tlV2F0Y2hGbihlbGVtZW50OiBFbGVtZW50LCB3YXRjaEZuUXJsOiBRUkxJbnRlcm5hbDxXYXRjaEZuPikge1xuICBjb25zdCB3YXRjaEZuID0gYXdhaXQgd2F0Y2hGblFybC5yZXNvbHZlKGVsZW1lbnQpO1xuICBjb25zdCBwcmV2aW91c0NsZWFudXBGbiA9IGNsZWFudXBGbk1hcC5nZXQod2F0Y2hGbik7XG4gIGNsZWFudXBGbk1hcC5kZWxldGUod2F0Y2hGbik7XG4gIGlmIChpc0NsZWFudXBGbihwcmV2aW91c0NsZWFudXBGbikpIHtcbiAgICB0cnkge1xuICAgICAgcHJldmlvdXNDbGVhbnVwRm4oKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAvLyBUT0RPKG1pc2tvKTogQ2VudHJhbGl6ZSBlcnJvciBoYW5kbGluZ1xuICAgICAgbG9nRXJyb3IoZSk7XG4gICAgfVxuICB9XG4gIHRocm93IG5ldyBFcnJvcignVE8gSU1QTEVNRU5UJyk7XG59XG5mdW5jdGlvbiBpc0NsZWFudXBGbih2YWx1ZTogYW55KTogdmFsdWUgaXMgQ2xlYW51cEZuIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG5vdGlmeVdhdGNoZXJzKFxuICBob3N0RWxlbWVudDogRWxlbWVudCxcbiAgcU9iamVjdElkOiBzdHJpbmcsXG4gIHByb3BOYW1lOiBzdHJpbmdcbik6IFByb21pc2U8dm9pZD4ge1xuICBjb25zdCBjdHggPSBnZXRDb250ZXh0KGhvc3RFbGVtZW50KTtcbiAgY29uc3Qgb25XYXRjaDogbnVsbCB8IE9uV2F0Y2hIYW5kbGVyID0gZ2V0RXZlbnQoY3R4LCAnb246cVdhdGNoJyk7XG4gIGlmIChvbldhdGNoKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIFRPRE9cbiAgICAgIGNvbnN0IGNvbnRleHQgPSBuZXdJbnZva2VDb250ZXh0KGdldERvY3VtZW50KGhvc3RFbGVtZW50KSwgaG9zdEVsZW1lbnQpO1xuICAgICAgYXdhaXQgdXNlSW52b2tlKGNvbnRleHQsIG9uV2F0Y2gsIHFPYmplY3RJZCwgcHJvcE5hbWUpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGxvZ0Vycm9yKGUpO1xuICAgIH1cbiAgfVxufVxuIl19", "import { implicit$FirstArg } from '../import/qrl.public';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { useProps } from '../use/use-props.public';\nimport { registerOnWatch } from './watch';\n// <docs markdown=\"https://hackmd.io/_Kl9br9tT8OB-1Dv8uR4Kg#onWatch\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2F_Kl9br9tT8OB-1Dv8uR4Kg%3Fboth#onWatch instead)\n/**\n * Reruns the `watchFn` when the observed inputs change.\n *\n * Use `onWatch` to observe changes on a set of inputs, and then re-execute the `watchFn` when\n * those inputs change.\n *\n * The `watchFn` only executes if the observed inputs change. To observe the inputs use the `obs`\n * function to wrap property reads. This creates subscriptions which will trigger the `watchFn`\n * to re-run.\n *\n * See: `Observer`\n *\n * @public\n *\n * ## Example\n *\n * The `onWatch` function is used to observe the `state.count` property. Any changes to the\n * `state.count` cause the `watchFn` to execute which in turn updates the `state.doubleCount` to\n * the double of `state.count`.\n *\n * ```typescript\n * export const MyComp = component$(() => {\n *   const store = useStore({ count: 0, doubleCount: 0 });\n *   onWatch$((obs) => {\n *     store.doubleCount = 2 * obs(store).count;\n *   });\n *   return $(() => (\n *     <div>\n *       <span>\n *         {store.count} / {store.doubleCount}\n *       </span>\n *       <button onClick$={() => store.count++}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n *\n * @param watch - Function which should be re-executed when changes to the inputs are detected\n * @public\n */\n// </docs>\nexport function onWatchQrl(watchFn) {\n    registerOnWatch(useHostElement(), useProps(), watchFn);\n}\n// <docs markdown=\"https://hackmd.io/_Kl9br9tT8OB-1Dv8uR4Kg#onWatch\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2F_Kl9br9tT8OB-1Dv8uR4Kg%3Fboth#onWatch instead)\n/**\n * Reruns the `watchFn` when the observed inputs change.\n *\n * Use `onWatch` to observe changes on a set of inputs, and then re-execute the `watchFn` when\n * those inputs change.\n *\n * The `watchFn` only executes if the observed inputs change. To observe the inputs use the `obs`\n * function to wrap property reads. This creates subscriptions which will trigger the `watchFn`\n * to re-run.\n *\n * See: `Observer`\n *\n * @public\n *\n * ## Example\n *\n * The `onWatch` function is used to observe the `state.count` property. Any changes to the\n * `state.count` cause the `watchFn` to execute which in turn updates the `state.doubleCount` to\n * the double of `state.count`.\n *\n * ```typescript\n * export const MyComp = component$(() => {\n *   const store = useStore({ count: 0, doubleCount: 0 });\n *   onWatch$((obs) => {\n *     store.doubleCount = 2 * obs(store).count;\n *   });\n *   return $(() => (\n *     <div>\n *       <span>\n *         {store.count} / {store.doubleCount}\n *       </span>\n *       <button onClick$={() => store.count++}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n *\n * @param watch - Function which should be re-executed when changes to the inputs are detected\n * @public\n */\n// </docs>\nexport const onWatch$ = implicit$FirstArg(onWatchQrl);\n//# sourceMappingURL=data:application/json;base64,", "/**\n * Use to render asynchronous (`Promise`) values.\n *\n * A `Promise` does not allow a synchronous examination of its state. For this reason\n * `<Async>` provides a mechanism to render pending, resolved and error state of a `Promise`.\n * `<Async>` provides that mechanism by registering a `then` method with the `Promise` and\n * providing callbacks hooks for `pending`, `resolved` and `rejected` state of the promise.\n *\n * Additionally, `<Async>` automatically re-renders the portion of the view when the status\n * of the `Promise` changes.\n *\n * `<Async>` provides three callbacks:\n * - `onPending`: invoked initially to provide a way for the template to provide output while\n *   waiting for the `promise` to resolve.\n * - `onResolved`: invoked when the `promise` is `resolved` allowing the template to generate\n *   output using the `resolved` value.\n * - `onError`: invoked when the `promise` is `rejected` allowing the template to generate\n *   error output describing the problem.\n *\n * The `<Async>` can be used in two ways, which are semantically equivalent and are provided\n * based on the developer needs/preferences.\n *\n * ### Using multiple callbacks\n *\n * ```typescript\n * <Async\n *   resolve={Promise.resolve('some value')}\n *   onPending={() => <span>loading...</span>}\n *   onResolved={(value) => <span>{value}</span>}\n *   onError={(rejection) => <pre>{rejection}</pre>}\n * />\n * ```\n *\n * ### Using single callbacks\n *\n * ```typescript\n * <Async resolve={Promise.resolve('some value')}>\n *   {(response) => {\n *     if (response.isPending) return <span>loading...</span>;\n *     if (response.isResolved) return <span>{response.value}</span>;\n *     if (response.isRejected) return <pre>{response.rejection}</pre>;\n *   }}\n * </Async>\n * ```\n *\n * @param onPending - invoked initially to provide a way for the template to provide output while\n *   waiting for the `promise` to resolve.\n * @param onResolved - invoked when the `promise` is `resolved` allowing the template to generate\n *   output using the `resolved` value.\n * @param onError - invoked when the `promise` is `rejected` allowing the template to generate\n *   error output describing the problem.\n * @param children -  a single callback function for `onPending`, `onResolved` and `onError`.\n *   (Use either `children` or `onPending`, `onResolved` and `onError`, but not both.)\n *   See \"Using multiple callbacks\" vs \"Using single callbacks\" above.\n *\n * @public\n */\nexport function Async(props) {\n    // TODO(misko): implement onPending/onResolved/onError\n    if (!('children' in props)) {\n        throw new Error('IMPLEMENT');\n    }\n    const children = [props.children].flat()[0];\n    const renderFn = typeof children == 'function' ? children : null;\n    const promiseValue = {\n        isPending: true,\n        isResolved: false,\n        value: undefined,\n        isRejected: false,\n        rejection: undefined,\n    };\n    let pending;\n    const jsxPromise = new Promise((resolve, reject) => {\n        pending = renderFn && renderFn(promiseValue);\n        Promise.resolve(props.resolve).then((value) => {\n            promiseValue.isPending = false;\n            promiseValue.isResolved = true;\n            promiseValue.value = value;\n            return resolve(renderFn && renderFn(promiseValue));\n        }, (error) => {\n            promiseValue.isPending = false;\n            promiseValue.isRejected = true;\n            promiseValue.rejection = error;\n            return reject(renderFn && renderFn(promiseValue));\n        });\n    });\n    jsxPromise.whilePending = pending;\n    return jsxPromise;\n}\n//# sourceMappingURL=data:application/json;base64,", "/* eslint-disable */\n/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { flattenArray } from '../../util/array';\nimport { EMPTY_ARRAY } from '../../util/flyweight';\nimport { JSXNodeImpl } from './jsx-runtime';\n/**\n * @public\n */\nexport function h(type, props, ...children) {\n    // Using legacy h() jsx transform and morphing it\n    // so it can use the modern vdom structure\n    // https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html\n    // https://www.typescriptlang.org/tsconfig#jsxImportSource\n    const normalizedProps = {\n        children: arguments.length > 2 ? flattenArray(children) : EMPTY_ARRAY,\n    };\n    let key;\n    let i;\n    for (i in props) {\n        if (i == 'key')\n            key = props[i];\n        else\n            normalizedProps[i] = props[i];\n    }\n    return new JSXNodeImpl(type, normalizedProps, key);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcmVuZGVyL2pzeC9mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQjs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJNUM7O0dBRUc7QUFDSCxNQUFNLFVBQVUsQ0FBQyxDQUNmLElBQXVDLEVBQ3ZDLEtBQW1CLEVBQ25CLEdBQUcsUUFBZTtJQUVsQixpREFBaUQ7SUFDakQsMENBQTBDO0lBQzFDLDZFQUE2RTtJQUM3RSwwREFBMEQ7SUFFMUQsTUFBTSxlQUFlLEdBQVE7UUFDM0IsUUFBUSxFQUFFLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVc7S0FDdEUsQ0FBQztJQUVGLElBQUksR0FBUSxDQUFDO0lBQ2IsSUFBSSxDQUFNLENBQUM7SUFFWCxLQUFLLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDZixJQUFJLENBQUMsSUFBSSxLQUFLO1lBQUUsR0FBRyxHQUFJLEtBQTZCLENBQUMsQ0FBQyxDQUFDLENBQUM7O1lBQ25ELGVBQWUsQ0FBQyxDQUFDLENBQUMsR0FBSSxLQUE2QixDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzdEO0lBRUQsT0FBTyxJQUFJLFdBQVcsQ0FBQyxJQUFJLEVBQUUsZUFBZSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ3JELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBmbGF0dGVuQXJyYXkgfSBmcm9tICcuLi8uLi91dGlsL2FycmF5JztcbmltcG9ydCB7IEVNUFRZX0FSUkFZIH0gZnJvbSAnLi4vLi4vdXRpbC9mbHl3ZWlnaHQnO1xuaW1wb3J0IHsgSlNYTm9kZUltcGwgfSBmcm9tICcuL2pzeC1ydW50aW1lJztcbmltcG9ydCB0eXBlIHsgUXdpa0pTWCB9IGZyb20gJy4vdHlwZXMvanN4LXF3aWsnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCwgSlNYTm9kZSB9IGZyb20gJy4vdHlwZXMvanN4LW5vZGUnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGg8UFJPUFMgZXh0ZW5kcyB7fSA9IHt9PihcbiAgdHlwZTogc3RyaW5nIHwgRnVuY3Rpb25Db21wb25lbnQ8UFJPUFM+LFxuICBwcm9wczogUFJPUFMgfCBudWxsLFxuICAuLi5jaGlsZHJlbjogYW55W11cbik6IEpTWE5vZGUge1xuICAvLyBVc2luZyBsZWdhY3kgaCgpIGpzeCB0cmFuc2Zvcm0gYW5kIG1vcnBoaW5nIGl0XG4gIC8vIHNvIGl0IGNhbiB1c2UgdGhlIG1vZGVybiB2ZG9tIHN0cnVjdHVyZVxuICAvLyBodHRwczovL3JlYWN0anMub3JnL2Jsb2cvMjAyMC8wOS8yMi9pbnRyb2R1Y2luZy10aGUtbmV3LWpzeC10cmFuc2Zvcm0uaHRtbFxuICAvLyBodHRwczovL3d3dy50eXBlc2NyaXB0bGFuZy5vcmcvdHNjb25maWcjanN4SW1wb3J0U291cmNlXG5cbiAgY29uc3Qgbm9ybWFsaXplZFByb3BzOiBhbnkgPSB7XG4gICAgY2hpbGRyZW46IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gZmxhdHRlbkFycmF5KGNoaWxkcmVuKSA6IEVNUFRZX0FSUkFZLFxuICB9O1xuXG4gIGxldCBrZXk6IGFueTtcbiAgbGV0IGk6IGFueTtcblxuICBmb3IgKGkgaW4gcHJvcHMpIHtcbiAgICBpZiAoaSA9PSAna2V5Jykga2V5ID0gKHByb3BzIGFzIFJlY29yZDxzdHJpbmcsIGFueT4pW2ldO1xuICAgIGVsc2Ugbm9ybWFsaXplZFByb3BzW2ldID0gKHByb3BzIGFzIFJlY29yZDxzdHJpbmcsIGFueT4pW2ldO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBKU1hOb2RlSW1wbCh0eXBlLCBub3JtYWxpemVkUHJvcHMsIGtleSk7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZGVjbGFyZSBuYW1lc3BhY2UgaCB7XG4gIGV4cG9ydCBmdW5jdGlvbiBoKHR5cGU6IGFueSk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogTm9kZSwgZGF0YTogYW55KTogSlNYTm9kZTxhbnk+O1xuICBleHBvcnQgZnVuY3Rpb24gaCh0eXBlOiBhbnksIHRleHQ6IHN0cmluZyk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogYW55LCBjaGlsZHJlbjogQXJyYXk8YW55Pik6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogYW55LCBkYXRhOiBhbnksIHRleHQ6IHN0cmluZyk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgoXG4gICAgdHlwZTogYW55LFxuICAgIGRhdGE6IGFueSxcbiAgICBjaGlsZHJlbjogQXJyYXk8SlNYTm9kZTxhbnk+IHwgdW5kZWZpbmVkIHwgbnVsbD5cbiAgKTogSlNYTm9kZTxhbnk+O1xuICBleHBvcnQgZnVuY3Rpb24gaChzZWw6IGFueSwgZGF0YTogYW55IHwgbnVsbCwgY2hpbGRyZW46IEpTWE5vZGU8YW55Pik6IEpTWE5vZGU8YW55PjtcblxuICBleHBvcnQgbmFtZXNwYWNlIEpTWCB7XG4gICAgZXhwb3J0IGludGVyZmFjZSBFbGVtZW50IGV4dGVuZHMgUXdpa0pTWC5FbGVtZW50IHt9XG4gICAgZXhwb3J0IGludGVyZmFjZSBJbnRyaW5zaWNBdHRyaWJ1dGVzIGV4dGVuZHMgUXdpa0pTWC5JbnRyaW5zaWNBdHRyaWJ1dGVzIHt9XG4gICAgZXhwb3J0IGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyBleHRlbmRzIFF3aWtKU1guSW50cmluc2ljRWxlbWVudHMge31cbiAgICBleHBvcnQgaW50ZXJmYWNlIEVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSB7XG4gICAgICBjaGlsZHJlbj86IGFueTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==", "import { jsx } from './jsx-runtime';\n/**\n * @public\n */\nexport const Slot = (props) => {\n    const hasChildren = props.children || (Array.isArray(props.children) && props.children.length > 0);\n    const newChildrem = !hasChildren\n        ? []\n        : jsx('q:fallback', {\n            children: props.children,\n        });\n    return jsx('q:slot', {\n        name: props.name,\n        children: newChildrem,\n    }, props.name);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xvdC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3JlbmRlci9qc3gvc2xvdC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdwQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLElBQUksR0FHWixDQUFDLEtBQUssRUFBRSxFQUFFO0lBQ2IsTUFBTSxXQUFXLEdBQ2YsS0FBSyxDQUFDLFFBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2pGLE1BQU0sV0FBVyxHQUFHLENBQUMsV0FBVztRQUM5QixDQUFDLENBQUMsRUFBRTtRQUNKLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFO1lBQ2hCLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUTtTQUN6QixDQUFDLENBQUM7SUFFUCxPQUFPLEdBQUcsQ0FDUixRQUFRLEVBQ1I7UUFDRSxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUk7UUFDaEIsUUFBUSxFQUFFLFdBQVc7S0FDdEIsRUFDRCxLQUFLLENBQUMsSUFBSSxDQUNYLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBqc3ggfSBmcm9tICcuL2pzeC1ydW50aW1lJztcbmltcG9ydCB0eXBlIHsgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tICcuL3R5cGVzL2pzeC1ub2RlJztcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBjb25zdCBTbG90OiBGdW5jdGlvbkNvbXBvbmVudDx7XG4gIG5hbWU/OiBzdHJpbmc7XG4gIGNoaWxkcmVuPzogYW55O1xufT4gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgaGFzQ2hpbGRyZW4gPVxuICAgIHByb3BzLmNoaWxkcmVuIHx8IChBcnJheS5pc0FycmF5KHByb3BzLmNoaWxkcmVuKSAmJiBwcm9wcy5jaGlsZHJlbi5sZW5ndGggPiAwKTtcbiAgY29uc3QgbmV3Q2hpbGRyZW0gPSAhaGFzQ2hpbGRyZW5cbiAgICA/IFtdXG4gICAgOiBqc3goJ3E6ZmFsbGJhY2snLCB7XG4gICAgICAgIGNoaWxkcmVuOiBwcm9wcy5jaGlsZHJlbixcbiAgICAgIH0pO1xuXG4gIHJldHVybiBqc3goXG4gICAgJ3E6c2xvdCcsXG4gICAge1xuICAgICAgbmFtZTogcHJvcHMubmFtZSxcbiAgICAgIGNoaWxkcmVuOiBuZXdDaGlsZHJlbSxcbiAgICB9LFxuICAgIHByb3BzLm5hbWVcbiAgKTtcbn07XG4iXX0=", "/**\n * @alpha\n */\nexport const version = globalThis.QWIK_VERSION;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdmVyc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBSSxVQUFrQixDQUFDLFlBQXNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhbHBoYVxuICovXG5leHBvcnQgY29uc3QgdmVyc2lvbiA9IChnbG9iYWxUaGlzIGFzIGFueSkuUVdJS19WRVJTSU9OIGFzIHN0cmluZztcbiJdfQ==", "import { isDocument } from '../util/element';\nimport { executeContext, printRenderStats } from './cursor';\nimport { isJSXNode, jsx, processNode } from './jsx/jsx-runtime';\nimport { visitJsxNode } from './render';\nimport { then } from '../util/promises';\nimport { getRenderingState } from './notify-render';\nimport { getDocument } from '../util/dom';\nimport { qDev, qTest } from '../util/qdev';\nimport { resumeIfNeeded } from '../props/props';\nimport { version } from '../version';\nimport { QContainerAttr } from '../util/markers';\n/**\n * Render JSX.\n *\n * Use this method to render JSX. This function does reconciling which means\n * it always tries to reuse what is already in the DOM (rather then destroy and\n * recrate content.)\n *\n * @param parent - Element which will act as a parent to `jsxNode`. When\n *     possible the rendering will try to reuse existing nodes.\n * @param jsxNode - JSX to render\n * @public\n */\nexport function render(parent, jsxNode) {\n    // If input is not JSX, convert it\n    if (!isJSXNode(jsxNode)) {\n        jsxNode = jsx(jsxNode, null);\n    }\n    const doc = getDocument(parent);\n    const containerEl = getElement(parent);\n    resumeIfNeeded(containerEl);\n    injectQVersion(containerEl);\n    const ctx = {\n        doc,\n        globalState: getRenderingState(containerEl),\n        hostElements: new Set(),\n        operations: [],\n        roots: [parent],\n        component: undefined,\n        containerEl,\n        perf: {\n            visited: 0,\n            timing: [],\n        },\n    };\n    return then(visitJsxNode(ctx, parent, processNode(jsxNode), false), () => {\n        executeContext(ctx);\n        if (!qTest) {\n            injectQwikSlotCSS(parent);\n        }\n        if (qDev) {\n            if (typeof window !== 'undefined' && window.document != null) {\n                printRenderStats(ctx);\n            }\n        }\n        return ctx;\n    });\n}\nexport function injectQwikSlotCSS(docOrElm) {\n    const doc = getDocument(docOrElm);\n    const element = isDocument(docOrElm) ? docOrElm.head : docOrElm;\n    const style = doc.createElement('style');\n    style.setAttribute('id', 'qwik/base-styles');\n    style.textContent = `q\\\\:slot{display:contents}q\\\\:fallback{display:none}q\\\\:fallback:last-child{display:contents}`;\n    element.insertBefore(style, element.firstChild);\n}\nexport function getElement(docOrElm) {\n    return isDocument(docOrElm) ? docOrElm.documentElement : docOrElm;\n}\nexport function injectQVersion(containerEl) {\n    containerEl.setAttribute('q:version', version || '');\n    containerEl.setAttribute(QContainerAttr, '');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcmVuZGVyL3JlbmRlci5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLEVBQWlCLE1BQU0sVUFBVSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWhFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFeEMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3hDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUMsT0FBTyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDM0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRWpEOzs7Ozs7Ozs7OztHQVdHO0FBQ0gsTUFBTSxVQUFVLE1BQU0sQ0FDcEIsTUFBMEIsRUFDMUIsT0FBa0Q7SUFFbEQsa0NBQWtDO0lBQ2xDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDdkIsT0FBTyxHQUFHLEdBQUcsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDOUI7SUFDRCxNQUFNLEdBQUcsR0FBRyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEMsTUFBTSxXQUFXLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM1QixjQUFjLENBQUMsV0FBVyxDQUFDLENBQUM7SUFFNUIsTUFBTSxHQUFHLEdBQWtCO1FBQ3pCLEdBQUc7UUFDSCxXQUFXLEVBQUUsaUJBQWlCLENBQUMsV0FBVyxDQUFDO1FBQzNDLFlBQVksRUFBRSxJQUFJLEdBQUcsRUFBRTtRQUN2QixVQUFVLEVBQUUsRUFBRTtRQUNkLEtBQUssRUFBRSxDQUFDLE1BQWlCLENBQUM7UUFDMUIsU0FBUyxFQUFFLFNBQVM7UUFDcEIsV0FBVztRQUNYLElBQUksRUFBRTtZQUNKLE9BQU8sRUFBRSxDQUFDO1lBQ1YsTUFBTSxFQUFFLEVBQUU7U0FDWDtLQUNGLENBQUM7SUFFRixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLE1BQWlCLEVBQUUsV0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEtBQUssQ0FBQyxFQUFFLEdBQUcsRUFBRTtRQUNsRixjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDcEIsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNWLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQzNCO1FBRUQsSUFBSSxJQUFJLEVBQUU7WUFDUixJQUFJLE9BQU8sTUFBTSxLQUFLLFdBQVcsSUFBSSxNQUFNLENBQUMsUUFBUSxJQUFJLElBQUksRUFBRTtnQkFDNUQsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDdkI7U0FDRjtRQUNELE9BQU8sR0FBRyxDQUFDO0lBQ2IsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsTUFBTSxVQUFVLGlCQUFpQixDQUFDLFFBQTRCO0lBQzVELE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsQyxNQUFNLE9BQU8sR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztJQUNoRSxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3pDLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLGtCQUFrQixDQUFDLENBQUM7SUFDN0MsS0FBSyxDQUFDLFdBQVcsR0FBRywrRkFBK0YsQ0FBQztJQUNwSCxPQUFPLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDbEQsQ0FBQztBQUVELE1BQU0sVUFBVSxVQUFVLENBQUMsUUFBNEI7SUFDckQsT0FBTyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztBQUNwRSxDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxXQUFvQjtJQUNqRCxXQUFXLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxPQUFPLElBQUksRUFBRSxDQUFDLENBQUM7SUFDckQsV0FBVyxDQUFDLFlBQVksQ0FBQyxjQUFjLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDL0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzRG9jdW1lbnQgfSBmcm9tICcuLi91dGlsL2VsZW1lbnQnO1xuaW1wb3J0IHsgZXhlY3V0ZUNvbnRleHQsIHByaW50UmVuZGVyU3RhdHMsIFJlbmRlckNvbnRleHQgfSBmcm9tICcuL2N1cnNvcic7XG5pbXBvcnQgeyBpc0pTWE5vZGUsIGpzeCwgcHJvY2Vzc05vZGUgfSBmcm9tICcuL2pzeC9qc3gtcnVudGltZSc7XG5pbXBvcnQgdHlwZSB7IEpTWE5vZGUsIEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9qc3gvdHlwZXMvanN4LW5vZGUnO1xuaW1wb3J0IHsgdmlzaXRKc3hOb2RlIH0gZnJvbSAnLi9yZW5kZXInO1xuaW1wb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuaW1wb3J0IHsgdGhlbiB9IGZyb20gJy4uL3V0aWwvcHJvbWlzZXMnO1xuaW1wb3J0IHsgZ2V0UmVuZGVyaW5nU3RhdGUgfSBmcm9tICcuL25vdGlmeS1yZW5kZXInO1xuaW1wb3J0IHsgZ2V0RG9jdW1lbnQgfSBmcm9tICcuLi91dGlsL2RvbSc7XG5pbXBvcnQgeyBxRGV2LCBxVGVzdCB9IGZyb20gJy4uL3V0aWwvcWRldic7XG5pbXBvcnQgeyByZXN1bWVJZk5lZWRlZCB9IGZyb20gJy4uL3Byb3BzL3Byb3BzJztcbmltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuLi92ZXJzaW9uJztcbmltcG9ydCB7IFFDb250YWluZXJBdHRyIH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcblxuLyoqXG4gKiBSZW5kZXIgSlNYLlxuICpcbiAqIFVzZSB0aGlzIG1ldGhvZCB0byByZW5kZXIgSlNYLiBUaGlzIGZ1bmN0aW9uIGRvZXMgcmVjb25jaWxpbmcgd2hpY2ggbWVhbnNcbiAqIGl0IGFsd2F5cyB0cmllcyB0byByZXVzZSB3aGF0IGlzIGFscmVhZHkgaW4gdGhlIERPTSAocmF0aGVyIHRoZW4gZGVzdHJveSBhbmRcbiAqIHJlY3JhdGUgY29udGVudC4pXG4gKlxuICogQHBhcmFtIHBhcmVudCAtIEVsZW1lbnQgd2hpY2ggd2lsbCBhY3QgYXMgYSBwYXJlbnQgdG8gYGpzeE5vZGVgLiBXaGVuXG4gKiAgICAgcG9zc2libGUgdGhlIHJlbmRlcmluZyB3aWxsIHRyeSB0byByZXVzZSBleGlzdGluZyBub2Rlcy5cbiAqIEBwYXJhbSBqc3hOb2RlIC0gSlNYIHRvIHJlbmRlclxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyKFxuICBwYXJlbnQ6IEVsZW1lbnQgfCBEb2N1bWVudCxcbiAganN4Tm9kZTogSlNYTm9kZTx1bmtub3duPiB8IEZ1bmN0aW9uQ29tcG9uZW50PGFueT5cbik6IFZhbHVlT3JQcm9taXNlPFJlbmRlckNvbnRleHQ+IHtcbiAgLy8gSWYgaW5wdXQgaXMgbm90IEpTWCwgY29udmVydCBpdFxuICBpZiAoIWlzSlNYTm9kZShqc3hOb2RlKSkge1xuICAgIGpzeE5vZGUgPSBqc3goanN4Tm9kZSwgbnVsbCk7XG4gIH1cbiAgY29uc3QgZG9jID0gZ2V0RG9jdW1lbnQocGFyZW50KTtcbiAgY29uc3QgY29udGFpbmVyRWwgPSBnZXRFbGVtZW50KHBhcmVudCk7XG4gIHJlc3VtZUlmTmVlZGVkKGNvbnRhaW5lckVsKTtcbiAgaW5qZWN0UVZlcnNpb24oY29udGFpbmVyRWwpO1xuXG4gIGNvbnN0IGN0eDogUmVuZGVyQ29udGV4dCA9IHtcbiAgICBkb2MsXG4gICAgZ2xvYmFsU3RhdGU6IGdldFJlbmRlcmluZ1N0YXRlKGNvbnRhaW5lckVsKSxcbiAgICBob3N0RWxlbWVudHM6IG5ldyBTZXQoKSxcbiAgICBvcGVyYXRpb25zOiBbXSxcbiAgICByb290czogW3BhcmVudCBhcyBFbGVtZW50XSxcbiAgICBjb21wb25lbnQ6IHVuZGVmaW5lZCxcbiAgICBjb250YWluZXJFbCxcbiAgICBwZXJmOiB7XG4gICAgICB2aXNpdGVkOiAwLFxuICAgICAgdGltaW5nOiBbXSxcbiAgICB9LFxuICB9O1xuXG4gIHJldHVybiB0aGVuKHZpc2l0SnN4Tm9kZShjdHgsIHBhcmVudCBhcyBFbGVtZW50LCBwcm9jZXNzTm9kZShqc3hOb2RlKSwgZmFsc2UpLCAoKSA9PiB7XG4gICAgZXhlY3V0ZUNvbnRleHQoY3R4KTtcbiAgICBpZiAoIXFUZXN0KSB7XG4gICAgICBpbmplY3RRd2lrU2xvdENTUyhwYXJlbnQpO1xuICAgIH1cblxuICAgIGlmIChxRGV2KSB7XG4gICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICE9IG51bGwpIHtcbiAgICAgICAgcHJpbnRSZW5kZXJTdGF0cyhjdHgpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY3R4O1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluamVjdFF3aWtTbG90Q1NTKGRvY09yRWxtOiBEb2N1bWVudCB8IEVsZW1lbnQpIHtcbiAgY29uc3QgZG9jID0gZ2V0RG9jdW1lbnQoZG9jT3JFbG0pO1xuICBjb25zdCBlbGVtZW50ID0gaXNEb2N1bWVudChkb2NPckVsbSkgPyBkb2NPckVsbS5oZWFkIDogZG9jT3JFbG07XG4gIGNvbnN0IHN0eWxlID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHN0eWxlLnNldEF0dHJpYnV0ZSgnaWQnLCAncXdpay9iYXNlLXN0eWxlcycpO1xuICBzdHlsZS50ZXh0Q29udGVudCA9IGBxXFxcXDpzbG90e2Rpc3BsYXk6Y29udGVudHN9cVxcXFw6ZmFsbGJhY2t7ZGlzcGxheTpub25lfXFcXFxcOmZhbGxiYWNrOmxhc3QtY2hpbGR7ZGlzcGxheTpjb250ZW50c31gO1xuICBlbGVtZW50Lmluc2VydEJlZm9yZShzdHlsZSwgZWxlbWVudC5maXJzdENoaWxkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEVsZW1lbnQoZG9jT3JFbG06IERvY3VtZW50IHwgRWxlbWVudCk6IEVsZW1lbnQge1xuICByZXR1cm4gaXNEb2N1bWVudChkb2NPckVsbSkgPyBkb2NPckVsbS5kb2N1bWVudEVsZW1lbnQgOiBkb2NPckVsbTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluamVjdFFWZXJzaW9uKGNvbnRhaW5lckVsOiBFbGVtZW50KSB7XG4gIGNvbnRhaW5lckVsLnNldEF0dHJpYnV0ZSgncTp2ZXJzaW9uJywgdmVyc2lvbiB8fCAnJyk7XG4gIGNvbnRhaW5lckVsLnNldEF0dHJpYnV0ZShRQ29udGFpbmVyQXR0ciwgJycpO1xufVxuIl19", "import { getInvokeContext } from './use-core';\n/**\n * @public\n */\nexport function useDocument() {\n    const doc = getInvokeContext().doc;\n    if (!doc) {\n        throw new Error('Cant access document for existing context');\n    }\n    return doc;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWRvY3VtZW50LnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1kb2N1bWVudC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRTlDOztHQUVHO0FBQ0gsTUFBTSxVQUFVLFdBQVc7SUFDekIsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQyxHQUFHLENBQUM7SUFDbkMsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNSLE1BQU0sSUFBSSxLQUFLLENBQUMsMkNBQTJDLENBQUMsQ0FBQztLQUM5RDtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEludm9rZUNvbnRleHQgfSBmcm9tICcuL3VzZS1jb3JlJztcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VEb2N1bWVudCgpOiBEb2N1bWVudCB7XG4gIGNvbnN0IGRvYyA9IGdldEludm9rZUNvbnRleHQoKS5kb2M7XG4gIGlmICghZG9jKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW50IGFjY2VzcyBkb2N1bWVudCBmb3IgZXhpc3RpbmcgY29udGV4dCcpO1xuICB9XG4gIHJldHVybiBkb2M7XG59XG4iXX0=", "import { assertEqual } from '../assert/assert';\nimport { getInvokeContext } from './use-core';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useEvent\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useEvent instead)\n/**\n * Retrieves the current event which triggered the action.\n *\n * NOTE: The `useEvent` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useEvent(expectEventType) {\n    const event = getInvokeContext().event;\n    expectEventType && assertEqual(event.type, expectEventType);\n    return event;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWV2ZW50LnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1ldmVudC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUU5QyxzRUFBc0U7QUFDdEUseUNBQXlDO0FBQ3pDLGtHQUFrRztBQUNsRzs7Ozs7OztHQU9HO0FBQ0gsVUFBVTtBQUNWLE1BQU0sVUFBVSxRQUFRLENBQW1CLGVBQXdCO0lBQ2pFLE1BQU0sS0FBSyxHQUFHLGdCQUFnQixFQUFFLENBQUMsS0FBMEIsQ0FBQztJQUM1RCxlQUFlLElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDNUQsT0FBTyxLQUFxQixDQUFDO0FBQy9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnRFcXVhbCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuaW1wb3J0IHsgZ2V0SW52b2tlQ29udGV4dCB9IGZyb20gJy4vdXNlLWNvcmUnO1xuXG4vLyA8ZG9jcyBtYXJrZG93bj1cImh0dHBzOi8vaGFja21kLmlvL2xROHY3ZnloUi1XRDNiLTJhUlVweXcjdXNlRXZlbnRcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCBodHRwczovL2hhY2ttZC5pby9AcXdpay1kb2NzL0JreHBTejgwWS8lMkZsUTh2N2Z5aFItV0QzYi0yYVJVcHl3JTNGYm90aCN1c2VFdmVudCBpbnN0ZWFkKVxuLyoqXG4gKiBSZXRyaWV2ZXMgdGhlIGN1cnJlbnQgZXZlbnQgd2hpY2ggdHJpZ2dlcmVkIHRoZSBhY3Rpb24uXG4gKlxuICogTk9URTogVGhlIGB1c2VFdmVudGAgbWV0aG9kIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIHN5bmNocm9ub3VzIHBvcnRpb24gb2YgdGhlIGNhbGxiYWNrXG4gKiAoYmVmb3JlIGFueSBgYXdhaXRgIHN0YXRlbWVudHMuKVxuICpcbiAqIEBwdWJsaWNcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGZ1bmN0aW9uIHVzZUV2ZW50PEVWRU5UIGV4dGVuZHMge30+KGV4cGVjdEV2ZW50VHlwZT86IHN0cmluZyk6IEVWRU5UIHtcbiAgY29uc3QgZXZlbnQgPSBnZXRJbnZva2VDb250ZXh0KCkuZXZlbnQgYXMgeyB0eXBlPzogc3RyaW5nIH07XG4gIGV4cGVjdEV2ZW50VHlwZSAmJiBhc3NlcnRFcXVhbChldmVudC50eXBlLCBleHBlY3RFdmVudFR5cGUpO1xuICByZXR1cm4gZXZlbnQgYXMgYW55IGFzIEVWRU5UO1xufVxuIl19", "import { getInvokeContext } from './use-core';\nexport function useURL() {\n    const url = getInvokeContext().url;\n    if (!url) {\n        // TODO(misko): centralize\n        throw new Error('Q-ERROR: no URL is associated with the execution context');\n    }\n    return url;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXVybC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2UtdXJsLnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFOUMsTUFBTSxVQUFVLE1BQU07SUFDcEIsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQyxHQUFHLENBQUM7SUFDbkMsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNSLDBCQUEwQjtRQUMxQixNQUFNLElBQUksS0FBSyxDQUFDLDBEQUEwRCxDQUFDLENBQUM7S0FDN0U7SUFDRCxPQUFPLEdBQUksQ0FBQztBQUNkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VVUkwoKTogVVJMIHtcbiAgY29uc3QgdXJsID0gZ2V0SW52b2tlQ29udGV4dCgpLnVybDtcbiAgaWYgKCF1cmwpIHtcbiAgICAvLyBUT0RPKG1pc2tvKTogY2VudHJhbGl6ZVxuICAgIHRocm93IG5ldyBFcnJvcignUS1FUlJPUjogbm8gVVJMIGlzIGFzc29jaWF0ZWQgd2l0aCB0aGUgZXhlY3V0aW9uIGNvbnRleHQnKTtcbiAgfVxuICByZXR1cm4gdXJsITtcbn1cbiJdfQ==", "import { wrapSubscriber } from './use-subscriber';\nimport { assertDefined } from '../assert/assert';\nimport { parseQRL } from '../import/qrl';\nimport { qInflate } from '../json/q-json';\nimport { getContext, resumeIfNeeded } from '../props/props';\nimport { getContainer, getInvokeContext } from './use-core';\nimport { useURL } from './use-url.public';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useLexicalScope\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useLexicalScope instead)\n/**\n * Used by the Qwik Optimizer to restore the lexical scoped variables.\n *\n * This method should not be present in the application source code.\n *\n * NOTE: `useLexicalScope` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useLexicalScope() {\n    var _a;\n    const context = getInvokeContext();\n    const hostElement = context.hostElement;\n    const qrl = (_a = context.qrl) !== null && _a !== void 0 ? _a : parseQRL(decodeURIComponent(String(useURL())), hostElement);\n    if (qrl.captureRef == null) {\n        const el = context.element;\n        assertDefined(el);\n        resumeIfNeeded(getContainer(el));\n        const ctx = getContext(el);\n        qrl.captureRef = qrl.capture.map((idx) => qInflate(idx, ctx));\n    }\n    if (context.subscriptions && hostElement) {\n        return qrl.captureRef.map((obj) => wrapSubscriber(obj, hostElement));\n    }\n    return qrl.captureRef;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWxleGljYWwtc2NvcGUucHVibGljLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91c2UvdXNlLWxleGljYWwtc2NvcGUucHVibGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDMUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsWUFBWSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQzVELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUUxQyw2RUFBNkU7QUFDN0UseUNBQXlDO0FBQ3pDLHlHQUF5RztBQUN6Rzs7Ozs7Ozs7O0dBU0c7QUFDSCxVQUFVO0FBQ1YsTUFBTSxVQUFVLGVBQWU7O0lBQzdCLE1BQU0sT0FBTyxHQUFHLGdCQUFnQixFQUFFLENBQUM7SUFDbkMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQztJQUN4QyxNQUFNLEdBQUcsR0FBRyxNQUFBLE9BQU8sQ0FBQyxHQUFHLG1DQUFJLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3ZGLElBQUksR0FBRyxDQUFDLFVBQVUsSUFBSSxJQUFJLEVBQUU7UUFDMUIsTUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLE9BQVEsQ0FBQztRQUM1QixhQUFhLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDbEIsY0FBYyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUUsQ0FBQyxDQUFDO1FBQ2xDLE1BQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMzQixHQUFHLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxPQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7S0FDaEU7SUFDRCxJQUFJLE9BQU8sQ0FBQyxhQUFhLElBQUksV0FBVyxFQUFFO1FBQ3hDLE9BQU8sR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLGNBQWMsQ0FBQyxHQUFHLEVBQUUsV0FBVyxDQUFDLENBQVMsQ0FBQztLQUM5RTtJQUNELE9BQU8sR0FBRyxDQUFDLFVBQWtCLENBQUM7QUFDaEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdyYXBTdWJzY3JpYmVyIH0gZnJvbSAnLi91c2Utc3Vic2NyaWJlcic7XG5pbXBvcnQgeyBhc3NlcnREZWZpbmVkIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBwYXJzZVFSTCB9IGZyb20gJy4uL2ltcG9ydC9xcmwnO1xuaW1wb3J0IHsgcUluZmxhdGUgfSBmcm9tICcuLi9qc29uL3EtanNvbic7XG5pbXBvcnQgeyBnZXRDb250ZXh0LCByZXN1bWVJZk5lZWRlZCB9IGZyb20gJy4uL3Byb3BzL3Byb3BzJztcbmltcG9ydCB7IGdldENvbnRhaW5lciwgZ2V0SW52b2tlQ29udGV4dCB9IGZyb20gJy4vdXNlLWNvcmUnO1xuaW1wb3J0IHsgdXNlVVJMIH0gZnJvbSAnLi91c2UtdXJsLnB1YmxpYyc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiaHR0cHM6Ly9oYWNrbWQuaW8vbFE4djdmeWhSLVdEM2ItMmFSVXB5dyN1c2VMZXhpY2FsU2NvcGVcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCBodHRwczovL2hhY2ttZC5pby9AcXdpay1kb2NzL0JreHBTejgwWS8lMkZsUTh2N2Z5aFItV0QzYi0yYVJVcHl3JTNGYm90aCN1c2VMZXhpY2FsU2NvcGUgaW5zdGVhZClcbi8qKlxuICogVXNlZCBieSB0aGUgUXdpayBPcHRpbWl6ZXIgdG8gcmVzdG9yZSB0aGUgbGV4aWNhbCBzY29wZWQgdmFyaWFibGVzLlxuICpcbiAqIFRoaXMgbWV0aG9kIHNob3VsZCBub3QgYmUgcHJlc2VudCBpbiB0aGUgYXBwbGljYXRpb24gc291cmNlIGNvZGUuXG4gKlxuICogTk9URTogYHVzZUxleGljYWxTY29wZWAgbWV0aG9kIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIHN5bmNocm9ub3VzIHBvcnRpb24gb2YgdGhlIGNhbGxiYWNrXG4gKiAoYmVmb3JlIGFueSBgYXdhaXRgIHN0YXRlbWVudHMuKVxuICpcbiAqIEBwdWJsaWNcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGZ1bmN0aW9uIHVzZUxleGljYWxTY29wZTxWQVJTIGV4dGVuZHMgYW55W10+KCk6IFZBUlMge1xuICBjb25zdCBjb250ZXh0ID0gZ2V0SW52b2tlQ29udGV4dCgpO1xuICBjb25zdCBob3N0RWxlbWVudCA9IGNvbnRleHQuaG9zdEVsZW1lbnQ7XG4gIGNvbnN0IHFybCA9IGNvbnRleHQucXJsID8/IHBhcnNlUVJMKGRlY29kZVVSSUNvbXBvbmVudChTdHJpbmcodXNlVVJMKCkpKSwgaG9zdEVsZW1lbnQpO1xuICBpZiAocXJsLmNhcHR1cmVSZWYgPT0gbnVsbCkge1xuICAgIGNvbnN0IGVsID0gY29udGV4dC5lbGVtZW50ITtcbiAgICBhc3NlcnREZWZpbmVkKGVsKTtcbiAgICByZXN1bWVJZk5lZWRlZChnZXRDb250YWluZXIoZWwpISk7XG4gICAgY29uc3QgY3R4ID0gZ2V0Q29udGV4dChlbCk7XG4gICAgcXJsLmNhcHR1cmVSZWYgPSBxcmwuY2FwdHVyZSEubWFwKChpZHgpID0+IHFJbmZsYXRlKGlkeCwgY3R4KSk7XG4gIH1cbiAgaWYgKGNvbnRleHQuc3Vic2NyaXB0aW9ucyAmJiBob3N0RWxlbWVudCkge1xuICAgIHJldHVybiBxcmwuY2FwdHVyZVJlZi5tYXAoKG9iaikgPT4gd3JhcFN1YnNjcmliZXIob2JqLCBob3N0RWxlbWVudCkpIGFzIFZBUlM7XG4gIH1cbiAgcmV0dXJuIHFybC5jYXB0dXJlUmVmIGFzIFZBUlM7XG59XG4iXX0=", "import { useDocument } from '../use/use-document.public';\nimport { getProxyMap, qObject } from '../object/q-object';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useStore\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useStore instead)\n/**\n * Creates a object that Qwik can track across serializations.\n *\n * Use `useStore` to create state for your application. The return object is a proxy which has a\n * unique ID. The ID of the object is used in the `QRL`s to refer to the store.\n *\n * ## Example\n *\n * Example showing how `useStore` is used in Counter example to keep track of count.\n *\n * ```typescript\n * export const Counter = component$(() => {\n *   const store = useStore({ count: 0 });\n *   return $(() => <button onClick$={() => store.count++}>{store.count}</button>);\n * });\n * ```\n *\n * @public\n */\n// </docs>\nexport function useStore(initialState) {\n    return qObject(initialState, getProxyMap(useDocument()));\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXN0b3JlLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1zdG9yZS5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFMUQsc0VBQXNFO0FBQ3RFLHlDQUF5QztBQUN6QyxrR0FBa0c7QUFDbEc7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWtCRztBQUNILFVBQVU7QUFDVixNQUFNLFVBQVUsUUFBUSxDQUFtQixZQUFtQjtJQUM1RCxPQUFPLE9BQU8sQ0FBQyxZQUFZLEVBQUUsV0FBVyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUMzRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRG9jdW1lbnQgfSBmcm9tICcuLi91c2UvdXNlLWRvY3VtZW50LnB1YmxpYyc7XG5pbXBvcnQgeyBnZXRQcm94eU1hcCwgcU9iamVjdCB9IGZyb20gJy4uL29iamVjdC9xLW9iamVjdCc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiaHR0cHM6Ly9oYWNrbWQuaW8vbFE4djdmeWhSLVdEM2ItMmFSVXB5dyN1c2VTdG9yZVwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IGh0dHBzOi8vaGFja21kLmlvL0Bxd2lrLWRvY3MvQmt4cFN6ODBZLyUyRmxROHY3ZnloUi1XRDNiLTJhUlVweXclM0Zib3RoI3VzZVN0b3JlIGluc3RlYWQpXG4vKipcbiAqIENyZWF0ZXMgYSBvYmplY3QgdGhhdCBRd2lrIGNhbiB0cmFjayBhY3Jvc3Mgc2VyaWFsaXphdGlvbnMuXG4gKlxuICogVXNlIGB1c2VTdG9yZWAgdG8gY3JlYXRlIHN0YXRlIGZvciB5b3VyIGFwcGxpY2F0aW9uLiBUaGUgcmV0dXJuIG9iamVjdCBpcyBhIHByb3h5IHdoaWNoIGhhcyBhXG4gKiB1bmlxdWUgSUQuIFRoZSBJRCBvZiB0aGUgb2JqZWN0IGlzIHVzZWQgaW4gdGhlIGBRUkxgcyB0byByZWZlciB0byB0aGUgc3RvcmUuXG4gKlxuICogIyMgRXhhbXBsZVxuICpcbiAqIEV4YW1wbGUgc2hvd2luZyBob3cgYHVzZVN0b3JlYCBpcyB1c2VkIGluIENvdW50ZXIgZXhhbXBsZSB0byBrZWVwIHRyYWNrIG9mIGNvdW50LlxuICpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGV4cG9ydCBjb25zdCBDb3VudGVyID0gY29tcG9uZW50JCgoKSA9PiB7XG4gKiAgIGNvbnN0IHN0b3JlID0gdXNlU3RvcmUoeyBjb3VudDogMCB9KTtcbiAqICAgcmV0dXJuICQoKCkgPT4gPGJ1dHRvbiBvbkNsaWNrJD17KCkgPT4gc3RvcmUuY291bnQrK30+e3N0b3JlLmNvdW50fTwvYnV0dG9uPik7XG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIEBwdWJsaWNcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGZ1bmN0aW9uIHVzZVN0b3JlPFNUQVRFIGV4dGVuZHMge30+KGluaXRpYWxTdGF0ZTogU1RBVEUpOiBTVEFURSB7XG4gIHJldHVybiBxT2JqZWN0KGluaXRpYWxTdGF0ZSwgZ2V0UHJveHlNYXAodXNlRG9jdW1lbnQoKSkpO1xufVxuIl19"],
  "mappings": "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",
  "names": []
}
